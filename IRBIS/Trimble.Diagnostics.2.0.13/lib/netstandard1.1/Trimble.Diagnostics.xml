<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Trimble.Diagnostics</name>
    </assembly>
    <members>
        <member name="T:Trimble.Diagnostics.ILogger">
            <summary>
            The logger interface.
            </summary>
        </member>
        <member name="M:Trimble.Diagnostics.ILogger.IsEnabled(Trimble.Diagnostics.LogLevel)">
            <summary>
            Checks if the given <paramref name="level"/> is enabled.
            </summary>
            <param name="level">The level to be checked.</param>
            <returns><c>true</c> if enabled.</returns>
        </member>
        <member name="M:Trimble.Diagnostics.ILogger.Log(Trimble.Diagnostics.LogLevel,System.Func{System.String})">
            <summary>
            Writes a log entry.
            </summary>
            <param name="level">The entry will be written on this level.</param>
            <param name="formatter">Function to create a <c>string</c> message. Called only if log message to be written based on the <paramref name="level"/>.</param>
        </member>
        <member name="M:Trimble.Diagnostics.ILogger.BeginScope(Trimble.Diagnostics.LogLevel,System.Func{System.String})">
            <summary>
            Begins a logical operation scope.
            </summary>
            <param name="level">The entry will be written on this level.</param>
            <param name="formatter">Function to create a <c>string</c> message. Called only if log message to be written based on the <paramref name="level"/>.</param>
            <returns>An <see cref="T:System.IDisposable"/> that ends the logical operation scope on dispose.</returns>
        </member>
        <member name="T:Trimble.Diagnostics.ILoggerFactory">
            <summary>
            Factory to create instances of <see cref="T:Trimble.Diagnostics.ILogger"/>.
            </summary>
        </member>
        <member name="M:Trimble.Diagnostics.ILoggerFactory.CreateLogger(System.String)">
            <summary>
            Creates a new <see cref="T:Trimble.Diagnostics.ILogger"/> instance.
            </summary>
            <param name="name">The event source name.</param>
            <returns>The <see cref="T:Trimble.Diagnostics.ILogger"/>.</returns>
        </member>
        <member name="T:Trimble.Diagnostics.LoggerFactory">
            <summary>
            The logger factory implementation.
            </summary>
        </member>
        <member name="M:Trimble.Diagnostics.LoggerFactory.CreateLogger(System.String)">
            <summary>
            Creates a new <see cref="T:Trimble.Diagnostics.ILogger"/> instance.
            </summary>
            <param name="name">The event source name.</param>
            <returns>The <see cref="T:Trimble.Diagnostics.ILogger"/>.</returns>
        </member>
        <member name="T:Trimble.Diagnostics.LogLevel">
            <summary>
            Defines logging severity levels.
            </summary>
        </member>
        <member name="F:Trimble.Diagnostics.LogLevel.Trace">
            <summary>
            Logs that contain the most detailed messages. These messages may contain sensitive application data.
            These messages are disabled by default and should never be enabled in a production environment.
            </summary>
        </member>
        <member name="F:Trimble.Diagnostics.LogLevel.Debug">
            <summary>
            Logs that are used for interactive investigation during development.  These logs should primarily contain
            information useful for debugging and have no long-term value.
            </summary>
        </member>
        <member name="F:Trimble.Diagnostics.LogLevel.Information">
            <summary>
            Logs that track the general flow of the application. These logs should have long-term value.
            </summary>
        </member>
        <member name="F:Trimble.Diagnostics.LogLevel.Warning">
            <summary>
            Logs that highlight an abnormal or unexpected event in the application flow, but do not otherwise cause the
            application execution to stop.
            </summary>
        </member>
        <member name="F:Trimble.Diagnostics.LogLevel.Error">
            <summary>
            Logs that highlight when the current flow of execution is stopped due to a failure. These should indicate a
            failure in the current activity, not an application-wide failure.
            </summary>
        </member>
        <member name="F:Trimble.Diagnostics.LogLevel.Critical">
            <summary>
            Logs that describe an unrecoverable application or system crash, or a catastrophic failure that requires
            immediate attention.
            </summary>
        </member>
        <member name="T:Trimble.Diagnostics.MessageFormatter">
            <summary>
            The tools for formatting log output.
            </summary>
        </member>
        <member name="M:Trimble.Diagnostics.MessageFormatter.HashString(System.Object)">
            <summary>
            Generate a normalized string that can be printed for the object.
            </summary>
            <param name="obj">The object.</param>
            <returns>The normalized string.</returns>
        </member>
        <member name="M:Trimble.Diagnostics.MessageFormatter.GetObjectName(System.Object)">
            <summary>
            Converts an object to a normalized string that can be printed.
            </summary>
            <param name="obj">The object.</param>
            <returns>The normalized string that can be printed.</returns>
        </member>
        <member name="M:Trimble.Diagnostics.MessageFormatter.FormatMethodCall(System.Object,System.String,System.Object[])">
            <summary>
            Formats string for the instance method invokation.
            </summary>
            <param name="obj">The object instance.</param>
            <param name="method">The method name.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="M:Trimble.Diagnostics.MessageFormatter.FormatMethodCall(System.Type,System.String,System.Object[])">
            <summary>
            Formats string for the static method invokation.
            </summary>
            <param name="type">The object type.</param>
            <param name="parameters">The parameter object.</param>
            <param name="method">The optional method name.</param>
        </member>
        <member name="T:Trimble.Diagnostics.NoopDisposable">
            <summary>
            Noop disposable.
            </summary>
        </member>
        <member name="M:Trimble.Diagnostics.NoopDisposable.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Trimble.Diagnostics.NoopDisposable"/> class from being created.
            </summary>
        </member>
        <member name="F:Trimble.Diagnostics.NoopDisposable.Instance">
            <summary>
            Gets the singleton.
            </summary>
            <value>The instance.</value>
        </member>
        <member name="M:Trimble.Diagnostics.NoopDisposable.Dispose">
            <inheritdoc />
        </member>
        <member name="T:Trimble.Diagnostics.NullLogger">
            <summary>
            The logger that does nothing.
            </summary>
        </member>
        <member name="P:Trimble.Diagnostics.NullLogger.Instance">
            <summary>
            The singleton.
            </summary>
        </member>
        <member name="M:Trimble.Diagnostics.NullLogger.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Diagnostics.NullLogger"/> class.
            </summary>
        </member>
        <member name="M:Trimble.Diagnostics.NullLogger.IsEnabled(Trimble.Diagnostics.LogLevel)">
            <inheritdoc />
        </member>
        <member name="M:Trimble.Diagnostics.NullLogger.Log(Trimble.Diagnostics.LogLevel,System.Func{System.String})">
            <inheritdoc />
        </member>
        <member name="M:Trimble.Diagnostics.NullLogger.BeginScope(Trimble.Diagnostics.LogLevel,System.Func{System.String})">
            <inheritdoc />
        </member>
        <member name="T:Trimble.Diagnostics.PerformanceScope">
            <summary>
            An <see cref="T:System.IDisposable"/> that tracks operation time.
            It will print two message to the log in the begining (prefixed with "Begin - ") and 
            by the end (prefixed with "End - ") of operation scope with the time operation took.
            </summary>
        </member>
        <member name="F:Trimble.Diagnostics.PerformanceScope.logger">
            <summary>
            The logger.
            </summary>
        </member>
        <member name="F:Trimble.Diagnostics.PerformanceScope.level">
            <summary>
            The log level.
            </summary>
        </member>
        <member name="F:Trimble.Diagnostics.PerformanceScope.message">
            <summary>
            The message.
            </summary>
        </member>
        <member name="F:Trimble.Diagnostics.PerformanceScope.stopwatch">
            <summary>
            The message.
            </summary>
        </member>
        <member name="M:Trimble.Diagnostics.PerformanceScope.#ctor(Trimble.Diagnostics.ILogger,Trimble.Diagnostics.LogLevel,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Diagnostics.PerformanceScope"/> class.
            </summary>
            <param name="logger">The logger.</param>
            <param name="level">The logging level.</param>
            <param name="message">The log message.</param>
        </member>
        <member name="M:Trimble.Diagnostics.PerformanceScope.Dispose">
            <summary>
            The dispose.
            </summary>
        </member>
    </members>
</doc>
