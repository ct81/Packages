<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Trimble.Connect.Client</name>
    </assembly>
    <members>
        <member name="T:Trimble.Connect.Client.AppsController">
            <summary>
            The application controller.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.AppsController.Client">
            <summary>
            The client.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.AppsController.RootPath">
            <summary>
            The API path.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.AppsController.VersionInfoPath">
            <summary>
            The API path.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.AppsController.ApiKeyPath">
            <summary>
            The API path.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.AppsController.AccessTokenPath">
            <summary>
            The API path.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.AppsController.UsersPath">
            <summary>
            The API path.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.AppsController.#ctor(Trimble.Connect.Client.TrimbleConnectClient)">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.AppsController"/> class.
            </summary>
            <param name="client">The client.</param>
        </member>
        <member name="P:Trimble.Connect.Client.AppsController.CurrentApp">
            <summary>
            Gets or sets the current application.
            </summary>
            <value>The application with access token.</value>
        </member>
        <member name="M:Trimble.Connect.Client.AppsController.GetAllAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Returns a collection of all entities.
            Additional <paramref name="parameters"/> could be sent to through the query string.
            </summary>
            <param name="parameters">
            An optional dictionary of user-defined parameters and values to include in the request URI query string.
            </param>
            <param name="pageSize">The page size.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The collection of entities.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.AppsController.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns the entity by identifier.
            </summary>
            <param name="appId">The application identifier.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The entity.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.AppsController.GetVersionInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Returns the application version information.
            </summary>
            <param name="name">The application identifier.</param>
            <param name="platform">The platform identifier, e.g. WIN64.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The entity.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.AppsController.GetApiKeyAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the application API key.
            </summary>
            <param name="appId">The application identifier.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The user profile.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.AppsController.GetAccessTokenAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the application access token.
            </summary>
            <param name="appId">The application identifier.</param>
            <param name="apiKey">The API key.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The user profile.</returns>
            <remarks>Sets the <see cref="P:Trimble.Connect.Client.AppsController.CurrentApp"/>.</remarks>
        </member>
        <member name="M:Trimble.Connect.Client.AppsController.GetSettingsAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets an application settings.
            </summary>
            <param name="userId">The user identifier to get settings for.</param>
            <param name="appId">The application identifier to get settings for.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The application settings.</returns>
            <remarks>
            The application settings are cross project per user per application settings.
            </remarks>
        </member>
        <member name="M:Trimble.Connect.Client.AppsController.SetSettingsAsync(Trimble.Connect.Client.Models.AppSettings,System.Threading.CancellationToken)">
            <summary>
            Sets an application settings overriding previous settings.
            </summary>
            <param name="settings">The application settings to set.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The settings.</returns>
            <remarks>
            The application settings are cross project per user per application settings.
            </remarks>
        </member>
        <member name="M:Trimble.Connect.Client.AppsController.GetRequestBody(Trimble.Connect.Client.Models.AppSettings)">
            <summary>
            Converts the object template to JSON body to send in request.
            </summary>
            <param name="settings">The settings.</param>
            <returns>The JSON body.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.AppsControllerExtensions">
            <summary>
            The <see cref="T:Trimble.Connect.Client.IAppsController"/> extensions.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.AppsControllerExtensions.GetSettingsAsync(Trimble.Connect.Client.IAppsController,System.Threading.CancellationToken)">
            <summary>
            Gets an application settings for the current app (<see cref="P:Trimble.Connect.Client.IAppsController.CurrentApp"/>) and the current user (<see cref="P:Trimble.Connect.Client.ITrimbleConnectClient.CurrentUser"/>).
            </summary>
            <param name="controller">The app controller.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The settings.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.AppsControllerExtensions.GetSettingsAsync(Trimble.Connect.Client.IAppsController,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets an application settings for the application with identifier <paramref name="appId"/> for the current user (<see cref="P:Trimble.Connect.Client.ITrimbleConnectClient.CurrentUser"/>).
            </summary>
            <param name="controller">The app controller.</param>
            <param name="appId">The application identifier to get settings for.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The settings.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.AppsControllerExtensions.SetSettingsAsync(Trimble.Connect.Client.IAppsController,System.String,System.Threading.CancellationToken)">
            <summary>
            Sets an application settings for the current app (<see cref="P:Trimble.Connect.Client.IAppsController.CurrentApp"/>) and for the current user (<see cref="P:Trimble.Connect.Client.ITrimbleConnectClient.CurrentUser"/>).
            Previous settings are overridden.
            </summary>
            <param name="controller">The apps controller.</param>
            <param name="settings">The application settings to set.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The settings.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.AppsControllerExtensions.SetSettingsAsync(Trimble.Connect.Client.IAppsController,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Sets an application settings for the application with identifier <paramref name="appId"/> for the current user (<see cref="P:Trimble.Connect.Client.ITrimbleConnectClient.CurrentUser"/>).
            Previous settings are overridden.
            </summary>
            <param name="controller">The apps controller.</param>
            <param name="appId">The application identifier to set settings for.</param>
            <param name="settings">The application settings to set.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The settings.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.AttachmentsController">
            <summary>
            The extensions for interface to manipulate attachments.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.AttachmentsController.GetAttachmentsAsync(Trimble.Connect.Client.TrimbleConnectClient,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the comment attachments.
            </summary>
            <param name="client">The client.</param>
            <param name="path">The url path.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The collection of attachments.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.AttachmentsController.ReadAsAttachments(System.Net.Http.HttpContent,System.Threading.CancellationToken)">
            <summary>
            Get the attachments from the response content.
            </summary>
            <param name="content">The content.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The collection of attachments.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.AttachmentsController.CreateAttachmentsContent(System.Collections.Generic.IEnumerable{Trimble.Connect.Client.Models.Attachment})">
            <summary>
            Creates a request body with list of attachments.
            </summary>
            <param name="attachments">The collection of attachments.</param>
            <returns>The message content.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.AttachmentsControllerExtensions">
            <summary>
            The extensions for interface to manipulate attachments.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.AttachmentsControllerExtensions.GetAttachmentsAsync``1(Trimble.Connect.Client.IAttachmentsController,``0,System.Threading.CancellationToken)">
            <summary>
            Get the attachments.
            </summary>
            <param name="client">The attachments manipulator.</param>
            <param name="entity">The entity.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <typeparam name="T">The entity type.</typeparam>
            <returns>The collection of new attached entities.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.AttachmentsControllerExtensions.AddAttachmentsAsync``1(Trimble.Connect.Client.IAttachmentsController,``0,Trimble.Connect.Client.Models.Attachment,System.Threading.CancellationToken)">
            <summary>
            Add attachment.
            </summary>
            <param name="client">The attachments manipulator.</param>
            <param name="entity">The entity.</param>
            <param name="attachment">The entity to attach.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <typeparam name="T">The entity type.</typeparam>
            <returns>The collection of entities that have been attached.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.AttachmentsControllerExtensions.AddAttachmentsAsync``1(Trimble.Connect.Client.IAttachmentsController,``0,Trimble.Connect.Client.Models.ObjectIdentity,System.Threading.CancellationToken)">
            <summary>
            Add attachment.
            </summary>
            <param name="client">The attachments manipulator.</param>
            <param name="entity">The entity.</param>
            <param name="attachment">The entity to attach.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <typeparam name="T">The entity type.</typeparam>
            <returns>The collection of entities that have been attached.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.AttachmentsControllerExtensions.AddAttachmentsAsync``1(Trimble.Connect.Client.IAttachmentsController,``0,System.Collections.Generic.IEnumerable{Trimble.Connect.Client.Models.Attachment},System.Threading.CancellationToken)">
            <summary>
            Add attachments.
            </summary>
            <param name="client">The attachments manipulator.</param>
            <param name="entity">The entity.</param>
            <param name="attachments">The collection of entities to attach.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <typeparam name="T">The entity type.</typeparam>
            <returns>The collection of entities that have been attached.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.AttachmentsControllerExtensions.AddAttachmentsAsync``1(Trimble.Connect.Client.IAttachmentsController,``0,System.Collections.Generic.IEnumerable{Trimble.Connect.Client.Models.ObjectIdentity},System.Threading.CancellationToken)">
            <summary>
            Add attachments.
            </summary>
            <param name="client">The attachments manipulator.</param>
            <param name="entity">The comment.</param>
            <param name="entities">The collection of entities to attach.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <typeparam name="T">The entity type.</typeparam>
            <returns>The collection of entities that have been attached.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.AttachmentsControllerExtensions.EmbedAsync``2(Trimble.Connect.Client.IAttachmentsController,``0,``1,System.Threading.CancellationToken)">
            <summary>
            Embed entity.
            </summary>
            <param name="client">The attachments manipulator.</param>
            <param name="entity">The entity.</param>
            <param name="attachment">The entity to embed.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <typeparam name="T1">The entity type.</typeparam>
            <typeparam name="T2">The attachment entity type.</typeparam>
            <returns>The entity has been embedded.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.AttachmentsControllerExtensions.EmbedAsync``2(Trimble.Connect.Client.IAttachmentsController,``0,``1,System.IO.Stream,System.String,System.Threading.CancellationToken)">
            <summary>
            Embed entity with thumbnail.
            </summary>
            <param name="client">The attachments manipulator.</param>
            <param name="entity">The entity.</param>
            <param name="attachment">The entity to embed.</param>
            <param name="stream">
            The stream to read the thumbnail content from. 
            The stream is closed automatically when request is completed. 
            Can be null to create view without thumbnail.
            </param>
            <param name="contentType">The thumbnail content type.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <typeparam name="T1">The entity type.</typeparam>
            <typeparam name="T2">The attachment entity type.</typeparam>
            <returns>The entity has been embedded.</returns>
            <remarks>
            A new entity is created and embedded into the todo so the entity is not visible in the project root level, but only in the todo scope as attachment.
            </remarks>
        </member>
        <member name="M:Trimble.Connect.Client.AttachmentsControllerExtensions.DeleteAttachmentsAsync``1(Trimble.Connect.Client.IAttachmentsController,``0,Trimble.Connect.Client.Models.Attachment,System.Threading.CancellationToken)">
            <summary>
            Delete attachment.
            </summary>
            <param name="client">The attachments manipulator.</param>
            <param name="entity">The entity.</param>
            <param name="attachment">The entity to remove.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <typeparam name="T">The entity type.</typeparam>
            <returns>The task.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.AttachmentsControllerExtensions.DeleteAttachmentsAsync``1(Trimble.Connect.Client.IAttachmentsController,``0,Trimble.Connect.Client.Models.ObjectIdentity,System.Threading.CancellationToken)">
            <summary>
            Delete attachment.
            </summary>
            <param name="client">The attachments manipulator.</param>
            <param name="entity">The entity.</param>
            <param name="attachment">The entity to remove.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <typeparam name="T">The entity type.</typeparam>
            <returns>The task.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.AttachmentsControllerExtensions.DeleteAttachmentsAsync``1(Trimble.Connect.Client.IAttachmentsController,``0,System.Collections.Generic.IEnumerable{Trimble.Connect.Client.Models.Attachment},System.Threading.CancellationToken)">
            <summary>
            Delete attachments.
            </summary>
            <param name="client">The attachments manipulator.</param>
            <param name="entity">The entity.</param>
            <param name="attachments">The collection of attachments to remove.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <typeparam name="T">The entity type.</typeparam>
            <returns>The task.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.AttachmentsControllerExtensions.DeleteAttachmentsAsync``1(Trimble.Connect.Client.IAttachmentsController,``0,System.Collections.Generic.IEnumerable{Trimble.Connect.Client.Models.ObjectIdentity},System.Threading.CancellationToken)">
            <summary>
            Delete attachments.
            </summary>
            <param name="client">The attachments manipulator.</param>
            <param name="entity">The entity.</param>
            <param name="attachments">The collection of entities to remove from the todo.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <typeparam name="T">The entity type.</typeparam>
            <returns>The task.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.Base64UrlEncoder">
            <summary>
            Encodes and Decodes strings as Base64Url encoding.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Base64UrlEncoder.Base64PadCharacter">
            <summary>
            The pad character.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Base64UrlEncoder.Base64Character62">
            <summary>
            The character.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Base64UrlEncoder.Base64Character63">
            <summary>
            The character.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Base64UrlEncoder.Base64UrlCharacter62">
            <summary>
            The character.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Base64UrlEncoder.Base64UrlCharacter63">
            <summary>
            The character.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Base64UrlEncoder.DoubleBase64PadCharacter">
            <summary>
            The double pad character.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.Base64UrlEncoder.Encode(System.String)">
            <summary>
            The following functions perform base64url encoding which differs from regular base64 encoding as follows
            * padding is skipped so the pad character '=' doesn't have to be percent encoded
            * the 62 and 63 regular base64 encoding characters ('+' and '/') are replaced with ('-' and '_')
            These changes make the encoding's alphabet file and URL safe.
            </summary>
            <param name="arg">The string to encode.</param>
            <returns>Base64Url encoding of the UTF8 bytes.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.Base64UrlEncoder.Encode(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Converts a subset of an array of 8-bit unsigned integers to its equivalent string representation that is encoded with base-64-url digits. 
            Parameters specify the subset as an offset in the input array, and the number of elements in the array to convert.
            </summary>
            <param name="inArray">An array of 8-bit unsigned integers.</param>
            <param name="offset">The number of elements of inArray to convert.</param>
            <param name="length">An offset in inArray.</param>
            <returns>The string representation in base 64 URL encoding of length elements of inArray, starting at position offset.</returns>
            <exception cref="T:System.ArgumentNullException">If the 'inArray' is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If the offset or length is negative OR offset plus length is greater than the length of inArray.</exception>
        </member>
        <member name="M:Trimble.Connect.Client.Base64UrlEncoder.Encode(System.Byte[])">
            <summary>
            Converts a subset of an array of 8-bit unsigned integers to its equivalent string representation that is encoded with base-64-url digits. 
            Parameters specify the subset as an offset in the input array, and the number of elements in the array to convert.
            </summary>
            <param name="inArray">An array of 8-bit unsigned integers.</param>
            <returns>The string representation in base 64 URL encoding of length elements of inArray, starting at position offset.</returns>
            <exception cref="T:System.ArgumentNullException">If the 'inArray' is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If the offset or length is negative OR offset plus length is greater than the length of inArray.</exception>
        </member>
        <member name="M:Trimble.Connect.Client.Base64UrlEncoder.DecodeBytes(System.String)">
            <summary>
            Decodes bytes.
            </summary>
            <param name="arg">The input.</param>
            <returns>The output.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.Base64UrlEncoder.Decode(System.String)">
            <summary>
            Decodes the string from Base64UrlEncoded to UTF8.
            </summary>
            <param name="arg">The string to decode.</param>
            <returns>The UTF8 string.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.BIMObjectQueryResult">
            <summary>
            The entity query result implementation.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.BIMObjectQueryResult.client">
            <summary>
            The the client.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.BIMObjectQueryResult.uri">
            <summary>
            The uri to query from.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.BIMObjectQueryResult.query">
            <summary>
            The query criteria.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.BIMObjectQueryResult.pageSize">
            <summary>
            The page size.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.BIMObjectQueryResult.position">
            <summary>
            The current position.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.BIMObjectQueryResult.items">
            <summary>
            The maximum acceptable range for regions project collection.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.BIMObjectQueryResult.#ctor(Trimble.Connect.Client.ProjectClient,System.Nullable{System.Int64},System.Uri,Trimble.Connect.Client.Models.ObjectQuery)">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.BIMObjectQueryResult"/> class.
            </summary>
            <param name="client">The TC client.</param>
            <param name="pageSize">The size of range to request from pod.</param>
            <param name="uri">The uri to query from.</param>
            <param name="query">The query criteria.</param>
        </member>
        <member name="M:Trimble.Connect.Client.BIMObjectQueryResult.#ctor(Trimble.Connect.Client.BIMObjectQueryResult)">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.BIMObjectQueryResult"/> class.
            </summary>
            <param name="prevPage">The previous page.</param>
        </member>
        <member name="P:Trimble.Connect.Client.BIMObjectQueryResult.HasMore">
            <summary>
            Gets a value indicating whether there are more pages to fetch.
            </summary>
            <value>The flag if there are more pages to fetch.</value>
        </member>
        <member name="P:Trimble.Connect.Client.BIMObjectQueryResult.TotalLength">
            <summary>
            Gets a total number of items in all pages if available.
            </summary>
            <value>The total length.</value>
        </member>
        <member name="M:Trimble.Connect.Client.BIMObjectQueryResult.GetNextPageAsync(System.Threading.CancellationToken)">
            <summary>
            Fetches a next page of results.
            </summary>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The task.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.BIMObjectQueryResult.GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.BIMObjectQueryResult.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.BIMObjectQueryResult.CreateAsync(Trimble.Connect.Client.ProjectClient,System.Nullable{System.Int64},System.Uri,Trimble.Connect.Client.Models.ObjectQuery,System.Threading.CancellationToken)">
            <summary>
            Fetches a first page of results from server.
            </summary>
            <param name="client">The TC client.</param>
            <param name="pageSize">The size of range to request from pod.</param>
            <param name="uri">The uri to query from.</param>
            <param name="query">The query criteria.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The task.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.BIMObjectQueryResult.GetPageAsync(Trimble.Connect.Client.BIMObjectQueryResult,System.Threading.CancellationToken)">
            <summary>
            Fetches a page of items from server.
            </summary>
            <param name="page">The page to fetch.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The task.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.ClashSetsController">
            <summary>
            The controller for clash sets. Implements operations for <see cref="T:Trimble.Connect.Client.Models.ClashSet"/> entities.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.ClashSetsController.#ctor(Trimble.Connect.Client.ProjectClient)">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.ClashSetsController"/> class.
            </summary>
            <param name="projectClient">The project client.</param>
        </member>
        <member name="M:Trimble.Connect.Client.ClashSetsController.GetAllItemsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get all clash items in a clash set.
            </summary>
            <param name="clashSetId">The clash set identifier.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The collection of clashes.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.ClashSetsController.GetItemsAsync(System.String,System.Nullable{System.Int64},System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Get clash items in a clash set.
            Additional <paramref name="parameters"/> could be sent to through the query string.
            </summary>
            <param name="clashSetId">The clash set identifier.</param>
            <param name="pageSize">The page size.</param>
            <param name="parameters">
            An optional dictionary of user-defined parameters and values to include in the request URI query string.
            </param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The collection of clashes.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.ClashSetsController.GetUpdateRequestBody(Trimble.Connect.Client.Models.ClashSet)">
            <summary>
            Converts the object template to JSON body to send as an update request.
            </summary>
            <param name="entity">The entity.</param>
            <returns>The JSON body.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.ClashSetsControllerExtensions">
            <summary>
            The extensions for clash sets controller.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.ClashSetsControllerExtensions.CompletedAsync(Trimble.Connect.Client.IClashSetsController,System.String,System.Action{Trimble.Connect.Client.Models.ClashSet},System.Threading.CancellationToken)">
            <summary>
            Waits for the clash set execution to be completed.
            </summary>
            <param name="controller">The clashes manipulator.</param>
            <param name="clashIdentifier">The clash set identifier.</param>
            <param name="progress">The optional progress callback.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The clash set state.</returns>
            <remarks>The polling is done with 1 sec interval.</remarks>
        </member>
        <member name="T:Trimble.Connect.Client.CommentsController">
            <summary>
            The controller for comments. Implements operations for <see cref="T:Trimble.Connect.Client.Models.Comment"/> entities.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.CommentsController.FieldNameCommentId">
            <summary>
            The field name.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.CommentsController.#ctor(Trimble.Connect.Client.ProjectClient)">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.CommentsController"/> class.
            </summary>
            <param name="projectClient">The project client.</param>
        </member>
        <member name="M:Trimble.Connect.Client.CommentsController.GetAllAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Returns a collection of all entities in the project.
            </summary>
            <param name="parameters">
            A dictionary of user-defined parameters and values to include in the request URI query string.
            </param>
            <param name="pageSize">The page size.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The collection of entities.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.CommentsController.GetAllRelatedToAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Returns a collection of all comments related to given object.
            </summary>
            <param name="identifier">The identifier of the entity comments are related to.</param>
            <param name="type">The type of the entity comments are related to (<see cref="T:Trimble.Connect.Client.Models.EntityType"/>).</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The collection of comments.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.CommentsController.GetAttachmentsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the comment attachments.
            </summary>
            <param name="identifier">The comment identifier.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The collection of attachments.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.CommentsController.AddAttachmentsAsync(System.String,System.Collections.Generic.IEnumerable{Trimble.Connect.Client.Models.Attachment},System.Threading.CancellationToken)">
            <summary>
            Add attachments to the comment.
            </summary>
            <param name="identifier">The comment identifier.</param>
            <param name="attachments">The collection of entities to attach.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The collection of entities have been attached.</returns>
            <remarks>
            If some attachments in the <paramref name="attachments"/> are not valid they are ignored and call is succeeded returning only entities that were attached successfully.
            </remarks>
        </member>
        <member name="M:Trimble.Connect.Client.CommentsController.EmbedAsync``1(System.String,``0,System.Threading.CancellationToken)">
            <summary>
            Embed an entity to the comment.
            </summary>
            <param name="identifier">The comment identifier.</param>
            <param name="entity">The entity to embed.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The entity has been embedded.</returns>
            <typeparam name="T">The entity type.</typeparam>
            <remarks>A new entity is created and embedded into the todo so the entity is not visible in the project root level, but only in the todo scope as attachment.</remarks>
        </member>
        <member name="M:Trimble.Connect.Client.CommentsController.EmbedAsync``1(System.String,``0,System.IO.Stream,System.String,System.Threading.CancellationToken)">
            <summary>
            Embed an entity with thumbnail to the comment.
            </summary>
            <param name="identifier">The comment identifier.</param>
            <param name="entity">The entity to embed.</param>
            <param name="stream">
            The stream to read the thumbnail content from. 
            The stream is closed automatically when request is completed. 
            Can be null to create view without thumbnail.
            </param>
            <param name="contentType">The thumbnail content type.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The entity has been embedded.</returns>
            <typeparam name="T">The entity type.</typeparam>
            <remarks>A new entity is created and embedded into the todo so the entity is not visible in the project root level, but only in the todo scope as attachment.</remarks>
        </member>
        <member name="M:Trimble.Connect.Client.CommentsController.DeleteAttachmentsAsync(System.String,System.Collections.Generic.IEnumerable{Trimble.Connect.Client.Models.Attachment},System.Threading.CancellationToken)">
            <summary>
            Delete attachments from the comment.
            </summary>
            <param name="identifier">The comment identifier.</param>
            <param name="attachments">The collection of entities to remove from the todo.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The task.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.CommentsControllerExtensions">
            <summary>
            The extensions for interface to manipulate comments.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.CommentsControllerExtensions.GetAllRelatedToAsync(Trimble.Connect.Client.ICommentsController,Trimble.Connect.Client.Models.Entity,System.Threading.CancellationToken)">
            <summary>
            Returns a collection of all comments related to given entity.
            </summary>
            <param name="client">The comments manipulator.</param>
            <param name="entity">The entity comments are related to.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The collection of comments.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.CompaniesController">
            <summary>
            Project members controller.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.CompaniesController.#ctor(Trimble.Connect.Client.TrimbleConnectClient)">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.CompaniesController"/> class.
            </summary>
            <param name="client">The client.</param>
        </member>
        <member name="M:Trimble.Connect.Client.CompaniesController.GetAllMembersAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns a collection of all project members in the project.
            </summary>
            <param name="companyId">The company identifier.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The collection of project members.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.CompaniesController.GetMembersPagedAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Returns a collection of all members in the company paged.
            </summary>
            <param name="companyId">The company identifier.</param>
            <param name="pageSize">The page size. Default is <c>null</c> which means pagination is controlled by server.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The collection of company users.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.CompaniesController.AddMemberAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Adds a user to the company.
            </summary>
            <param name="companyId">The company identifier.</param>
            <param name="userId">The user's identifier or email.</param>
            <param name="role">The optional user's role.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The added person.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.CompaniesController.RemoveMemberAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a user from the company.
            </summary>
            <param name="companyId">The company identifier.</param>
            <param name="userId">The user identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A task.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.CompaniesController.SetMemberRoleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Set a role for the company member.
            </summary>
            <param name="companyId">The company identifier.</param>
            <param name="userId">The user identifier.</param>
            <param name="role">The user's role.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>A person.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.CompaniesController.UploadLogoAsync(System.String,System.IO.Stream,System.String,System.Action{System.Net.Http.Handlers.HttpProgressEventArgs},System.Threading.CancellationToken)">
            <summary>
            Uploads the logo.
            </summary>
            <param name="companyId">The company identifier.</param>
            <param name="stream">The stream to read the logo content from. The stream is closed automatically when request is completed.</param>
            <param name="contentType">The content type.</param>
            <param name="progress">The progress callback.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The project entity with thumbnail url.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.Controller`1">
            <summary>
            The controller to manipulate entities.
            </summary>
            <typeparam name="T">The entity type.</typeparam>
        </member>
        <member name="F:Trimble.Connect.Client.Controller`1.RootPath">
            <summary>
            The API root path.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.Controller`1.#ctor(Trimble.Connect.Client.TrimbleConnectClient,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.Controller`1"/> class.
            </summary>
            <param name="client">The client.</param>
            <param name="rootPath">The API root path.</param>
        </member>
        <member name="P:Trimble.Connect.Client.Controller`1.Client">
            <summary>
            Gets or sets the client.
            </summary>
            <value>The client.</value>
        </member>
        <member name="M:Trimble.Connect.Client.Controller`1.GetAllAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Trimble.Connect.Client.Controller`1.GetAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Trimble.Connect.Client.Controller`1.CreateAsync(`0,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Trimble.Connect.Client.Controller`1.UpdateAsync(`0,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Trimble.Connect.Client.Controller`1.DeleteAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Trimble.Connect.Client.Controller`1.MakeRequestAsync``1(System.Net.Http.HttpMethod,System.String,System.Threading.CancellationToken,System.Net.Http.HttpContent)">
            <summary>
            Makes a request and returns response.
            </summary>
            <param name="method">Http method to use for request.</param>
            <param name="path">The path of request.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <param name="content">The optional body of the request.</param>
            <typeparam name="TResponse">The DTO type in the response.</typeparam>
            <returns>The response object.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.Controller`1.GetCreateRequestBody(`0)">
            <summary>
            Converts the object template to JSON body to send as an create request.
            </summary>
            <param name="entity">The entity.</param>
            <returns>The JSON body.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.Controller`1.GetUpdateRequestBody(`0)">
            <summary>
            Converts the object template to JSON body to send as an update request.
            </summary>
            <param name="entity">The entity.</param>
            <returns>The JSON body.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.ControllerExtensions">
            <summary>
            The extensions for interface to manipulate entities.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.ControllerExtensions.GetAllAsync``1(Trimble.Connect.Client.IController{``0},System.Threading.CancellationToken)">
            <summary>
            Returns a collection of all entities.
            </summary>
            <param name="client">The controller.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <typeparam name="T">The entity type.</typeparam>
            <returns>The collection of entities.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.ControllerExtensions.GetAllAsync``1(Trimble.Connect.Client.IController{``0},System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Returns a collection of all entities.
            Additional <paramref name="parameters"/> could be sent to through the query string.
            </summary>
            <param name="client">The controller.</param>
            <param name="parameters">
            A dictionary of user-defined parameters and values to include in the request URI query string.
            </param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <typeparam name="T">The entity type.</typeparam>
            <returns>The collection of entities.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.ControllerExtensions.GetAllAsync``1(Trimble.Connect.Client.IController{``0},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Returns a collection of all entities.
            </summary>
            <param name="client">The controller.</param>
            <param name="pageSize">The page size.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <typeparam name="T">The entity type.</typeparam>
            <returns>The collection of entities.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.ControllerExtensions.DeleteAsync``1(Trimble.Connect.Client.IController{``0},``0,System.Threading.CancellationToken)">
            <summary>
            Deletes an entity.
            </summary>
            <param name="client">The entities manipulator.</param>
            <param name="entity">The entity.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <typeparam name="T">The entity type.</typeparam>
            <returns>A task.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.DateConverter">
            <summary>
            The date convertor for due dates in TCPS API.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.DateConverter.DefaultFormat">
            <summary>
            The default TCPS date format.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.DateConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.DateConverter"/> class.
            </summary>
        </member>
        <member name="T:Trimble.Connect.Client.DateTimeOffsetExtensions">
            <summary>
            Date Time offset extensions.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.DateTimeOffsetExtensions.TCPSTimeFormat">
            <summary>
            The time representation in TCPS.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.DateTimeOffsetExtensions.ToUrlSafeString(System.DateTimeOffset)">
            <summary>
            Converts a <see cref="T:System.DateTimeOffset"/> value to an URL safe string.
            </summary>
            <param name="time">The time.</param>
            <returns>The url safe string.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.Models.DeltaResponseConverter">
            <summary>
            The markup JSON converter.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.DeltaResponseConverter.entityTypes">
            <summary>
            Maps the entity type to <see cref="T:System.Type"/> appropriate for json conversion.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.Models.DeltaResponseConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            <c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Trimble.Connect.Client.Models.DeltaResponseConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param><param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>
            The object value.
            </returns>
        </member>
        <member name="M:Trimble.Connect.Client.Models.DeltaResponseConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:Newtonsoft.Json.JsonWriter"/> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:Trimble.Connect.Client.Models.DeltaResponseConverter.ParseJson(Newtonsoft.Json.JsonReader,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Parse the Json content.
            </summary>
            <param name="reader">The Json Reader.</param>
            <param name="serializer">The Json serializer.</param>
            <returns>Returns the object.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.Models.DeltaResponseConverter.ParseResponse(Newtonsoft.Json.Linq.JArray,System.String,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Extracts correct delta objects from the received JSON delta response object.
            </summary>
            <param name="jarr">The JSON array of received objects.</param>
            <param name="type">The entities type.</param>
            <param name="serializer">The JSON serializer.</param>
            <returns>The collection of entities.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.Models.DeltaResponseConverter.ReadViews(Newtonsoft.Json.JsonReader,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Read the views object array.
            </summary>
            <param name="reader">The json reader.</param>
            <param name="serializer">The json serializer.</param>
            <returns>The collection of entities.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.Models.DeltaResponseConverter.ReadView(Newtonsoft.Json.JsonReader,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Read View object.
            </summary>
            <param name="reader">The json reader.</param>
            <param name="serializer">The json serializer.</param>
            <returns>Deserialized view object.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.Models.EntityConverter">
            <summary>
            The entity JSON converter.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.Models.EntityConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            <c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Trimble.Connect.Client.Models.EntityConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param><param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>
            The object value.
            </returns>
        </member>
        <member name="M:Trimble.Connect.Client.Models.EntityConverter.Create(System.Type)">
            <summary>
            Creates an object which will then be populated by the serializer.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>The created object.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.Models.EntityConverter.Create(Newtonsoft.Json.Linq.JObject)">
            <summary>
            Creates an object which will then be populated by the serializer.
            </summary>
            <param name="jo">The JSON object.</param>
            <returns>The created object.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.Models.LinkNodeConverter">
            <summary>
            The <see cref="T:Trimble.Connect.Client.Models.Attachment"/> converter in the <see cref="T:Trimble.Connect.Client.Models.EntityLink"/> context.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.LinkNodeConverter.ElementNameTypes">
            <summary>
            A collection of known element names and corresponding types.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.Models.LinkNodeConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            <c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Trimble.Connect.Client.Models.LinkNodeConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param><param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>
            The object value.
            </returns>
        </member>
        <member name="M:Trimble.Connect.Client.Models.LinkNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:Newtonsoft.Json.JsonWriter"/> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="T:Trimble.Connect.Client.Models.MarkupConverter">
            <summary>
            The markup JSON converter.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.Models.MarkupConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param><param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>
            The object value.
            </returns>
        </member>
        <member name="M:Trimble.Connect.Client.Models.MarkupConverter.Create(System.Type)">
            <summary>
            Creates an object which will then be populated by the serializer.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>The created object.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.Models.MarkupConverter.Create(Newtonsoft.Json.Linq.JObject)">
            <summary>
            Creates an object which will then be populated by the serializer.
            </summary>
            <param name="jo">The JSON object.</param>
            <returns>The created object.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.Models.AccessLevel">
            <summary>
            The access level.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.AccessLevel.None">
            <summary>
            The value representing no access rights.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.AccessLevel.Read">
            <summary>
            The read only access.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.AccessLevel.Full">
            <summary>
            The full access.
            </summary>
        </member>
        <member name="T:Trimble.Connect.Client.Models.Alignment">
            <summary>
            The model alignment.
            The data structure is based on <code>IfcAxis2Placement3D</code>.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Alignment.FileIdentifier">
            <summary>
            Gets or sets the file identifier.
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Alignment.FileVersionIdentifier">
            <summary>
            Gets or sets the file version identifier.
            </summary>
            <value>The version identifier.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Alignment.LocationX">
            <summary>
            Gets or sets the location.
            </summary>
            <value>The location.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Alignment.LocationY">
            <summary>
            Gets or sets the location.
            </summary>
            <value>The location.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Alignment.LocationZ">
            <summary>
            Gets or sets the location.
            </summary>
            <value>The location.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Alignment.AxisX">
            <summary>
            Gets or sets the axis.
            </summary>
            <value>The axis.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Alignment.AxisY">
            <summary>
            Gets or sets the axis.
            </summary>
            <value>The axis.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Alignment.AxisZ">
            <summary>
            Gets or sets the axis.
            </summary>
            <value>The axis.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Alignment.DirectionX">
            <summary>
            Gets or sets the reference direction.
            </summary>
            <value>The direction.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Alignment.DirectionY">
            <summary>
            Gets or sets the reference direction.
            </summary>
            <value>The direction.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Alignment.DirectionZ">
            <summary>
            Gets or sets the reference direction.
            </summary>
            <value>The direction.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Alignment.Scale">
            <summary>
            Gets or sets the uniform scale.
            </summary>
            <value>The scale.</value>
        </member>
        <member name="T:Trimble.Connect.Client.Models.AppInfo">
            <summary>
            The information about the application.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.Models.AppInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.Models.AppInfo"/> class.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.AppInfo.Name">
            <summary>
            Gets or sets the application name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.AppInfo.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.AppInfo.ThumbnailUrl">
            <summary>
            Gets or sets the thumbnail url.
            </summary>
            <value>The url.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.AppInfo.SupportUrl">
            <summary>
            Gets or sets the support url.
            </summary>
            <value>The url.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.AppInfo.Properties">
            <summary>
            Gets or sets the additional properties to exchange with server.
            </summary>
            <value>The properties.</value>
        </member>
        <member name="T:Trimble.Connect.Client.Models.AppSettings">
            <summary>
            The cross project per user per application settings.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.Models.AppSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.Models.AppSettings"/> class.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.AppSettings.UserIdentifier">
            <summary>
            Gets or sets the user identifier.
            </summary>
            <value>The user identifier.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.AppSettings.AppIdentifier">
            <summary>
            Gets or sets the app identifier.
            </summary>
            <value>The app identifier.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.AppSettings.ModifiedOn">
            <summary>
            Gets or sets the last modification time stamp.
            </summary>
            <value>The modification time stamp.</value>
            <remarks>Assigned by server.</remarks>
        </member>
        <member name="P:Trimble.Connect.Client.Models.AppSettings.Settings">
            <summary>
            Gets or sets the settings value.
            </summary>
            <value>The settings.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.AppSettings.Properties">
            <summary>
            Gets or sets the additional properties to exchange with server.
            </summary>
            <value>The properties.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.AppSettings.ModifiedOnAlternateSetter">
            <summary>
            Sets the last modification time stamp.
            </summary>
            <value>The modification time stamp.</value>
        </member>
        <member name="T:Trimble.Connect.Client.Models.ArrowMarkup">
            <summary>
            The arrow markup item.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.Models.ArrowMarkup.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.Models.ArrowMarkup"/> class.
            </summary>
        </member>
        <member name="T:Trimble.Connect.Client.Models.Attachment">
            <summary>
            The entity descriptor.
            Use the <see cref="M:Trimble.Connect.Client.Models.ObjectIdentityExtensions.ToDescriptor(Trimble.Connect.Client.Models.ObjectIdentity)"/> method to convert entities to the <see cref="T:Trimble.Connect.Client.Models.Attachment"/>.
            Typically used when attaching the entity using the <see cref="T:Trimble.Connect.Client.IAttachmentsController"/> interface.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.Models.Attachment.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.Models.Attachment"/> class.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Attachment.Type">
            <summary>
            Gets or sets the attached entity type.
            </summary>
            <value>The entity type.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Attachment.Version">
            <summary>
            Gets or sets the version identifier.
            </summary>
            <value>The version identifier.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Attachment.Url">
            <summary>
            Gets or sets the url.
            </summary>
            <value>The url.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Attachment.Name">
            <summary>
            Gets or sets the url.
            </summary>
            <value>The url.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Attachment.ThumbnailUrl">
            <summary>
            Gets or sets the url.
            </summary>
            <value>The url.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Attachment.Elements">
            <summary>
            Gets or sets the entity elements.
            </summary>
            <value>The entity elements.</value>
            <remarks>Optional, used to describe a reference to a part of an entity instead of whole.</remarks>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Attachment.IsEmbedded">
            <summary>
            Gets or sets a value indicating whether the link supports embedded targets.
            </summary>
            <value>The boolean embedded value.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Attachment.UrlNameSetter">
            <summary>
            Sets the url name.
            </summary>
            <value>The url.</value>
            <remarks>By some reason the url name is passed in the "urlName" property instead of "name" property.</remarks>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Attachment.NameSetter">
            <summary>
            Sets the name.
            </summary>
            <value>The name.</value>
            <remarks>By some reason the url name is passed in the "urlName" property instead of "name" property.</remarks>
        </member>
        <member name="T:Trimble.Connect.Client.Models.AttachmentExtensions">
            <summary>
            The extensions for attachments.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.Models.AttachmentExtensions.ToAttachment(Trimble.Connect.Client.Models.ObjectIdentity)">
            <summary>
            Converts a <see cref="T:Trimble.Connect.Client.Models.Entity"/> to <see cref="T:Trimble.Connect.Client.Models.Attachment"/> descriptor.
            </summary>
            <param name="entity">The entity.</param>
            <returns>The attachment descriptor.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.Models.BIMObject">
            <summary>
            Represents a BIM Object.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.BIMObject.Identifier">
            <summary>
            Gets or sets the identifiers.
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.BIMObject.FileIdentifier">
            <summary>
            Gets or sets the file identifier of the model the object belongs to.
            </summary>
            <value>The file identifier.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.BIMObject.Versiondentifier">
            <summary>
            Gets or sets the version identifier of the model the object belongs to.
            </summary>
            <value>The version identifier.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.BIMObject.Type">
            <summary>
            Gets or sets the object type.
            </summary>
            <value>The object type.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.BIMObject.Bounds">
            <summary>
            Gets or sets the bounding box.
            </summary>
            <value>The bounding box.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.BIMObject.PropertySets">
            <summary>
            Gets or sets the object's property sets.
            </summary>
            <value>The property sets.</value>
        </member>
        <member name="T:Trimble.Connect.Client.Models.BIMObject.BoundingBox">
            <summary>
            The object's bounding box.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.BIMObject.BoundingBox.Minimum">
            <summary>
            Gets or sets the bounding box's minimum.
            </summary>
            <value>The minimum.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.BIMObject.BoundingBox.Maximum">
            <summary>
            Gets or sets the bounding box's maximum.
            </summary>
            <value>The maximum.</value>
        </member>
        <member name="T:Trimble.Connect.Client.Models.BIMObject.PropertySet">
            <summary>
            The property set.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.BIMObject.PropertySet.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The property set name.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.BIMObject.PropertySet.Properties">
            <summary>
            Gets or sets the properties.
            </summary>
            <value>The property set's properties.</value>
        </member>
        <member name="T:Trimble.Connect.Client.Models.BIMObject.Property">
            <summary>
            The property.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.BIMObject.Property.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The property name.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.BIMObject.Property.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>The property type.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.BIMObject.Property.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The property value.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.BIMObject.Property.Rank">
            <summary>
            Gets or sets the rank.
            </summary>
            <value>The property rank.</value>
        </member>
        <member name="T:Trimble.Connect.Client.Models.Camera">
            <summary>
            The camera class.
            This camera model assumes that the roll angle is always zero, i.e. we don't allow our user to tilt his/her head.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Camera.TargetX">
            <summary>
            Gets or sets the camera target’s x coordinate.
            </summary>
            <value>The target’s x coordinate.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Camera.TargetY">
            <summary>
            Gets or sets the camera target’s y coordinate.
            </summary>
            <value>The target’s y coordinate.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Camera.TargetZ">
            <summary>
            Gets or sets the camera target’s z coordinate.
            </summary>
            <value>The target’s z coordinate.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Camera.Distance">
            <summary>
            Gets or sets the distance from camera location to camera target.
            </summary>
            <value>The distance.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Camera.Pitch">
            <summary>
            Gets or sets the pitch value in radians.
            </summary>
            <value>The pitch in radians.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Camera.Yaw">
            <summary>
            Gets or sets the yaw value in radians.
            </summary>
            <value>The yaw in radians.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Camera.ProjectionType">
            <summary>
            Gets or sets the projection type.
            </summary>
            <value>The projection type.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Camera.ViewAngle">
            <summary>
            Gets or sets the view angle in degrees.
            </summary>
            <value>The view angle in degrees.</value>
            <remarks>Used in perspective <see cref="P:Trimble.Connect.Client.Models.Camera.ProjectionType"/>.</remarks>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Camera.ViewScale">
            <summary>
            Gets or sets the view scale.
            </summary>
            <value>The view scale.</value>
            <remarks>Used in orthogonal <see cref="P:Trimble.Connect.Client.Models.Camera.ProjectionType"/>.</remarks>
        </member>
        <member name="T:Trimble.Connect.Client.Models.Clash">
            <summary>
            The clash item.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.Models.Clash.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.Models.Clash"/> class.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Clash.Label">
            <summary>
            Gets or sets the label.
            </summary>
            <value>The label.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Clash.Distance">
            <summary>
            Gets or sets the penetration distance.
            </summary>
            <value>The distance.</value>
            <remarks>The negative value means clash distance, the positive value is a clearance distance.</remarks>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Clash.Element1Identifier">
            <summary>
            Gets or sets the model element 1 identifier.
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Clash.Element1Name">
            <summary>
            Gets or sets the model element 1 name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Clash.Element1Type">
            <summary>
            Gets or sets the model element 1 type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Clash.Element1Source">
            <summary>
            Gets or sets the model element 1 source.
            </summary>
            <value>The model element source.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Clash.Element2Identifier">
            <summary>
            Gets or sets the model element 2 identifier.
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Clash.Element2Name">
            <summary>
            Gets or sets the model element 2 name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Clash.Element2Type">
            <summary>
            Gets or sets the model element 2 type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Clash.Element2Source">
            <summary>
            Gets or sets the model element 2 source.
            </summary>
            <value>The model element source.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Clash.Properties">
            <summary>
            Gets or sets the additional properties to exchange with server.
            </summary>
            <value>The properties.</value>
        </member>
        <member name="T:Trimble.Connect.Client.Models.ClashSet">
            <summary>
            The clash set.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.Models.ClashSet.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.Models.ClashSet"/> class.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ClashSet.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ClashSet.Type">
            <summary>
            Gets or sets the clash type (<see cref="T:Trimble.Connect.Client.Models.ClashType"/>).
            </summary>
            <value>The person.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ClashSet.Models">
            <summary>
            Gets or sets the file version identifiers.
            </summary>
            <value>The list of file version identifiers.</value>
            <remarks>In the same order as <see cref="P:Trimble.Connect.Client.Models.ClashSet.Files"/>.</remarks>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ClashSet.Files">
            <summary>
            Gets or sets the file identifiers.
            </summary>
            <value>The list of file identifiers.</value>
            <remarks>In the same order as <see cref="P:Trimble.Connect.Client.Models.ClashSet.Models"/>.</remarks>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ClashSet.Tolerance">
            <summary>
            Gets or sets the tolerance.
            </summary>
            <value>The tolerance.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ClashSet.Clearance">
            <summary>
            Gets or sets the clearance distance.
            </summary>
            <value>The clearance distance.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ClashSet.IgnoreSameDiscipline">
            <summary>
            Gets or sets a value indicating whether to ignore same discipline.
            </summary>
            <value>The flag.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ClashSet.IgnoreSameFile">
            <summary>
            Gets or sets a value indicating whether to ignore same file.
            </summary>
            <value>The flag.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ClashSet.Assignees">
            <summary>
            Gets or sets the assignees (users or groups).
            </summary>
            <value>The list of assignees.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ClashSet.Status">
            <summary>
            Gets or sets the processing status.
            </summary>
            <value>The status.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ClashSet.IsRunning">
            <summary>
            Gets a value indicating whether clash set execution has not yet completed.
            </summary>
            <value>True if clash set is running.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ClashSet.IsCompleted">
            <summary>
            Gets a value indicating whether clash set execution completed execution successfully.
            </summary>
            <value>True if clash completed execution successfully.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ClashSet.IsFaulted">
            <summary>
            Gets a value indicating whether clash set execution completed with error.
            </summary>
            <value>True if clash completed execution with error.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ClashSet.Count">
            <summary>
            Gets or sets the number of clash items in the set.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ClashSet.FilesAlternateSetter">
            <summary>
            Sets the thumbnail url.
            </summary>
            <value>The url.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ClashSet.StatusAlternateSetter">
            <summary>
            Sets the processing status.
            </summary>
            <value>The status.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ClashSet.CountAlternateSetter">
            <summary>
            Sets the number of clash items in the set.
            </summary>
            <value>The count.</value>
        </member>
        <member name="T:Trimble.Connect.Client.Models.ClashType">
            <summary>
            The clash type.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.ClashType.Clash">
            <summary>
            The clash.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.ClashType.Clearance">
            <summary>
            The clearance.
            </summary>
        </member>
        <member name="T:Trimble.Connect.Client.Models.CloudMarkup">
            <summary>
            The cloud markup item.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.Models.CloudMarkup.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.Models.CloudMarkup"/> class.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.CloudMarkup.PlaneA">
            <summary>
            Gets or sets the first projective coordinate.
            </summary>
            <value>The projective coordinate.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.CloudMarkup.PlaneB">
            <summary>
            Gets or sets the first projective coordinate.
            </summary>
            <value>The projective coordinate.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.CloudMarkup.PlaneC">
            <summary>
            Gets or sets the first projective coordinate.
            </summary>
            <value>The projective coordinate.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.CloudMarkup.PlaneD">
            <summary>
            Gets or sets the first projective coordinate.
            </summary>
            <value>The projective coordinate.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.CloudMarkup.Width">
            <summary>
            Gets or sets the width.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.CloudMarkup.Height">
            <summary>
            Gets or sets the height.
            </summary>
            <value>The height.</value>
        </member>
        <member name="T:Trimble.Connect.Client.Models.Color">
            <summary>
            The color.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Color.R">
            <summary>
            Gets or sets the color component.
            </summary>
            <value>The color component.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Color.G">
            <summary>
            Gets or sets the color component.
            </summary>
            <value>The color component.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Color.B">
            <summary>
            Gets or sets the color component.
            </summary>
            <value>The color component.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Color.A">
            <summary>
            Gets or sets the color component.
            </summary>
            <value>The color component.</value>
        </member>
        <member name="M:Trimble.Connect.Client.Models.Color.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            True if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <param name="obj">The object to compare with the current object.</param>
        </member>
        <member name="M:Trimble.Connect.Client.Models.Color.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="T:Trimble.Connect.Client.Models.Comment">
            <summary>
            The comment.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Comment.RelatedEntityIdentifier">
            <summary>
            Gets or sets the identifier of the entity this comment is related to.
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Comment.RelatedEntityType">
            <summary>
            Gets or sets the type of the entity this comment is related to.
            </summary>
            <value>The entity type.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Comment.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="T:Trimble.Connect.Client.Models.Company">
            <summary>
            The company.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.Models.Company.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.Models.Company"/> class.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Company.Name">
            <summary>
            Gets or sets the company name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Company.Website">
            <summary>
            Gets or sets the website.
            </summary>
            <value>The website.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Company.Thumbnail">
            <summary>
            Gets or sets the url to fetch the thumbnail of the company.
            </summary>
            <value>The thumbnail.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Company.Domains">
            <summary>
            Gets or sets the collection of email domains.
            </summary>
            <value>The collection of email domains.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Company.Role">
            <summary>
            Gets or sets the role of the current user in the company.
            </summary>
            <value>The role.</value>
            <remarks>For possible values <see cref="P:Trimble.Connect.Client.Models.Company.Role"/>.</remarks>
        </member>
        <member name="T:Trimble.Connect.Client.Models.DeltaResponse">
            <summary>
            Represents an a response about changed entities for an entity type.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.Models.DeltaResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.Models.DeltaResponse"/> class.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.DeltaResponse.Range">
            <summary>
            Gets or sets the response range.
            </summary>
            <value> The range of objects in format "item start-end/range_size".</value>
            <remarks> Not applicable for <see cref="F:Trimble.Connect.Client.Models.EntityType.FsObject"/>.</remarks>
        </member>
        <member name="P:Trimble.Connect.Client.Models.DeltaResponse.PercentageComplete">
            <summary>
            Gets or sets the Percentage completion of paged request.
            </summary>
            <remarks> Applicable only for <see cref="F:Trimble.Connect.Client.Models.EntityType.FsObject"/>.</remarks>
        </member>
        <member name="P:Trimble.Connect.Client.Models.DeltaResponse.Type">
            <summary>
            Gets or sets the type of objects contained in the delta response.
            </summary>
            <value> The type of objects contained in the delta response with values from <see cref="T:Trimble.Connect.Client.Models.EntityType"/>.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.DeltaResponse.Cursor">
            <summary>
            Gets or sets the cursor.
            </summary>
            <value>The cursor.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.DeltaResponse.Entities">
            <summary>
            Gets or sets the information about entities which have been modified (created, updated, deleted).
            </summary>
            <value>A collection of objects which have been modified.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.DeltaResponse.Events">
            <summary>
            Gets or sets the raw change events.
            </summary>
            <value>The raw json response.</value>
        </member>
        <member name="T:Trimble.Connect.Client.Models.DeltaType">
            <summary>
            Collection of delta query filters for non-entity events.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.DeltaType.Thumnbails">
            <summary>
            The thumbnails and triangle count stream.
            </summary>
        </member>
        <member name="T:Trimble.Connect.Client.Models.DimensionMarkup">
            <summary>
            The dimension markup item.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.Models.DimensionMarkup.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.Models.DimensionMarkup"/> class.
            </summary>
        </member>
        <member name="T:Trimble.Connect.Client.Models.Entity">
            <summary>
            The base class for entities.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.Models.Entity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.Models.Entity"/> class.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Entity.CreatedBy">
            <summary>
            Gets or sets the information about person who created the entity.
            </summary>
            <value>The person.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Entity.CreatedOn">
            <summary>
            Gets or sets the creation time stamp.
            </summary>
            <value>The creation time stamp.</value>
            <remarks>Assigned by server.</remarks>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Entity.ModifiedBy">
            <summary>
            Gets or sets the information about person who modified the entity.
            </summary>
            <value>The person.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Entity.IsDeleted">
            <summary>
            Gets or sets a value indicating whether the entity is deleted.
            </summary>
            <value>The deleted boolean value.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Entity.ModifiedOn">
            <summary>
            Gets or sets the last modification time stamp.
            </summary>
            <value>The modification time stamp.</value>
            <remarks>Assigned by server.</remarks>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Entity.Properties">
            <summary>
            Gets or sets the additional properties to exchange with server.
            </summary>
            <value>The properties.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Entity.CreatedByAlternateSetter1">
            <summary>
            Sets the information about person who created the entity.
            </summary>
            <value>The person.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Entity.CreatedByAlternateSetter2">
            <summary>
            Sets the user id who created the entity.
            </summary>
            <value>The person.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Entity.CreatedOnAlternateSetter1">
            <summary>
            Sets the creation time stamp.
            </summary>
            <value>The creation time stamp.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Entity.CreatedOnAlternateSetter2">
            <summary>
            Sets the creation time stamp.
            </summary>
            <value>The creation time stamp.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Entity.ModifiedByAlternateSetter1">
            <summary>
            Sets the information about person who modified the entity.
            </summary>
            <value>The person.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Entity.ModifiedByAlternateSetter2">
            <summary>
            Sets the user id who modified the entity.
            </summary>
            <value>The person.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Entity.ModifiedByAlternateSetter3">
            <summary>
            Sets the user id who modified the entity.
            </summary>
            <value>The person.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Entity.ModifiedByAlternateSetter4">
            <summary>
            Sets the information about person who modified the entity.
            </summary>
            <value>The person.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Entity.ModifiedOnAlternateSetter1">
            <summary>
            Sets the last modification time stamp.
            </summary>
            <value>The modification time stamp.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Entity.ModifiedOnAlternateSetter2">
            <summary>
            Sets the modification time stamp.
            </summary>
            <value>The modification time stamp.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Entity.ModifiedOnAlternateSetter3">
            <summary>
            Sets the modification time stamp.
            </summary>
            <value>The modification time stamp.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Entity.ModifiedOnAlternateSetter4">
            <summary>
            Sets the modification time stamp.
            </summary>
            <value>The modification time stamp.</value>
        </member>
        <member name="T:Trimble.Connect.Client.Models.EntityLink">
            <summary>
            The link between source and target entities.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.EntityLink.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The entity link name.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.EntityLink.Source">
            <summary>
            Gets or sets the link's source object.
            </summary>
            <value>The source object.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.EntityLink.Target">
            <summary>
            Gets or sets the link's target object.
            </summary>
            <value>The target object.</value>
        </member>
        <member name="T:Trimble.Connect.Client.Models.EntityType">
            <summary>
            Enumeration of possible entity types.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.EntityType.Activity">
            <summary>
            The activity.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.EntityType.Alignment">
            <summary>
            The alignment.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.EntityType.ClashItem">
            <summary>
            The clash item.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.EntityType.ClashSet">
            <summary>
            The clash set.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.EntityType.Comment">
            <summary>
            The comment.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.EntityType.EntityLink">
            <summary>
            The entity link.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.EntityType.File">
            <summary>
            The file.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.EntityType.Folder">
            <summary>
            The folder.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.EntityType.Group">
            <summary>
            The user.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.EntityType.ModelObject">
            <summary>
            The model object.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.EntityType.Project">
            <summary>
            The project descriptor.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.EntityType.Release">
            <summary>
            The release.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.EntityType.User">
            <summary>
            The user.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.EntityType.Tag">
            <summary>
            The tag.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.EntityType.Todo">
            <summary>
            The todo.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.EntityType.Unknown">
            <summary>
            The type is unknown.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.EntityType.Url">
            <summary>
            The Url.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.EntityType.View">
            <summary>
            The view.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.EntityType.View2D">
            <summary>
            The 2D view.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.EntityType.ViewGroup">
            <summary>
            The view group.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.EntityType.FsObject">
            <summary>
            The file stream object.
            </summary>
        </member>
        <member name="T:Trimble.Connect.Client.Models.FileExtensions">
            <summary>
            The file extensions supported for assimilation.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.Models.FileExtensions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.Models.FileExtensions"/> class.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.FileExtensions.Extensions">
            <summary>
            Gets or sets the 2D extensions.
            </summary>
            <value>The collection of extensions.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.FileExtensions.Extensions2D">
            <summary>
            Sets the 2D extensions.
            </summary>
            <value>The collection of extensions.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.FileExtensions.Extensions3D">
            <summary>
            Sets the 3D extensions.
            </summary>
            <value>The collection of extensions.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.FileExtensions.ExtensionsSpatial">
            <summary>
            Sets the spatial extensions.
            </summary>
            <value>The collection of extensions.</value>
        </member>
        <member name="T:Trimble.Connect.Client.Models.FileFormat">
            <summary>
            The file format.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.FileFormat.Original">
            <summary>
            The original uploaded format.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.FileFormat.BSQ">
            <summary>
            The BSQ format.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.FileFormat.F3D">
            <summary>
            The F3D format.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.FileFormat.TrimBIM">
            <summary>
            The TrimBIM format.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.FileFormat.ModelHierarchy">
            <summary>
            The model hierarchy.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.FileFormat.ModelProperties">
            <summary>
            The model properties.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.FileFormat.ModelPropertySets">
            <summary>
            The model property sets.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.FileFormat.PDF">
            <summary>
            The model property sets.
            </summary>
        </member>
        <member name="T:Trimble.Connect.Client.Models.FileFormatType">
            <summary>
            The file format type supported for assimilation.
            After assimilation is completed file formats from <see cref="T:Trimble.Connect.Client.Models.FileFormat"/> can be queried.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.FileFormatType.TwoDimensional">
            <summary>
            The 2D formats.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.FileFormatType.ThreeDimensional">
            <summary>
            The 3D formats.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.FileFormatType.Spatial">
            <summary>
            The spatial formats.
            </summary>
        </member>
        <member name="T:Trimble.Connect.Client.Models.FilePart">
            <summary>
            The file part descriptor.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.Models.FilePart.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.Models.FilePart"/> class.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.FilePart.UploadIdentifier">
            <summary>
            Gets or sets the upload request identifier the part belongs to.
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.FilePart.CreatedBy">
            <summary>
            Gets or sets the information about person who created the entity.
            </summary>
            <value>The person.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.FilePart.CreatedOn">
            <summary>
            Gets or sets the creation time stamp.
            </summary>
            <value>The creation time stamp.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.FilePart.Size">
            <summary>
            Gets or sets the size of the part in bytes.
            </summary>
            <value>The size in bytes.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.FilePart.Hash">
            <summary>
            Gets or sets the MD5 hash of the part.
            </summary>
            <value>The hash.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.FilePart.Number">
            <summary>
            Gets or sets the part number starting from 1.
            </summary>
            <value>The part number.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.FilePart.Properties">
            <summary>
            Gets or sets the additional properties to exchange with server.
            </summary>
            <value>The properties.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.FilePart.CreatedByAlternateSetter">
            <summary>
            Sets the information about person who created the entity.
            </summary>
            <value>The person.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.FilePart.CreatedOnAlternateSetter">
            <summary>
            Sets the creation time stamp.
            </summary>
            <value>The creation time stamp.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.FilePart.UploadIdentifierAlternateSetter">
            <summary>
            Sets the upload identifier.
            </summary>
            <value>The upload identifier.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.FilePart.SizeAlternateSetter">
            <summary>
            Sets the size.
            </summary>
            <value>The size.</value>
        </member>
        <member name="T:Trimble.Connect.Client.Models.FileStatus">
            <summary>
            The file status values.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.FileStatus.Done">
            <summary>
            The processing is done.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.FileStatus.Pending">
            <summary>
            The file is in the queue processing is pending.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.FileStatus.Cancelled">
            <summary>
            The cancelled status.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.FileStatus.Error">
            <summary>
            The processing failed.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.FileStatus.Processing">
            <summary>
            The processing is in progress.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.FileStatus.OnHold">
            <summary>
            The file processing is on hold.
            </summary>
        </member>
        <member name="T:Trimble.Connect.Client.Models.FolderItem">
            <summary>
            The information about file system item (file or folder).
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.FolderItem.ProjectIdentifier">
            <summary>
            Gets or sets the project identifier.
            </summary>
            <value>The project identifier.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.FolderItem.VersionIdentifier">
            <summary>
            Gets or sets the version identifier.
            </summary>
            <value>The version identifier.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.FolderItem.Revision">
            <summary>
            Gets or sets the revision number.
            </summary>
            <value>The revision number.</value>
            <remarks>For <see cref="P:Trimble.Connect.Client.Models.FolderItem.Type"/> = <see cref="F:Trimble.Connect.Client.Models.EntityType.File"/> only.</remarks>
        </member>
        <member name="P:Trimble.Connect.Client.Models.FolderItem.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.FolderItem.Status">
            <summary>
            Gets or sets the status.
            </summary>
            <value>The status.</value>
            <remarks>
            For <see cref="P:Trimble.Connect.Client.Models.FolderItem.Type"/> = <see cref="F:Trimble.Connect.Client.Models.EntityType.File"/> only.
            Possible values are listed in <see cref="T:Trimble.Connect.Client.Models.FileStatus"/>.
            </remarks>
        </member>
        <member name="P:Trimble.Connect.Client.Models.FolderItem.CheckedOutBy">
            <summary>
            Gets or sets the person who has the file checked out (null if not checked out).
            </summary>
            <value>The person.</value>
            <remarks>For <see cref="P:Trimble.Connect.Client.Models.FolderItem.Type"/> = <see cref="F:Trimble.Connect.Client.Models.EntityType.File"/> only.</remarks>
        </member>
        <member name="P:Trimble.Connect.Client.Models.FolderItem.CheckedOut">
            <summary>
            Gets or sets the date when the file was checked out (null if not checked out).
            </summary>
            <value>The time stamp.</value>
            <remarks>For <see cref="P:Trimble.Connect.Client.Models.FolderItem.Type"/> = <see cref="F:Trimble.Connect.Client.Models.EntityType.File"/> only.</remarks>
        </member>
        <member name="P:Trimble.Connect.Client.Models.FolderItem.Type">
            <summary>
            Gets or sets the type (<see cref="F:Trimble.Connect.Client.Models.EntityType.File"/> or <see cref="F:Trimble.Connect.Client.Models.EntityType.Folder"/>) of the item.
            </summary>
            <value>The type of the item.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.FolderItem.IsFolder">
            <summary>
            Gets a value indicating whether the item is a folder.
            </summary>
            <value>
            <c>True</c> if the item is a folder; <c>false</c> if the item is a file.
            </value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.FolderItem.Hash">
            <summary>
            Gets or sets the file hash.
            </summary>
            <value>The MD5 hash.</value>
            <remarks>For <see cref="P:Trimble.Connect.Client.Models.FolderItem.Type"/> = <see cref="F:Trimble.Connect.Client.Models.EntityType.File"/> only.</remarks>
        </member>
        <member name="P:Trimble.Connect.Client.Models.FolderItem.ParentIdentifier">
            <summary>
            Gets or sets the parent identifier.
            </summary>
            <value>The identifier.</value>
            <remarks>By default the parent type (<see cref="P:Trimble.Connect.Client.Models.FolderItem.ParentType"/>) is a <see cref="F:Trimble.Connect.Client.Models.EntityType.Folder"/>, but could be also <see cref="F:Trimble.Connect.Client.Models.EntityType.Todo"/>.</remarks>
        </member>
        <member name="P:Trimble.Connect.Client.Models.FolderItem.ParentType">
            <summary>
            Gets or sets the type of the parent referred to be <see cref="P:Trimble.Connect.Client.Models.FolderItem.ParentIdentifier"/>. 
            </summary>
            <value>The parent type.</value>
            <remarks>Typically it is a <see cref="F:Trimble.Connect.Client.Models.EntityType.Folder"/>, but could also be a <see cref="F:Trimble.Connect.Client.Models.EntityType.Todo"/>.</remarks>
        </member>
        <member name="P:Trimble.Connect.Client.Models.FolderItem.ParentVersionIdentifier">
            <summary>
            Gets or sets the parent folder version identifier.
            </summary>
            <value>The version identifier.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.FolderItem.Size">
            <summary>
            Gets or sets the size of the item in bytes.
            </summary>
            <value>The size in bytes.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.FolderItem.ThumbnailUrl">
            <summary>
            Gets or sets the thumbnail available for the file or folder.
            </summary>
            <value>The url.</value>
            <remarks>
            Url might be absolute or relative. Use <see cref="M:Trimble.Connect.Client.ITrimbleConnectClient.DownloadThumbnailAsync(System.String,System.Action{System.Net.Http.Handlers.HttpProgressEventArgs},System.Threading.CancellationToken)"/> to download the thumbnail content.
            For <see cref="P:Trimble.Connect.Client.Models.FolderItem.Type"/> = <see cref="F:Trimble.Connect.Client.Models.EntityType.File"/> only.
            </remarks>
        </member>
        <member name="P:Trimble.Connect.Client.Models.FolderItem.TrianglesCount">
            <summary>
            Gets or sets the number of triangles.
            </summary>
            <value>The number of triangles.</value>
            <remarks>
            This property is valid only for model files and only after the assimilation is completed.
            </remarks>
        </member>
        <member name="P:Trimble.Connect.Client.Models.FolderItem.HasChildren">
            <summary>
            Gets or sets a value indicating whether the item has children.
            </summary>
            <value>The flag.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.FolderItem.AccessLevel">
            <summary>
            Gets or sets the effective access level (<see cref="T:Trimble.Connect.Client.Models.AccessLevel"/>) current user has for the folder.
            </summary>
            <value>The access level.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.FolderItem.VersionIdentifierAlternateSetter1">
            <summary>
            Sets the version identifier.
            </summary>
            <value>The version identifier.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.FolderItem.VersionIdentifierAlternateSetter2">
            <summary>
            Sets the version identifier.
            </summary>
            <value>The version identifier.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.FolderItem.RevisionAlternateSetter1">
            <summary>
            Sets the revision number.
            </summary>
            <value>The revision number.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.FolderItem.RevisionAlternateSetter2">
            <summary>
            Sets the revision number.
            </summary>
            <value>The revision number.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.FolderItem.NameAlternateSetter">
            <summary>
            Sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.FolderItem.StatusAlternateSetter">
            <summary>
            Sets the status.
            </summary>
            <value>The status.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.FolderItem.CheckedOutByAlternateSetter">
            <summary>
            Sets the person who has the file checked out (null if not checked out).
            </summary>
            <value>The person.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.FolderItem.CheckedOutAlternateSetter">
            <summary>
            Sets the date when the file was checked out (null if not checked out).
            </summary>
            <value>The time stamp.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.FolderItem.TypeAlternateSetter1">
            <summary>
            Sets the type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.FolderItem.TypeAlternateSetter2">
            <summary>
            Sets the type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.FolderItem.HashAlternateSetter1">
            <summary>
            Sets the hash.
            </summary>
            <value>The hash.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.FolderItem.HashAlternateSetter2">
            <summary>
            Sets the hash.
            </summary>
            <value>The hash.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.FolderItem.ParentIdentifierAlternateSetter">
            <summary>
            Sets the parent identifier.
            </summary>
            <value>The identifier.</value>
            <remarks>By default the parent type (<see cref="P:Trimble.Connect.Client.Models.FolderItem.ParentType"/>) is a <see cref="F:Trimble.Connect.Client.Models.EntityType.Folder"/>, but could be also <see cref="F:Trimble.Connect.Client.Models.EntityType.Todo"/>.</remarks>
        </member>
        <member name="P:Trimble.Connect.Client.Models.FolderItem.ParentTypeAlternateSetter">
            <summary>
            Sets the type of the parent referred to be <see cref="P:Trimble.Connect.Client.Models.FolderItem.ParentIdentifier"/>. 
            </summary>
            <value>The parent type.</value>
            <remarks>Typically it is a <see cref="F:Trimble.Connect.Client.Models.EntityType.Folder"/>, but could also be a <see cref="F:Trimble.Connect.Client.Models.EntityType.Todo"/>.</remarks>
        </member>
        <member name="P:Trimble.Connect.Client.Models.FolderItem.SizeAlternateSetter1">
            <summary>
            Sets the size.
            </summary>
            <value>The size.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.FolderItem.SizeAlternateSetter2">
            <summary>
            Sets the size.
            </summary>
            <value>The size.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.FolderItem.ThumbnailUrlAlternateSetter1">
            <summary>
            Sets the thumbnail url.
            </summary>
            <value>The url.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.FolderItem.ThumbnailUrlAlternateSetter2">
            <summary>
            Sets the thumbnail url.
            </summary>
            <value>The url.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.FolderItem.TrianglesCountAlternateSetter1">
            <summary>
            Sets the triangles count.
            </summary>
            <value>The triangles count.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.FolderItem.TrianglesCountAlternateSetter2">
            <summary>
            Sets the triangles count.
            </summary>
            <value>The triangles count.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.FolderItem.HasChildrenAlternateSetter">
            <summary>
            Sets a value indicating whether the item has children.
            </summary>
            <value>The flag.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.FolderItem.AccessLevelAlternateSetter">
            <summary>
            Sets the access level.
            </summary>
            <value>The access level.</value>
        </member>
        <member name="T:Trimble.Connect.Client.Models.FolderPermissions">
            <summary>
            The folder permissions.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.Models.FolderPermissions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.Models.FolderPermissions"/> class.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.FolderPermissions.DefaultAccessLevel">
            <summary>
            Gets or sets the default folder access level (<see cref="T:Trimble.Connect.Client.Models.AccessLevel"/>) applied for all users not mentioned explicitly.
            </summary>
            <value>The rights.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.FolderPermissions.Permissions">
            <summary>
            Gets or sets the access control list.
            </summary>
            <value>The collection of access control entries.</value>
        </member>
        <member name="T:Trimble.Connect.Client.Models.Group">
            <summary>
            The information about the user group.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.Models.Group.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.Models.Group"/> class.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Group.Name">
            <summary>
            Gets or sets the group name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:Trimble.Connect.Client.Models.HashCode">
            <summary>
            Provides methods for calculating and combining hash codes.
            </summary>
            <remarks>
            This class implements a relatively stable way of combining multiple hash codes.
            </remarks>
            <example>
            This example shows how to calculate the hash code of a 3D vector.
            <code>
            var hashCode = HashCode.GetHashCode(vector.X, vector.Y, vector.Z);
            </code>
            </example>
        </member>
        <member name="M:Trimble.Connect.Client.Models.HashCode.GetHashCode(System.Object)">
            <summary>
            Returns a hash code for the specified object.
            </summary>
            <param name="instance">The object instance.</param>
            <returns>The hash code.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.Models.HashCode.CombineHashCode(System.Int32,System.Int32)">
            <summary>
            Returns the combined hash code of the specified hash codes.
            </summary>
            <param name="hash1">The first hash code.</param>
            <param name="hash2">The second hash code.</param>
            <returns>
            The combined hash code.
            </returns>
        </member>
        <member name="M:Trimble.Connect.Client.Models.HashCode.GetHashCode(System.Object,System.Object)">
            <summary>
            Returns a hash code for the specified set of objects, usually fields of the other object.
            </summary>
            <param name="obj1">The object 1.</param>
            <param name="obj2">The object 2.</param>
            <returns>The hash code.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.Models.HashCode.GetHashCode(System.Object,System.Object,System.Object)">
            <summary>
            Returns a hash code for the specified set of objects, usually fields of the other object.
            </summary>
            <param name="obj1">The object 1.</param>
            <param name="obj2">The object 2.</param>
            <param name="obj3">The object 3.</param>
            <returns>The hash code.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.Models.HashCode.GetHashCode(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Returns a hash code for the specified set of objects, usually fields of the other object.
            </summary>
            <param name="obj1">The object 1.</param>
            <param name="obj2">The object 2.</param>
            <param name="obj3">The object 3.</param>
            <param name="obj4">The object 4.</param>
            <returns>The hash code.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.Models.Heartbeat">
            <summary>
            The cursor information of latest operations concerning entity types.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Heartbeat.ProjectIdentifier">
            <summary>
            Gets or sets the identifier of the project.
            </summary>
            <value>The project identifier.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Heartbeat.FilesCursor">
            <summary>
            Gets or sets the latest cursor in files collection.
            </summary>
            <value>The cursor.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Heartbeat.AlignmentsCursor">
            <summary>
            Gets or sets the latest cursor in alignments collection.
            </summary>
            <value>The cursor.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Heartbeat.FoldersCursor">
            <summary>
            Gets or sets the latest cursor in folders collection.
            </summary>
            <value>The cursor.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Heartbeat.PermissionsCursor">
            <summary>
            Gets or sets the latest permissions cursor.
            </summary>
            <value>The cursor.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Heartbeat.CommentsCursor">
            <summary>
            Gets or sets the latest cursor in comments collection.
            </summary>
            <value>The cursor.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Heartbeat.TagsCursor">
            <summary>
            Gets or sets the latest cursor in tags collection.
            </summary>
            <value>The cursor.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Heartbeat.TodosCursor">
            <summary>
            Gets or sets the latest cursor in todos collection.
            </summary>
            <value>The cursor.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Heartbeat.ReleasesCursor">
            <summary>
            Gets or sets the latest cursor in the releases collection.
            </summary>
            <value>The cursor.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Heartbeat.GroupsCursor">
            <summary>
            Gets or sets the latest cursor in the user groups collection.
            </summary>
            <value>The cursor.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Heartbeat.ClashSetsCursor">
            <summary>
            Gets or sets the latest cursor in the clash sets collection.
            </summary>
            <value>The cursor.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Heartbeat.ThumbnailsCursor">
            <summary>
            Gets or sets the latest cursor in the thumbnails and triangle count stream.
            </summary>
            <value>The cursor.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Heartbeat.ViewsCursor">
            <summary>
            Gets or sets the latest cursor in the views collection.
            </summary>
            <value>The cursor.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Heartbeat.Views2DCursor">
            <summary>
            Gets or sets the latest cursor in the 2D views collection.
            </summary>
            <value>The cursor.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Heartbeat.ViewGroupsCursor">
            <summary>
            Gets or sets the latest cursor in the view groups collection.
            </summary>
            <value>The cursor.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Heartbeat.FsObjectCursor">
            <summary>
            Gets or sets the latest cursor in the file / folder collection.
            </summary>
            <value>The cursor.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Heartbeat.LinksCursor">
            <summary>
            Gets or sets the latest cursor in the entity links collection.
            </summary>
            <value>The cursor.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Heartbeat.MembersCursor">
            <summary>
            Gets or sets the latest cursor in project members.
            </summary>
            <value>The cursor.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Heartbeat.ProjectCursor">
            <summary>
            Gets or sets the latest cursor for project descriptor.
            </summary>
            <value>The cursor.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Heartbeat.Cursor">
            <summary>
            Gets or sets the global project cursor.
            </summary>
            <value>The cursor.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Heartbeat.Item(System.String)">
            <summary>
            Gets or sets the cursor for the entity type.
            </summary>
            <param name="type">The entity type <see cref="T:Trimble.Connect.Client.Models.EntityType"/> or <see cref="T:Trimble.Connect.Client.Models.PrincipalType"/>.</param>
            <returns>The cursor state.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.Models.Heartbeat.FromEncoded(System.String)">
            <summary>
            Initializes the instance of the <see cref="T:Trimble.Connect.Client.Models.Heartbeat"/> class from the URL encoded string.
            </summary>
            <param name="encoded">The encoded heartbeat.</param>
            <returns>The heartbeat structure.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.Models.Heartbeat.ToEncoded">
            <summary>
            Convert the instance to packed URL encoded representation.
            </summary>
            <returns>The packed URL encoded status.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.Models.ITyped">
            <summary>
            Information about Trimble Connect entity type.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ITyped.Type">
            <summary>
            Gets the entity type.
            </summary>
            <value>The entity type.</value>
        </member>
        <member name="T:Trimble.Connect.Client.Models.License">
            <summary>
            The user license for E-Com.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.Models.License.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.Models.License"/> class.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.License.OrganizationName">
            <summary>
            Gets or sets the name of the organization.
            </summary>
            <value>
            The name of the organization.
            </value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.License.UpgradeLink">
            <summary>
            Gets or sets the upgrade link.
            </summary>
            <value>
            The link to use when upgrading the license.
            </value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.License.ProjectsLimit">
            <summary>
            Gets or sets the maximal number of projects which can be created using the license.
            </summary>
            <value>
            The projects limit.
            </value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.License.StorageLimit">
            <summary>
            Gets or sets the maximum size of storage allowed.
            </summary>
            <value>
            The storage limit.
            </value>
            <remarks>Each project created under this size counts against the storage limit.</remarks>
        </member>
        <member name="P:Trimble.Connect.Client.Models.License.InvitesLimit">
            <summary>
            Gets or sets the maximum number of invites allowed per project.
            </summary>
            <value>
            The maximum invites.
            </value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.License.ProjectsUsed">
            <summary>
            Gets or sets the number of projects created under the license.
            </summary>
            <value>
            The used projects.
            </value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.License.StorageUsed">
            <summary>
            Gets or sets the total size of used storage.
            </summary>
            <value>
            The used storage.
            </value>
            <remarks>The used storage is equal to the sum of sizes of all projects which are created with the license.</remarks>
        </member>
        <member name="P:Trimble.Connect.Client.Models.License.Properties">
            <summary>
            Gets or sets the additional properties to exchange with server.
            </summary>
            <value>The properties.</value>
        </member>
        <member name="T:Trimble.Connect.Client.Models.Markup">
            <summary>
            The markup item.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Markup.Identifier">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Markup.Color">
            <summary>
            Gets or sets the color.
            </summary>
            <value>The color.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Markup.Type">
            <summary>
            Gets or sets the type of markup (<see cref="T:Trimble.Connect.Client.Models.MarkupType"/>).
            </summary>
            <value>The markup type.</value>
        </member>
        <member name="T:Trimble.Connect.Client.Models.Markup2D">
            <summary>
            The 2D markup.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Markup2D.XFDF">
            <summary>
            Gets or sets the XFDF annotations.
            </summary>
            <value>The XFDF annotations.</value>
            <remarks>
            The XFDF stands for XML Forms Data Format.
            XFDF is an XML-based file format for representing form data and markups (annotations) that are contained in a PDF form.
            </remarks>
        </member>
        <member name="T:Trimble.Connect.Client.Models.MarkupType">
            <summary>
            The markup type.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.MarkupType.Cloud">
            <summary>
            The cloud.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.MarkupType.Text">
            <summary>
            The text.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.MarkupType.Segment">
            <summary>
            The segment.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.MarkupType.Arrow">
            <summary>
            The arrow.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.MarkupType.Dimension">
            <summary>
            The dimension.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.MarkupType.Segments">
            <summary>
            The collection of segments.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.MarkupType.Measurement">
            <summary>
            The measurement with picking.
            </summary>
        </member>
        <member name="T:Trimble.Connect.Client.Models.MarkupWithPosition">
            <summary>
            The markup item with position.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.MarkupWithPosition.PositionX">
            <summary>
            Gets or sets the x coordinate of markup position.
            </summary>
            <value>The x coordinate.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.MarkupWithPosition.PositionY">
            <summary>
            Gets or sets the y coordinate of markup position.
            </summary>
            <value>The y coordinate.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.MarkupWithPosition.PositionZ">
            <summary>
            Gets or sets the z coordinate of markup position.
            </summary>
            <value>The z coordinate.</value>
        </member>
        <member name="T:Trimble.Connect.Client.Models.Measurement">
            <summary>
            The measurement.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.Models.Measurement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.Models.Measurement"/> class.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Measurement.Start">
            <summary>
            Gets or sets the start.
            </summary>
            <value>
            The start.
            </value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Measurement.End">
            <summary>
            Gets or sets the end.
            </summary>
            <value>
            The end.
            </value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Measurement.UnitType">
            <summary>
            Gets or sets the type of the unit.
            </summary>
            <value>
            The type of the unit.
            </value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Measurement.QuantityType">
            <summary>
            Gets or sets the type of the quantity.
            </summary>
            <value>
            The type of the quantity.
            </value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Measurement.QuantityUnitFormat">
            <summary>
            Gets or sets the quantity unit format.
            </summary>
            <value>
            The quantity unit format.
            </value>
        </member>
        <member name="T:Trimble.Connect.Client.Models.MeasurementPick">
            <summary>
            The measurement pick.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.MeasurementPick.Type">
            <summary>
            Gets or sets the measurement pick type (<see cref="T:Trimble.Connect.Client.Models.MeasurementPickType"/>).
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.MeasurementPick.ReferenceObject">
            <summary>
            Gets or sets the reference object.
            </summary>
            <value>
            The reference object.
            </value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.MeasurementPick.PositionX">
            <summary>
            Gets or sets the x coordinate of markup position.
            </summary>
            <value>The x coordinate.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.MeasurementPick.PositionY">
            <summary>
            Gets or sets the y coordinate of markup position.
            </summary>
            <value>The y coordinate.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.MeasurementPick.PositionZ">
            <summary>
            Gets or sets the z coordinate of markup position.
            </summary>
            <value>The z coordinate.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.MeasurementPick.Position2X">
            <summary>
            Gets or sets the x coordinate of markup second position.
            </summary>
            <value>The x coordinate.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.MeasurementPick.Position2Y">
            <summary>
            Gets or sets the y coordinate of markup second position.
            </summary>
            <value>The y coordinate.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.MeasurementPick.Position2Z">
            <summary>
            Gets or sets the z coordinate of markup second position.
            </summary>
            <value>The z coordinate.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.MeasurementPick.DirectionX">
            <summary>
            Gets or sets the x coordinate of direction.
            </summary>
            <value>The x coordinate.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.MeasurementPick.DirectionY">
            <summary>
            Gets or sets the y coordinate of direction.
            </summary>
            <value>The y coordinate.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.MeasurementPick.DirectionZ">
            <summary>
            Gets or sets the z coordinate of direction.
            </summary>
            <value>The z coordinate.</value>
        </member>
        <member name="T:Trimble.Connect.Client.Models.MeasurementPickType">
            <summary>
            The measurement pick type.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.MeasurementPickType.Point">
            <summary>
            The point.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.MeasurementPickType.Line">
            <summary>
            The line.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.MeasurementPickType.LineSegment">
            <summary>
            The line segment.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.MeasurementPickType.Plane">
            <summary>
            The plane.
            </summary>
        </member>
        <member name="T:Trimble.Connect.Client.Models.ModelElementIdState">
            <summary>
            The model element state by identifier.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ModelElementIdState.SourceId">
            <summary>
            Gets or sets a model element identifier.
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ModelElementIdState.FileVersionIdentifier">
            <summary>
            Gets or sets a file version identifier.
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ModelElementIdState.XRefIdentifier">
            <summary>
            Gets or sets a model instance linkage identifier.
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ModelElementIdState.IsRecursive">
            <summary>
            Gets or sets a value indicating whether to apply the state recursively.
            </summary>
            <value>True if the state should be applied recursively.</value>
        </member>
        <member name="M:Trimble.Connect.Client.Models.ModelElementIdState.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            True if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <param name="obj">The object to compare with the current object. </param>
        </member>
        <member name="M:Trimble.Connect.Client.Models.ModelElementIdState.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="T:Trimble.Connect.Client.Models.ModelElementSource">
            <summary>
            The model element source represents the identification of the model element in the original model file.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.Models.ModelElementSource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.Models.ModelElementSource"/> class.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ModelElementSource.Identifier">
            <summary>
            Gets or sets the model element identifier in the original model file.
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ModelElementSource.FileVersionIdentifier">
            <summary>
            Gets or sets the model file version identifier.
            </summary>
            <value>The version identifier.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ModelElementSource.XRefIdentifier">
            <summary>
            Gets or sets the instance identifier of the source version.
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ModelElementSource.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="T:Trimble.Connect.Client.Models.ModelElementState">
            <summary>
            The model element state base class.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.Models.ModelElementState.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.Models.ModelElementState"/> class.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ModelElementState.Priority">
            <summary>
            Gets or sets a priority in which the state must be applied.
            </summary>
            <value>The priority.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ModelElementState.State">
            <summary>
            Gets or sets a state (<see cref="T:Trimble.Connect.Client.Models.ModelElementStateFlags"/>) to apply.
            </summary>
            <value>The state.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ModelElementState.Color">
            <summary>
            Gets or sets a color to apply.
            </summary>
            <value>The color.</value>
        </member>
        <member name="M:Trimble.Connect.Client.Models.ModelElementState.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            True if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <param name="obj">The object to compare with the current object.</param>
        </member>
        <member name="M:Trimble.Connect.Client.Models.ModelElementState.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="T:Trimble.Connect.Client.Models.ModelElementStateFlags">
            <summary>
            The model element state flags.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.ModelElementStateFlags.Selected">
            <summary>
            The selected state.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.ModelElementStateFlags.Visible">
            <summary>
            The visible state.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.ModelElementStateFlags.Hidden">
            <summary>
            The hidden state.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.ModelElementStateFlags.Highlighted">
            <summary>
            The highlighted state.
            </summary>
        </member>
        <member name="T:Trimble.Connect.Client.Models.ModelElementTypeState">
            <summary>
            The model element state by type.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ModelElementTypeState.Type">
            <summary>
            Gets or sets a model element type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="M:Trimble.Connect.Client.Models.ModelElementTypeState.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            True if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <param name="obj">The object to compare with the current object. </param>
        </member>
        <member name="M:Trimble.Connect.Client.Models.ModelElementTypeState.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="T:Trimble.Connect.Client.Models.ModelTreeElement">
            <summary>
            Represents an entity identity.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ModelTreeElement.Identifier">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ModelTreeElement.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ModelTreeElement.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ModelTreeElement.Discipline">
            <summary>
            Gets or sets the discipline.
            </summary>
            <value>The discipline.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ModelTreeElement.Children">
            <summary>
            Gets or sets the children.
            </summary>
            <value>The children.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ModelTreeElement.SourceId">
            <summary>
            Gets or sets the source id.
            </summary>
            <value>The Source Id.</value>
        </member>
        <member name="T:Trimble.Connect.Client.Models.ObjectIdentity">
            <summary>
            Represents an entity identity.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ObjectIdentity.Identifier">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="T:Trimble.Connect.Client.Models.ObjectIdentityExtensions">
            <summary>
            The extensions for ObjectIdentity.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.ObjectIdentityExtensions.EntityTypeNames">
            <summary>
            The mapping from the CLR type to the <see cref="T:Trimble.Connect.Client.Models.EntityType"/>.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.Models.ObjectIdentityExtensions.GetTypeName``1">
            <summary>
            Gets the entity type name.
            </summary>
            <returns>The entity type name.</returns>
            <typeparam name="TEntity">The entity type.</typeparam>
        </member>
        <member name="M:Trimble.Connect.Client.Models.ObjectIdentityExtensions.GetTypeName(System.Type)">
            <summary>
            Gets the entity type name.
            </summary>
            <param name="type">The type.</param>
            <returns>The entity type name.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.Models.ObjectIdentityExtensions.GetTypeName(Trimble.Connect.Client.Models.ObjectIdentity)">
            <summary>
            Gets the entity type name.
            </summary>
            <param name="entity">The entity.</param>
            <returns>The entity type name.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.Models.ObjectIdentityExtensions.IsEmbedded(Trimble.Connect.Client.Models.ObjectIdentity)">
            <summary>
            Checks if the entity indicated as embedded to <see cref="T:Trimble.Connect.Client.Models.Todo"/>.
            </summary>
            <param name="entity">The entity.</param>
            <returns>True if the entity indicated as embedded.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.Models.ObjectIdentityExtensions.ToDescriptor(Trimble.Connect.Client.Models.ObjectIdentity)">
            <summary>
            Converts a <see cref="T:Trimble.Connect.Client.Models.Entity"/> to <see cref="T:Trimble.Connect.Client.Models.Attachment"/> descriptor.
            </summary>
            <param name="entity">The entity.</param>
            <returns>The entity descriptor.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.Models.ObjectQuery">
            <summary>
            Represents a query for a BIM Objects Search API.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.Models.ObjectQuery.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.Models.ObjectQuery"/> class.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ObjectQuery.Filter">
            <summary>
            Gets or sets the filters of the query.
            </summary>
            <value>The types.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ObjectQuery.Options">
            <summary>
            Gets or sets the query options.
            </summary>
            <value>The types.</value>
        </member>
        <member name="T:Trimble.Connect.Client.Models.ObjectQueryFilter">
            <summary>
            Represents a filter for a BIM Objects Search API.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.Models.ObjectQueryFilter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.Models.ObjectQueryFilter"/> class.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ObjectQueryFilter.FileIdentifiers">
            <summary>
            Gets or sets the file identifiers of the models we want to look for.
            </summary>
            <value>The types.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ObjectQueryFilter.VersionIdentifiers">
            <summary>
            Gets or sets the identifiers of the specific version of models we want to include in the search.
            </summary>
            <value>The identifiers.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ObjectQueryFilter.Types">
            <summary>
            Gets or sets the types.
            </summary>
            <value>The types.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ObjectQueryFilter.Identifiers">
            <summary>
            Gets or sets the object identifiers.
            </summary>
            <value>The identifiers.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ObjectQueryFilter.Properties">
            <summary>
            Gets or sets the object properties.
            </summary>
            <value>The types.</value>
        </member>
        <member name="T:Trimble.Connect.Client.Models.ObjectQueryOptions">
            <summary>
            Represents query options for a BIM Objects Search API.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.Models.ObjectQueryOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.Models.ObjectQueryOptions"/> class.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ObjectQueryOptions.IdentifiersOnly">
            <summary>
            Gets or sets a value indicating whether we want to return only the identifiers of BIM objects instead of full description.
            </summary>
            <value>The identifiers flag.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ObjectQueryOptions.IncludeBoundingBoxes">
            <summary>
            Gets or sets a value indicating whether to return object's bounding box together with other details.
            </summary>
            <value>The identifiers.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ObjectQueryOptions.PropertyDetails">
            <summary>
            Gets or sets the types.
            </summary>
            <value>The types.</value>
        </member>
        <member name="T:Trimble.Connect.Client.Models.ObjectQueryOptions.PropertyDetailsLevel">
            <summary>
            Which object properties to include in the response for an individual object.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.ObjectQueryOptions.PropertyDetailsLevel.None">
            <summary>
            No properties will be returned.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.ObjectQueryOptions.PropertyDetailsLevel.Queried">
            <summary>
            Return only those properties which satisfy one of the property filters in  <see cref="T:Trimble.Connect.Client.Models.ObjectQueryFilter"/>
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.ObjectQueryOptions.PropertyDetailsLevel.All">
            <summary>
            Return all properties for a given object.
            </summary>
        </member>
        <member name="T:Trimble.Connect.Client.Models.Permission">
            <summary>
            The access control list entry.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Permission.PrincipalId">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Permission.PrincipalType">
            <summary>
            Gets or sets the principal type (<see cref="P:Trimble.Connect.Client.Models.Permission.PrincipalType"/>).
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Permission.PrincipalName">
            <summary>
            Gets or sets the principal name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Permission.AccessLevel">
            <summary>
            Gets or sets the access level (<see cref="P:Trimble.Connect.Client.Models.Permission.AccessLevel"/>).
            </summary>
            <value>The access level.</value>
        </member>
        <member name="T:Trimble.Connect.Client.Models.Person">
            <summary>
            The information about the person.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.Models.Person.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.Models.Person"/> class.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Person.FirstName">
            <summary>
            Gets or sets the first name.
            </summary>
            <value>The first name.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Person.LastName">
            <summary>
            Gets or sets the last name.
            </summary>
            <value>The last name.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Person.Email">
            <summary>
            Gets or sets the email.
            </summary>
            <value>The email.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Person.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>The title.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Person.LastAccessedOn">
            <summary>
            Gets or sets the last accessed time stamp.
            </summary>
            <value>The last accessed time stamp.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Person.Role">
            <summary>
            Gets or sets the role.
            </summary>
            <value>The role.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Person.LinkedinId">
            <summary>
            Gets or sets the LinkedIn id for the user.
            </summary>
            <value>The LinkedIn id.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Person.SkypeId">
            <summary>
            Gets or sets the Skype Id for the user.
            </summary>
            <value>The skypeId.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Person.Phone">
            <summary>
            Gets or sets the phone number.
            </summary>
            <value>The phone number.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Person.DefaultPodLocation">
            <summary>
            Gets or sets the default pod location.
            </summary>
            <value>The default pod location.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Person.Language">
            <summary>
            Gets or sets the UI language preference.
            </summary>
            <value>The UI language.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Person.ViewerBackgroundColor">
            <summary>
            Gets or sets the viewer background color.
            </summary>
            <value>The color.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Person.Thumbnail">
            <summary>
            Gets or sets the url to fetch the avatar of the user (if exists).
            </summary>
            <value>The avatar url.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Person.TimeZone">
            <summary>
            Gets or sets the time zone of the user.
            </summary>
            <value>The time zone value.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Person.Company">
            <summary>
            Gets or sets the company user belongs to.
            </summary>
            <value>The company.</value>
            <remarks>This property is deprecated, please use <see cref="P:Trimble.Connect.Client.Models.Person.Companies"/>.</remarks>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Person.Companies">
            <summary>
            Gets or sets the companies the user belongs to.
            </summary>
            <value>The collection of companies.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Person.Status">
            <summary>
            Gets or sets the status.
            </summary>
            <value>The status.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Person.StatusAlternateSetter">
            <summary>
            Sets the status.
            </summary>
            <value>The status.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Person.LastAccessedOnAlternateSetter">
            <summary>
            Sets the last accessed time stamp.
            </summary>
            <value>The last accessed time stamp.</value>
        </member>
        <member name="T:Trimble.Connect.Client.Models.PersonStatus">
            <summary>
            Enumeration of possible membership status.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.PersonStatus.Pending">
            <summary>
            The pending status.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.PersonStatus.Active">
            <summary>
            The active status.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.PersonStatus.Removed">
            <summary>
            The removed status.
            </summary>
        </member>
        <member name="T:Trimble.Connect.Client.Models.Principal">
            <summary>
            The principal (user or user group).
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Principal.Type">
            <summary>
            Gets or sets the recipient type (<see cref="F:Trimble.Connect.Client.Models.PrincipalType.User"/> or <see cref="F:Trimble.Connect.Client.Models.PrincipalType.Group"/>).
            </summary>
            <value>The type.</value>
        </member>
        <member name="T:Trimble.Connect.Client.Models.PrincipalType">
            <summary>
            The principal type.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.PrincipalType.User">
            <summary>
            The user.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.PrincipalType.Group">
            <summary>
            The group.
            </summary>
        </member>
        <member name="T:Trimble.Connect.Client.Models.Project">
            <summary>
            The project information.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Project.ThumbnailUrl">
            <summary>
            Gets or sets the thumbnail url.
            </summary>
            <value>The url.</value>
            <remarks>
            Url might be absolute or relative. Use <see cref="M:Trimble.Connect.Client.ITrimbleConnectClient.DownloadThumbnailAsync(System.String,System.Action{System.Net.Http.Handlers.HttpProgressEventArgs},System.Threading.CancellationToken)"/> to download the image content.
            </remarks>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Project.LastVisited">
            <summary>
            Gets or sets the time stamp of last visit by the user making the request.
            </summary>
            <value>The time stamp.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Project.Location">
            <summary>
            Gets or sets the location.
            </summary>
            <value>The location.</value>
            <example>E.g. 'northAmerica'.</example>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Project.Name">
            <summary>
            Gets or sets the name of the project.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Project.Description">
            <summary>
            Gets or sets the description of the project.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Project.StartDate">
            <summary>
            Gets or sets the project start date.
            </summary>
            <value>The time stamp.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Project.EndDate">
            <summary>
            Gets or sets the project end date.
            </summary>
            <value>The time stamp.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Project.FilesCount">
            <summary>
            Gets or sets the total number of files in the project.
            </summary>
            <value>The number.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Project.FoldersCount">
            <summary>
            Gets or sets the total number of files in the project.
            </summary>
            <value>The number.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Project.UsersCount">
            <summary>
            Gets or sets the total number of project members.
            </summary>
            <value>The number of members.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Project.GroupsCount">
            <summary>
            Gets or sets the total number of user groups.
            </summary>
            <value>The number of user groups.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Project.VersionsCount">
            <summary>
            Gets or sets the number of versions across all files in the project.
            </summary>
            <value>The number of versions.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Project.RootFolderIdentifier">
            <summary>
            Gets or sets the identifier of the root folder.
            </summary>
            <value>The root folder identifier.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Project.Size">
            <summary>
            Gets or sets the size of the project in bytes.
            </summary>
            <value>The project size in bytes.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Project.UpdatedBy">
            <summary>
            Gets or sets the information about person who modified the project's content.
            </summary>
            <value>The person.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Project.UpdatedOn">
            <summary>
            Gets or sets the last modification time stamp of the project's content.
            </summary>
            <value>The modification time stamp.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Project.AccessLevel">
            <summary>
            Gets or sets the current user's access level (<see cref="T:Trimble.Connect.Client.Models.AccessLevel"/>) to the project based on e-commerce status.
            </summary>
            <value>The access level.</value>
            <remarks>Can be <see cref="F:Trimble.Connect.Client.Models.AccessLevel.Full"/> or <see cref="F:Trimble.Connect.Client.Models.AccessLevel.None"/></remarks>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Project.License">
            <summary>
            Gets or sets the information about the license the project is associated with.
            </summary>
            <value>The license information.</value>
            <remarks>This value is received from the backend.</remarks>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Project.ThumbnailUrlAlternateSetter">
            <summary>
            Sets the thumbnail url.
            </summary>
            <value>The url.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Project.FilesCountAlternateSetter">
            <summary>
            Sets the total number of files in the project.
            </summary>
            <value>The number.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Project.FoldersCountAlternateSetter">
            <summary>
            Sets the total number of files in the project.
            </summary>
            <value>The number.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Project.UsersCountAlternateSetter">
            <summary>
            Sets the total number of project members.
            </summary>
            <value>The number of members.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Project.GroupsCountAlternateSetter">
            <summary>
            Sets the total number of user groups.
            </summary>
            <value>The number of user groups.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Project.VersionsCountAlternateSetter">
            <summary>
            Sets the number of versions across all files in the project.
            </summary>
            <value>The number of versions.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Project.SizeAlternateSetter">
            <summary>
            Sets the size of the project in bytes.
            </summary>
            <value>The project size in bytes.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Project.RootFolderIdentifierAlternateSetter">
            <summary>
            Sets the identifier of the root folder.
            </summary>
            <value>The root folder identifier.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Project.UpdatedByAlternateSetter">
            <summary>
            Sets the information about person who modified the project's content.
            </summary>
            <value>The person.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Project.UpdatedOnAlternateSetter">
            <summary>
            Sets the last modification time stamp of the project's content.
            </summary>
            <value>The modification time stamp.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Project.AccessLevelAlternateSetter">
            <summary>
            Sets the access level to the project.
            </summary>
            <value>The access level.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Project.LicenseAlternateSetter">
            <summary>
            Sets the information about the license the project is associated with.
            </summary>
            <value>The license information.</value>
            <remarks>This value is received from the backend.</remarks>
        </member>
        <member name="T:Trimble.Connect.Client.Models.ProjectionType">
            <summary>
            The projection type.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.ProjectionType.Perspective">
            <summary>
            The perspective projection.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.ProjectionType.Orthogonal">
            <summary>
            The orthogonal projection.
            </summary>
        </member>
        <member name="T:Trimble.Connect.Client.Models.ProjectSettings">
            <summary>
            Project wide settings.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.Models.ProjectSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.Models.ProjectSettings"/> class.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ProjectSettings.UnitSettings">
            <summary>
            Gets or sets the project's unit settings.
            </summary>
            <value>The unit settings.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ProjectSettings.TodosAreRestricted">
            <summary>
            Gets or sets a value indicating whether the todos are restricted.
            </summary>
            <value>The todos restriction flag.</value>
            <remarks>
            If <c>true</c> then a TODO is visible only to project admins, it's creator and assignees.
            If <c>false</c> a TODO is visible to all project members.
            </remarks>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ProjectSettings.InvitesAreRestricted">
            <summary>
            Gets or sets a value indicating whether the project invites are restricted to admin only.
            </summary>
            <value>The project invite restriction.</value>
            <remarks>
            If <c>true</c> then only a project admin can invite users to the project.
            If <c>false</c> any project member can invite users to the project.
            </remarks>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ProjectSettings.Properties">
            <summary>
            Gets or sets the additional properties to exchange with server.
            </summary>
            <value>The properties.</value>
        </member>
        <member name="T:Trimble.Connect.Client.Models.PropertyFilter">
            <summary>
            Represents a filter for object's properties in BIM Objects Search API.
            (Edited from TCPS API definitions):
            A filter is defined by:
            1. A property set name
            2. Zero or more property names
            3. Zero or one property value for a property name
            If only property set name is specified, all objects having properties belonging to that set are returned.
            If both property set name and property name are specified, objects having values set for that property are returned.
            If property set name, property name and property value are specified, query returns objects having exactly the value defined by the filter.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.Models.PropertyFilter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.Models.PropertyFilter"/> class.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.PropertyFilter.PropertySetName">
            <summary>
            Gets or sets the property set name.
            </summary>
            <value>The property set name.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.PropertyFilter.Properties">
            <summary>
            Gets or sets the properties to query.
            </summary>
            <value>The properties.</value>
        </member>
        <member name="T:Trimble.Connect.Client.Models.PropertyFilter.Property">
            <summary>
            Represents a property name or a property name and value.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.PropertyFilter.Property.Name">
            <summary>
            Gets or sets the property name.
            </summary>
            <value>The property name.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.PropertyFilter.Property.Value">
            <summary>
            Gets or sets the property value.
            </summary>
            <value>The property value.</value>
        </member>
        <member name="T:Trimble.Connect.Client.Models.Release">
            <summary>
            The release descriptor.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.Models.Release.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.Models.Release"/> class.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Release.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Release.DueDate">
            <summary>
            Gets or sets the due date.
            </summary>
            <value>The due date.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Release.Notes">
            <summary>
            Gets or sets the release notes.
            </summary>
            <value>The notes.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Release.Recipients">
            <summary>
            Gets or sets the recipients.
            </summary>
            <value>The list of recipients.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Release.Status">
            <summary>
            Gets or sets the status.
            </summary>
            <value>The status.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Release.StatusAlternateSetter">
            <summary>
            Sets the release status.
            </summary>
            <value>The release status.</value>
        </member>
        <member name="T:Trimble.Connect.Client.Models.ReleaseStatus">
            <summary>
            The release status.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.ReleaseStatus.Open">
            <summary>
            The status that indicates the release is open.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.ReleaseStatus.Sent">
            <summary>
            The status that indicates the release has been sent.
            </summary>
        </member>
        <member name="T:Trimble.Connect.Client.Models.Role">
            <summary>
            The user roles in the project.
            These are default roles. App should use <see cref="M:Trimble.Connect.Client.IProjectMembersController.GetAllRolesAsync(System.Threading.CancellationToken)"/> to get a list of project roles dynamically.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.Role.User">
            <summary>
            The normal user.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.Role.Admin">
            <summary>
            The administrator.
            </summary>
        </member>
        <member name="T:Trimble.Connect.Client.Models.Search">
            <summary>
            A search query builder.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.Models.Search.For``1(System.String)">
            <summary>
            Creates a <see cref="T:Trimble.Connect.Client.Models.SearchQuery"/> for the string in specific entity type.
            </summary>
            <param name="query">The string to search.</param>
            <typeparam name="T">The entity type to search.</typeparam>
            <returns>The search query.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.Models.Search.For(System.String)">
            <summary>
            Creates a <see cref="T:Trimble.Connect.Client.Models.SearchQuery"/> for the string.
            </summary>
            <param name="query">The string to search.</param>
            <returns>The search query.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.Models.SearchQuery">
            <summary>
            Represents a search query.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.Models.SearchQuery.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.Models.SearchQuery"/> class.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.Models.SearchQuery.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.Models.SearchQuery"/> class.
            </summary>
            <param name="query">The string to search.</param>
        </member>
        <member name="P:Trimble.Connect.Client.Models.SearchQuery.Query">
            <summary>
            Gets or sets the string to search.
            </summary>
            <value>The string.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.SearchQuery.ProjectIdentifiers">
            <summary>
            Gets or sets the list of identifiers of the projects to search in. 
            Optional. If null or empty search is performed across all projects.
            </summary>
            <value>The collection of identifier.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.SearchQuery.EntityTypes">
            <summary>
            Gets or sets the entity types (<see cref="T:Trimble.Connect.Client.Models.EntityType"/>) to search.
            Optional.
            </summary>
            <value>The collection of entity types.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.SearchQuery.StartDate">
            <summary>
            Gets or sets the starting date to filter.
            Optional.
            </summary>
            <value>The time stamp.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.SearchQuery.EndDate">
            <summary>
            Gets or sets the ending date to filter.
            Optional.
            </summary>
            <value>The time stamp.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.SearchQuery.SortBy">
            <summary>
            Gets or sets the sort order.
            </summary>
            <value>The sort order.</value>
            <remarks>
            Valid options are 'name', 'modified', 'created', 'type'.
            Prefix with “+” for ascending and “-” for descending sort order.
            </remarks>
        </member>
        <member name="M:Trimble.Connect.Client.Models.SearchQuery.In(System.String[])">
            <summary>
            Sets the <see cref="P:Trimble.Connect.Client.Models.SearchQuery.ProjectIdentifiers"/> property.
            </summary>
            <param name="projectId">The project identifiers.</param>
            <returns>The search query.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.Models.SearchQuery.From(System.DateTimeOffset)">
            <summary>
            Sets the <see cref="P:Trimble.Connect.Client.Models.SearchQuery.StartDate"/> property.
            </summary>
            <param name="startDate">The start date.</param>
            <returns>The search query.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.Models.SearchQuery.To(System.DateTimeOffset)">
            <summary>
            Sets the <see cref="P:Trimble.Connect.Client.Models.SearchQuery.EndDate"/> property.
            </summary>
            <param name="endDate">The end date.</param>
            <returns>The search query.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.Models.SearchQuery.Between(System.DateTimeOffset,System.DateTimeOffset)">
            <summary>
            Sets the <see cref="P:Trimble.Connect.Client.Models.SearchQuery.StartDate"/> and <see cref="P:Trimble.Connect.Client.Models.SearchQuery.EndDate"/> properties.
            </summary>
            <param name="startDate">The start date.</param>
            <param name="endDate">The end date.</param>
            <returns>The search query.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.Models.SearchQuery.OrderBy(System.String)">
            <summary>
            Sets the <see cref="P:Trimble.Connect.Client.Models.SearchQuery.SortBy"/> property.
            </summary>
            <param name="sort">The sort option.</param>
            <returns>The search query.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.Models.SearchQuery.BuildQuery">
            <summary>
            Builds a Uri query.
            </summary>
            <returns>The query to be user in Uri.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.Models.SearchResult">
            <summary>
            Represents a search query result.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.SearchResult.EntityType">
            <summary>
            Gets or sets the entity type (<see cref="P:Trimble.Connect.Client.Models.SearchResult.EntityType"/>).
            </summary>
            <value>The string.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.SearchResult.Entity">
            <summary>
            Gets or sets the identifiers of the projects to search. 
            Optional. If null or empty search is performed across all projects.
            </summary>
            <value>The collection of identifiers.</value>
        </member>
        <member name="T:Trimble.Connect.Client.Models.SectionPlane">
            <summary>
            The section plane.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.SectionPlane.Identifier">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.SectionPlane.DirectionX">
            <summary>
            Gets or sets the x coordinate of plane normal.
            </summary>
            <value>The x coordinate of plane normal.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.SectionPlane.DirectionY">
            <summary>
            Gets or sets the y coordinate of plane normal.
            </summary>
            <value>The y coordinate of plane normal.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.SectionPlane.DirectionZ">
            <summary>
            Gets or sets the z coordinate of plane normal.
            </summary>
            <value>The z coordinate of plane normal.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.SectionPlane.PositionX">
            <summary>
            Gets or sets the x coordinate of plane position.
            </summary>
            <value>The x coordinate of plane position.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.SectionPlane.PositionY">
            <summary>
            Gets or sets the y coordinate of plane position.
            </summary>
            <value>The y coordinate of plane position.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.SectionPlane.PositionZ">
            <summary>
            Gets or sets the z coordinate of plane position.
            </summary>
            <value>The z coordinate of plane position.</value>
        </member>
        <member name="M:Trimble.Connect.Client.Models.SectionPlane.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.Models.Segment3">
            <summary>
            The segment.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Segment3.PositionX">
            <summary>
            Gets or sets the x coordinate of line start.
            </summary>
            <value>The x coordinate.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Segment3.PositionY">
            <summary>
            Gets or sets the y coordinate of line start.
            </summary>
            <value>The y coordinate.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Segment3.PositionZ">
            <summary>
            Gets or sets the z coordinate of line start.
            </summary>
            <value>The z coordinate.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Segment3.Position2X">
            <summary>
            Gets or sets the x coordinate of line end.
            </summary>
            <value>The x coordinate.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Segment3.Position2Y">
            <summary>
            Gets or sets the y coordinate of line end.
            </summary>
            <value>The y coordinate.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Segment3.Position2Z">
            <summary>
            Gets or sets the z coordinate of line end.
            </summary>
            <value>The z coordinate.</value>
        </member>
        <member name="T:Trimble.Connect.Client.Models.SegmentEndType">
            <summary>
            The segment end type.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.SegmentEndType.None">
            <summary>
            The none.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.SegmentEndType.Arrow">
            <summary>
            The arrow.
            </summary>
        </member>
        <member name="T:Trimble.Connect.Client.Models.SegmentMarkup">
            <summary>
            The segment markup item.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.Models.SegmentMarkup.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.Models.SegmentMarkup"/> class.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.SegmentMarkup.Position2X">
            <summary>
            Gets or sets the x coordinate of line end.
            </summary>
            <value>The x coordinate.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.SegmentMarkup.Position2Y">
            <summary>
            Gets or sets the y coordinate of line end.
            </summary>
            <value>The y coordinate.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.SegmentMarkup.Position2Z">
            <summary>
            Gets or sets the z coordinate of line end.
            </summary>
            <value>The z coordinate.</value>
        </member>
        <member name="T:Trimble.Connect.Client.Models.SegmentsMarkup">
            <summary>
            The segments markup item.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.Models.SegmentsMarkup.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.Models.SegmentsMarkup"/> class.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.SegmentsMarkup.Camera">
            <summary>
            Gets or sets the camera from where this set of lines had been drawn.
            </summary>
            <value>The camera.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.SegmentsMarkup.Segments">
            <summary>
            Gets or sets the collection of segments.
            </summary>
            <value>The collection of segments.</value>
        </member>
        <member name="T:Trimble.Connect.Client.Models.SyncCommand">
            <summary>
            The sync command.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.Models.SyncCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.Models.SyncCommand"/> class.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.SyncCommand.Command">
            <summary>
            Gets or sets the command type (<see cref="T:Trimble.Connect.Client.Models.SyncCommandType"/>).
            </summary>
            <value>The command type.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.SyncCommand.Arguments">
            <summary>
            Gets or sets the arguments.
            </summary>
            <value>The arguments.</value>
        </member>
        <member name="T:Trimble.Connect.Client.Models.SyncCommandType">
            <summary>
            The synchronization command.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.SyncCommandType.Download">
            <summary>
            The download.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.SyncCommandType.Upload">
            <summary>
            The upload.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.SyncCommandType.Delete">
            <summary>
            The delete.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.SyncCommandType.Rename">
            <summary>
            The rename.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.SyncCommandType.Move">
            <summary>
            The move.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.SyncCommandType.Ignore">
            <summary>
            The ignore.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.SyncCommandType.Process">
            <summary>
            The process.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.SyncCommandType.ProcessUpload">
            <summary>
            The process upload.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.SyncCommandType.PocessDownload">
            <summary>
            The process download.
            </summary>
        </member>
        <member name="T:Trimble.Connect.Client.Models.SyncItem">
            <summary>
            The sync item.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.Models.SyncItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.Models.SyncItem"/> class.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.SyncItem.SessionId">
            <summary>
            Gets or sets the sync session identifier.
            </summary>
            <value>The session identifier.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.SyncItem.FileIdentifier">
            <summary>
            Gets or sets the file identifier.
            </summary>
            <value>The file identifier.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.SyncItem.VersionIdentifier">
            <summary>
            Gets or sets the version identifier.
            </summary>
            <value>The revision identifier.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.SyncItem.ParentVersionIdentifier">
            <summary>
            Gets or sets the parent version identifier.
            </summary>
            <value>The parent version identifier.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.SyncItem.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.SyncItem.Size">
            <summary>
            Gets or sets the size.
            </summary>
            <value>The size.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.SyncItem.Hash">
            <summary>
            Gets or sets the MD5 hash.
            </summary>
            <value>The hash.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.SyncItem.IsDirectory">
            <summary>
            Gets or sets a value indicating whether the item is directory or file.
            </summary>
            <value>True if directory.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.SyncItem.Children">
            <summary>
            Gets or sets the children.
            </summary>
            <value>The children.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.SyncItem.SyncType">
            <summary>
            Gets or sets the sync type (<see cref="P:Trimble.Connect.Client.Models.SyncItem.SyncType"/>).
            </summary>
            <value>The sync type.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.SyncItem.IsSyncFiles">
            <summary>
            Gets or sets a value indicating whether to sync files.
            </summary>
            <value>True if sync files.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.SyncItem.IsReadOnly">
            <summary>
            Gets or sets a value indicating whether the item is read only.
            </summary>
            <value>True if read only.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.SyncItem.Command">
            <summary>
            Gets or sets a command.
            </summary>
            <value>The command.</value>
        </member>
        <member name="T:Trimble.Connect.Client.Models.SyncItemExtension">
            <summary>
            The sync item extensions.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.Models.SyncItemExtension.GetSessionId(Trimble.Connect.Client.Models.SyncItem[])">
            <summary>
            Get the sync session identifier.
            </summary>
            <param name="state">The synchronization state.</param>
            <returns>The sync session identifier.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.Models.SyncType">
            <summary>
            The synchronization type.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.SyncType.Full">
            <summary>
            The full sync.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.SyncType.Partial">
            <summary>
            The partial sync.
            </summary>
        </member>
        <member name="T:Trimble.Connect.Client.Models.Tag">
            <summary>
            A tag.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Tag.Label">
            <summary>
            Gets or sets the label.
            </summary>
            <value>The label.</value>
            <remarks>TC maximal supported length is 40 characters. The label is validated according to Windows OS Path rules.</remarks>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Tag.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="T:Trimble.Connect.Client.Models.TextMarkup">
            <summary>
            The text markup item.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.Models.TextMarkup.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.Models.TextMarkup"/> class.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.TextMarkup.ScreenSpaceDistance">
            <summary>
            Gets or sets screen space distance.
            </summary>
            <value>The distance.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.TextMarkup.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.TextMarkup.Width">
            <summary>
            Gets or sets the width.
            </summary>
            <value>The width.</value>
        </member>
        <member name="T:Trimble.Connect.Client.Models.Todo">
            <summary>
            The todo item.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.Models.Todo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.Models.Todo"/> class.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Todo.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Todo.DueDate">
            <summary>
            Gets or sets the due date.
            </summary>
            <value>The due date.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Todo.Label">
            <summary>
            Gets or sets the label.
            </summary>
            <value>The label.</value>
            <remarks>Generated automatically with prefix and running number.</remarks>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Todo.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>The title.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Todo.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Todo.Status">
            <summary>
            Gets or sets the status.
            </summary>
            <value>The status.</value>
            <remarks>Standard values are listed in <see cref="T:Trimble.Connect.Client.Models.TodoStatus"/>.</remarks>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Todo.Priority">
            <summary>
            Gets or sets the priority.
            </summary>
            <value>The priority.</value>
            <remarks>Standard values are listed in <see cref="T:Trimble.Connect.Client.Models.TodoPriority"/>.</remarks>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Todo.CompletionPercentage">
            <summary>
            Gets or sets the completion percentage.
            </summary>
            <value>The completion percentage.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Todo.Assignees">
            <summary>
            Gets or sets the assignees.
            </summary>
            <value>The list of assignees.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Todo.LabelAlternateSetter">
            <summary>
            Sets the label.
            </summary>
            <value>The label.</value>
        </member>
        <member name="T:Trimble.Connect.Client.Models.TodoPriority">
            <summary>
            The priority for <see cref="T:Trimble.Connect.Client.Models.Todo"/> items.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.TodoPriority.Low">
            <summary>
            The low priority.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.TodoPriority.Normal">
            <summary>
            The normal priority.
            </summary>
            <remarks>This is a default value for priority.</remarks>
        </member>
        <member name="F:Trimble.Connect.Client.Models.TodoPriority.High">
            <summary>
            The high priority.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.TodoPriority.Critical">
            <summary>
            The critical priority.
            </summary>
        </member>
        <member name="T:Trimble.Connect.Client.Models.TodoStatus">
            <summary>
            The statuses for <see cref="T:Trimble.Connect.Client.Models.Todo"/> items.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.TodoStatus.New">
            <summary>
            The new status.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.TodoStatus.InProgress">
            <summary>
            The resolved status.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.TodoStatus.Resolved">
            <summary>
            The resolved status.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.TodoStatus.Blocked">
            <summary>
            The blocked status.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Models.TodoStatus.Closed">
            <summary>
            The closed status.
            </summary>
        </member>
        <member name="T:Trimble.Connect.Client.Models.UnitSettings">
            <summary>
            The unit settings for a project.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.Models.UnitSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.Models.UnitSettings"/> class.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.UnitSettings.UnitSystem">
            <summary>
            Gets or sets the unit system.
            </summary>
            <value>The unit system.</value>
            <remarks>
            The unit system (metric, imperial, custom) is the driver for validating all the other units in unit settings. 
            If the unit system is metric, all units should be in metric. 
            If the unit system is imperial, all units should be in imperial. 
            API also allows to reset all the values to metric/imperial if the unit system is the only attribute in the api request. 
            You can mix and match values when the unit system is custom.
            </remarks>
        </member>
        <member name="P:Trimble.Connect.Client.Models.UnitSettings.LengthUnit">
            <summary>
            Gets or sets the length unit.
            </summary>
            <value>The length unit.</value>
            <remarks>
            Metric: [mm], cm, m, km.
            Imperial: [in], ft, yd, mi, ft-in.
            [] denotes default value.
            </remarks>
        </member>
        <member name="P:Trimble.Connect.Client.Models.UnitSettings.LengthUnitFormat">
            <summary>
            Gets or sets the length unit's display precision.
            </summary>
            <value>The length unit's display precision.</value>
            <remarks>
            Metric or imperial except ft-in: 0, 0.1, [0.01], 0.001.
            ft-in only: 1/2, [1/4] , 1/8, 1/16, 1/32, 1/64.
            [] denotes default value.
            </remarks>
        </member>
        <member name="P:Trimble.Connect.Client.Models.UnitSettings.LengthMeasurementUnit">
            <summary>
            Gets or sets the length measurement unit.
            </summary>
            <value>The length measurement unit.</value>
            <remarks>
            Metric: [mm], cm, m, km.
            Imperial: [in], ft, yd, mi, ft-in.
            [] denotes default value.
            </remarks>
        </member>
        <member name="P:Trimble.Connect.Client.Models.UnitSettings.LengthMeasurementUnitFormat">
            <summary>
            Gets or sets the length measurement unit's display precision.
            </summary>
            <value>The length measurement unit's display precision.</value>
            <remarks>
            Metric or imperial except ft-in: 0, 0.1, [0.01], 0.001.
            ft-in only: 1/2, [1/4] , 1/8, 1/16, 1/32, 1/64.
            [] denotes default value.
            </remarks>
        </member>
        <member name="P:Trimble.Connect.Client.Models.UnitSettings.AreaUnit">
            <summary>
            Gets or sets the area unit.
            </summary>
            <value>The area unit.</value>
            <remarks>
            Metric: mm2, cm2, [m2].
            Imperial: in2, [ft2], yd2.
            [] denotes default value.
            </remarks>
        </member>
        <member name="P:Trimble.Connect.Client.Models.UnitSettings.AreaUnitFormat">
            <summary>
            Gets or sets the area unit's display precision.
            </summary>
            <value>The area unit's display precision.</value>
            <remarks>
            Supported values: 0, 0.1, [0.01], 0.001.
            [] denotes default value.
            </remarks>
        </member>
        <member name="P:Trimble.Connect.Client.Models.UnitSettings.VolumeUnit">
            <summary>
            Gets or sets the volume unit.
            </summary>
            <value>The volume unit.</value>
            <remarks>
            Metric: mm3, cm3, [m3].
            Imperial: in3, ft3, [yd3].
            [] denotes default value.
            </remarks>
        </member>
        <member name="P:Trimble.Connect.Client.Models.UnitSettings.VolumeUnitFormat">
            <summary>
            Gets or sets the volume unit's display precision.
            </summary>
            <value>The volume unit's display precision.</value>
            <remarks>
            Supported values: 0, 0.1, [0.01], 0.001.
            [] denotes default value.
            </remarks>
        </member>
        <member name="P:Trimble.Connect.Client.Models.UnitSettings.WeightUnit">
            <summary>
            Gets or sets the weight unit.
            </summary>
            <value>The weight unit.</value>
            <remarks>
            Metric: mg, g, kg, [t].
            Imperial: oz, [lb], ton.
            [] denotes default value.
            </remarks>
        </member>
        <member name="P:Trimble.Connect.Client.Models.UnitSettings.WeightUnitFormat">
            <summary>
            Gets or sets the weight unit's display precision.
            </summary>
            <value>The weight unit's display precision.</value>
            <remarks>
            Supported values: 0, 0.1, [0.01], 0.001.
            [] denotes default value.
            </remarks>
        </member>
        <member name="P:Trimble.Connect.Client.Models.UnitSettings.AngularUnit">
            <summary>
            Gets or sets the angular unit.
            </summary>
            <value>The angular unit.</value>
            <remarks>
            Metric: [rad].
            Imperial: [deg].
            [] denotes default value.
            </remarks>
        </member>
        <member name="P:Trimble.Connect.Client.Models.UnitSettings.AngularUnitFormat">
            <summary>
            Gets or sets the angular unit's display precision.
            </summary>
            <value>The angular unit's display precision.</value>
            <remarks>
            Supported values: 0, 0.1, [0.01], 0.001.
            [] denotes default value.
            </remarks>
        </member>
        <member name="P:Trimble.Connect.Client.Models.UnitSettings.Properties">
            <summary>
            Gets or sets the additional properties to exchange with server.
            </summary>
            <value>The properties.</value>
        </member>
        <member name="T:Trimble.Connect.Client.Models.UnknownElement">
            <summary>
            Represents entity element not recognized by this version of SDK.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.Models.UnknownElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.Models.UnknownElement"/> class.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.UnknownElement.Properties">
            <summary>
            Gets or sets the additional properties to exchange with server.
            </summary>
            <value>The properties.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.UnknownElement.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="T:Trimble.Connect.Client.Models.DownloadUrlResponse">
            <summary>
            Download Url Response.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.DownloadUrlResponse.Url">
            <summary>
            Gets or sets the Url.
            </summary>
            <value>The url.</value>
        </member>
        <member name="T:Trimble.Connect.Client.Models.FilePartResponseInfo">
            <summary>
            The File Part Response Info.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.FilePartResponseInfo.PartNumber">
            <summary>
            Gets or sets the Part Number.
            </summary>
            <value>The part number value.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.FilePartResponseInfo.ETag">
            <summary>
            Gets or sets the ETag.
            </summary>
            <value>The eTag value.</value>
        </member>
        <member name="T:Trimble.Connect.Client.Models.FilePartUploadInfo">
            <summary>
            File Part Upload Info.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.FilePartUploadInfo.PartNumber">
            <summary>
            Gets or sets the Part Number.
            </summary>
            <value>The part number.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.FilePartUploadInfo.UploadURL">
            <summary>
            Gets or sets the Upload URL.
            </summary>
            <value>The upload url.</value>
        </member>
        <member name="T:Trimble.Connect.Client.Models.FileUploadInitiateResponse">
            <summary>
            File Upload Initiate Response.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.FileUploadInitiateResponse.UploadId">
            <summary>
            Gets or sets the upload Identifier.
            </summary>
            <value>The upload id.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.FileUploadInitiateResponse.UploadURL">
            <summary>
            Gets or sets the UploadURL.
            </summary>
            <value>The upload url.</value>
        </member>
        <member name="T:Trimble.Connect.Client.Models.Multipart">
            <summary>
            The Multipart class.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Multipart.Upload">
            <summary>
            Gets or sets the Upload value.
            </summary>
            <value>The Upload Info.</value>
        </member>
        <member name="T:Trimble.Connect.Client.Models.MultipartFileUploadInitiateResponse">
            <summary>
            The Multipart File Upload Initiate Response.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.MultipartFileUploadInitiateResponse.UploadId">
            <summary>
            Gets or sets the Upload Id.
            </summary>
            <value>The upload id.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.MultipartFileUploadInitiateResponse.Parts">
            <summary>
            Gets or sets the Parts.
            </summary>
            <value>The parts info.</value>
        </member>
        <member name="T:Trimble.Connect.Client.Models.MultiPartUploadBody">
            <summary>
            The MultiPart Upload Body.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.MultiPartUploadBody.UploadId">
            <summary>
            Gets or sets the Upload Id.
            </summary>
            <value>The upload Id.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.MultiPartUploadBody.Multipart">
            <summary>
            Gets or sets the Multipart.
            </summary>
            <value>The Multipart info.</value>
        </member>
        <member name="T:Trimble.Connect.Client.Models.Upload">
            <summary>
            The Upload class.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Upload.Parts">
            <summary>
            Gets or sets the Parts.
            </summary>
            <value> The parts.</value>
        </member>
        <member name="T:Trimble.Connect.Client.Models.UrlReference">
            <summary>
            The url reference used in attachments and links.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.UrlReference.Url">
            <summary>
            Gets or sets the url.
            </summary>
            <value>The url.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.UrlReference.Name">
            <summary>
            Gets or sets the url.
            </summary>
            <value>The url.</value>
        </member>
        <member name="T:Trimble.Connect.Client.Models.ValueWithExpiration`1">
            <summary>
            Cache that has values with expiration time.
            </summary>
            <typeparam name="T">Generic entity type.</typeparam>
        </member>
        <member name="M:Trimble.Connect.Client.Models.ValueWithExpiration`1.#ctor(`0,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.Models.ValueWithExpiration`1"/> class.
            Constructs a value with expiration time stamp.
            </summary>
            <param name="value">Generic entity type.</param>
            <param name="expiresIn">Expires in time span.</param>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ValueWithExpiration`1.Value">
            <summary>
            Gets the value.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ValueWithExpiration`1.ExpiresAt">
            <summary>
            Gets the Expires at time.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ValueWithExpiration`1.IsExpired">
            <summary>
            Gets a value indicating whether the item is expired.
            </summary>
        </member>
        <member name="T:Trimble.Connect.Client.Models.Vector3">
            <summary>
            A vector class with three components.
            </summary> 
        </member>
        <member name="P:Trimble.Connect.Client.Models.Vector3.X">
            <summary>
            Gets or sets the X-component of the vector.
            </summary> 
            <value>The X coordinate.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Vector3.Y">
            <summary>
            Gets or sets the Y-component of the vector.
            </summary> 
            <value>The Y coordinate.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Vector3.Z">
            <summary>
            Gets or sets the Z-component of the vector.
            </summary> 
            <value>The Z coordinate.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.Vector3.Length">
            <summary>
            Gets the length of the vector.
            </summary>
            <value>The length.</value>
        </member>
        <member name="M:Trimble.Connect.Client.Models.Vector3.Dot(Trimble.Connect.Client.Models.Vector3,Trimble.Connect.Client.Models.Vector3)">
            <summary>
            Gets dot product from the vectors.
            </summary>  
            <param name="vector1">The vector1.</param>
            <param name="vector2">The vector2.</param>
            <returns>The dot product.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.Models.Vector3.Cross(Trimble.Connect.Client.Models.Vector3,Trimble.Connect.Client.Models.Vector3)">
            <summary>
            Gets cross product from the vectors.
            </summary>  
            <param name="vector1">The vector1.</param>
            <param name="vector2">The vector2.</param>
            <returns>The dot product.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.Models.Vector3.Normalize">
            <summary>
            Normalizes the vector.
            </summary>  
        </member>
        <member name="M:Trimble.Connect.Client.Models.Vector3.Scale(System.Double)">
            <summary>
            Scales the vector.
            </summary>  
            <param name="factor">The factor.</param>
        </member>
        <member name="M:Trimble.Connect.Client.Models.Vector3.Subtract(Trimble.Connect.Client.Models.Vector3)">
            <summary>
            Subtracts from the vector.
            </summary>  
            <param name="vector">The vector.</param>
        </member>
        <member name="T:Trimble.Connect.Client.Models.VersionInfo">
            <summary>
            The app version information.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.Models.VersionInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.Models.VersionInfo"/> class.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.VersionInfo.Version">
            <summary>
            Gets or sets the version number.
            </summary>
            <value>The version number.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.VersionInfo.AppName">
            <summary>
            Gets or sets the application name.
            </summary>
            <value>The application name.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.VersionInfo.Platform">
            <summary>
            Gets or sets the platform (e.g. WIN64, WIN32).
            </summary>
            <value>The platform name.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.VersionInfo.DownloadUrl">
            <summary>
            Gets or sets the URL to download installation package.
            </summary>
            <value>The URL.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.VersionInfo.Checksum">
            <summary>
            Gets or sets the checksum.
            </summary>
            <value>The checksum for installation package.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.VersionInfo.Configuration">
            <summary>
            Gets or sets the custom application configuration.
            </summary>
            <value>The configuration.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.VersionInfo.Properties">
            <summary>
            Gets or sets the additional properties to exchange with server.
            </summary>
            <value>The properties.</value>
        </member>
        <member name="T:Trimble.Connect.Client.Models.View">
            <summary>
            The view entity.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.Models.View.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.Models.View"/> class.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.View.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.View.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.View.ThumbnailUrl">
            <summary>
            Gets or sets the thumbnail url.
            </summary>
            <value>The url.</value>
            <remarks>
            Url might be absolute or relative. Use <see cref="M:Trimble.Connect.Client.ITrimbleConnectClient.DownloadThumbnailAsync(System.String,System.Action{System.Net.Http.Handlers.HttpProgressEventArgs},System.Threading.CancellationToken)"/> to download the image content.
            </remarks>
        </member>
        <member name="P:Trimble.Connect.Client.Models.View.Assignees">
            <summary>
            Gets or sets the assignees.
            </summary>
            <value>The list of assignees.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.View.BackgroundColor">
            <summary>
            Gets or sets the background color.
            </summary>
            <value>The background color.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.View.Models">
            <summary>
            Gets or sets the file version identifiers.
            </summary>
            <value>The list of file version identifiers.</value>
            <remarks>In the same order as <see cref="P:Trimble.Connect.Client.Models.View.Files"/>.</remarks>
        </member>
        <member name="P:Trimble.Connect.Client.Models.View.Files">
            <summary>
            Gets or sets the file identifiers.
            </summary>
            <value>The list of file identifiers.</value>
            <remarks>In the same order as <see cref="P:Trimble.Connect.Client.Models.View.Models"/>.</remarks>
        </member>
        <member name="P:Trimble.Connect.Client.Models.View.Camera">
            <summary>
            Gets or sets the camera.
            </summary>
            <value>The camera.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.View.SectionPlanes">
            <summary>
            Gets or sets the section planes.
            </summary>
            <value>The list of section planes.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.View.Markups">
            <summary>
            Gets or sets the markups.
            </summary>
            <value>The list of markups.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.View.Presentation">
            <summary>
            Gets or sets the presentation preferences.
            </summary>
            <value>The presentation preferences.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.View.IsLarge">
            <summary>
            Gets or sets a value indicating whether the view size is large or small.
            </summary>
            <value>True if the view is large (view size is greater than 500 KB), false otherwise.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.View.ThumbnailUrlAlternateSetter">
            <summary>
            Sets the thumbnail url.
            </summary>
            <value>The url.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.View.FilesAlternateSetter">
            <summary>
            Sets the thumbnail url.
            </summary>
            <value>The url.</value>
        </member>
        <member name="T:Trimble.Connect.Client.Models.View2D">
            <summary>
            The 2D view entity.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.Models.View2D.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.Models.View2D"/> class.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.View2D.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.View2D.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.View2D.ThumbnailUrl">
            <summary>
            Gets or sets the thumbnail url.
            </summary>
            <value>The url.</value>
            <remarks>
            Url might be absolute or relative. Use <see cref="M:Trimble.Connect.Client.ITrimbleConnectClient.DownloadThumbnailAsync(System.String,System.Action{System.Net.Http.Handlers.HttpProgressEventArgs},System.Threading.CancellationToken)"/> to download the image content.
            </remarks>
        </member>
        <member name="P:Trimble.Connect.Client.Models.View2D.Assignees">
            <summary>
            Gets or sets the assignees.
            </summary>
            <value>The list of assignees.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.View2D.FileIdentifier">
            <summary>
            Gets or sets the file identifier.
            </summary>
            <value>The file identifier.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.View2D.FileVersionIdentifier">
            <summary>
            Gets or sets the file version identifier.
            </summary>
            <value>The file version identifier.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.View2D.Rotation">
            <summary>
            Gets or sets the rotation angle.
            </summary>
            <value>The rotation.</value>
            <remarks>The possible rotation values are 0, 90, 180, 270 degrees.</remarks>
        </member>
        <member name="P:Trimble.Connect.Client.Models.View2D.ZoomLevel">
            <summary>
            Gets or sets the zoom level percentage.
            </summary>
            <value>The zoom level percentage.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.View2D.PageNumber">
            <summary>
            Gets or sets the page number starting from 1 (not an index).
            </summary>
            <value>The page number.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.View2D.Markup">
            <summary>
            Gets or sets the 2D markup.
            </summary>
            <value>The 2D markup.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.View2D.ThumbnailUrlAlternateSetter">
            <summary>
            Sets the thumbnail url.
            </summary>
            <value>The url.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.View2D.FileIdentifierAlternateSetter">
            <summary>
            Sets the file identifier.
            </summary>
            <value>The file identifier.</value>
        </member>
        <member name="T:Trimble.Connect.Client.Models.ViewGroup">
            <summary>
            The view group entity.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.Models.ViewGroup.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.Models.ViewGroup"/> class.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ViewGroup.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ViewGroup.Views">
            <summary>
            Gets or sets the ordered collection of view identifiers.
            </summary>
            <value>The list of view identifiers.</value>
        </member>
        <member name="T:Trimble.Connect.Client.Models.ViewPresentation">
            <summary>
            The view presentation preferences.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.Models.ViewPresentation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.Models.ViewPresentation"/> class.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ViewPresentation.IsGhost">
            <summary>
            Gets or sets a value indicating whether view is in the ghost mode.
            </summary>
            <value>The ghost mode.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ViewPresentation.IsTransparent">
            <summary>
            Gets or sets a value indicating whether view is in the transparent mode.
            </summary>
            <value>The transparent mode.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ViewPresentation.IsWireframe">
            <summary>
            Gets or sets a value indicating whether view is in the wireframe  mode.
            </summary>
            <value>The wireframe mode.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ViewPresentation.TransparencyLevel">
            <summary>
            Gets or sets the transparency level.
            </summary>
            <value>The transparency level.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ViewPresentation.IsNewEnabled">
            <summary>
            Gets or sets a value indicating whether 'new' indicators are visible.
            </summary>
            <value>The indicators visibility.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ViewPresentation.IsPendingEnabled">
            <summary>
            Gets or sets a value indicating whether 'pending' indicators are visible.
            </summary>
            <value>The indicators visibility.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ViewPresentation.IsCriticalEnabled">
            <summary>
            Gets or sets a value indicating whether 'critical' indicators are visible.
            </summary>
            <value>The indicators visibility.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ViewPresentation.IsResolvedEnabled">
            <summary>
            Gets or sets a value indicating whether 'resolved' indicators are visible.
            </summary>
            <value>The indicators visibility.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ViewPresentation.IsIgnoredEnabled">
            <summary>
            Gets or sets a value indicating whether 'ignored' indicators are visible.
            </summary>
            <value>The indicators visibility.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ViewPresentation.IsTodosEnabled">
            <summary>
            Gets or sets a value indicating whether 'todos' indicators are visible.
            </summary>
            <value>The indicators visibility.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ViewPresentation.IsDocumentsEnabled">
            <summary>
            Gets or sets a value indicating whether 'documents' indicators are visible.
            </summary>
            <value>The indicators visibility.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ViewPresentation.ElementTypes">
            <summary>
            Gets or sets the model element type states.
            </summary>
            <value>The collection of element type states.</value>
        </member>
        <member name="P:Trimble.Connect.Client.Models.ViewPresentation.Elements">
            <summary>
            Gets or sets the model element id states.
            </summary>
            <value>The collection of element id states.</value>
        </member>
        <member name="T:Trimble.Connect.Client.Models.PrincipalConverter">
            <summary>
            The principal JSON converter.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.Models.PrincipalConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            <c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Trimble.Connect.Client.Models.PrincipalConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param><param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>
            The object value.
            </returns>
        </member>
        <member name="M:Trimble.Connect.Client.Models.PrincipalConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:Newtonsoft.Json.JsonWriter"/> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="T:Trimble.Connect.Client.DeltaResponseQueryResult">
            <summary>
            The entity query result implementation.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.DeltaResponseQueryResult.queryPath">
            <summary>
            The uri template to query from.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.DeltaResponseQueryResult.cursor">
            <summary>
            The sync cursor from which to query changes.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.DeltaResponseQueryResult.types">
            <summary>
            The types to query changes for.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.DeltaResponseQueryResult.hasMorePages">
            <summary>
            The status of paging for a type.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.DeltaResponseQueryResult.#ctor(Trimble.Connect.Client.Common.Http.TrimbleConnectHttpClient,Trimble.Connect.Client.TrimbleConnectUser,System.Nullable{System.Int64},System.String,Trimble.Connect.Client.Models.Heartbeat,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.DeltaResponseQueryResult"/> class.
            </summary>
            <param name="client">The TC client.</param>
            <param name="user">The TC user.</param>
            <param name="pageSize">The size of range to request from pod.</param>
            <param name="queryPath">The uri base to query from.</param>
            <param name="cursor">The cursor that represents the moment in time from which to consider object changes.</param>
            <param name="types">The types to query changes for.</param>
        </member>
        <member name="M:Trimble.Connect.Client.DeltaResponseQueryResult.#ctor(Trimble.Connect.Client.DeltaResponseQueryResult)">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.DeltaResponseQueryResult"/> class.
            </summary>
            <param name="prevPage">The previous page.</param>
        </member>
        <member name="M:Trimble.Connect.Client.DeltaResponseQueryResult.GetNextPageAsync(System.Threading.CancellationToken)">
            <summary>
            Fetches a next page of results.
            </summary>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The task.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.DeltaResponseQueryResult.CreateAsync(Trimble.Connect.Client.Common.Http.TrimbleConnectHttpClient,Trimble.Connect.Client.TrimbleConnectUser,System.Nullable{System.Int64},System.String,Trimble.Connect.Client.Models.Heartbeat,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Fetches a first page of results from server.
            </summary>
            <param name="client">The TC client.</param>
            <param name="user">The TC user.</param>
            <param name="pageSize">The size of range to request from pod.</param>
            <param name="queryPath">The uri to query from.</param>
            <param name="cursor">The cursor that represents the moment in time from which to consider object changes.</param>
            <param name="types">The types to query changes from.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The task.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.DeltaResponseQueryResult.GetPageAsync(Trimble.Connect.Client.DeltaResponseQueryResult,System.Threading.CancellationToken)">
            <summary>
            Fetches a page of items from server.
            </summary>
            <param name="page">The page to fetch.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The task.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.EntityQueryResult`1">
            <summary>
            The entity query result implementation.
            </summary>
            <typeparam name="T">The entity type.</typeparam>
        </member>
        <member name="F:Trimble.Connect.Client.EntityQueryResult`1.uri">
            <summary>
            The uri to query from.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.EntityQueryResult`1.#ctor(Trimble.Connect.Client.Common.Http.TrimbleConnectHttpClient,Trimble.Connect.Client.TrimbleConnectUser,System.Nullable{System.Int64},System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.EntityQueryResult`1"/> class.
            </summary>
            <param name="client">The TC client.</param>
            <param name="user">The TC user.</param>
            <param name="pageSize">The size of range to request from pod.</param>
            <param name="uri">The uri to query from.</param>
        </member>
        <member name="M:Trimble.Connect.Client.EntityQueryResult`1.#ctor(Trimble.Connect.Client.EntityQueryResult{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.EntityQueryResult`1"/> class.
            </summary>
            <param name="prevPage">The previous page.</param>
        </member>
        <member name="M:Trimble.Connect.Client.EntityQueryResult`1.GetNextPageAsync(System.Threading.CancellationToken)">
            <summary>
            Fetches a next page of results.
            </summary>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The task.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.EntityQueryResult`1.CreateAsync(Trimble.Connect.Client.Common.Http.TrimbleConnectHttpClient,Trimble.Connect.Client.TrimbleConnectUser,System.Nullable{System.Int64},System.Uri,System.Threading.CancellationToken)">
            <summary>
            Fetches a first page of results from server.
            </summary>
            <param name="client">The TC client.</param>
            <param name="user">The TC user.</param>
            <param name="pageSize">The size of range to request from pod.</param>
            <param name="uri">The uri to query from.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The task.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.EntityQueryResult`1.GetPageAsync(Trimble.Connect.Client.EntityQueryResult{`0},System.Threading.CancellationToken)">
            <summary>
            Fetches a page of items from server.
            </summary>
            <param name="page">The page to fetch.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The task.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.FilesController">
            <summary>
            Files manipulator inside the TC project.
            </summary>
            <summary>
            Files manipulator inside the TC project.
            </summary>
            <summary>
            Files manipulator inside the TC project.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.FilesController.SetAlignmentAsync(System.String,Trimble.Connect.Client.Models.Alignment,System.String,System.Threading.CancellationToken)">
            <summary>
            Sets (creates or updates) the alignment for a model file.
            </summary>
            <param name="fileId">The file or file version identifier.</param>
            <param name="alignment">The placement.</param>
            <param name="fileVersionId">The optional version identifier, if not provided latest version will be used.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>A new alignment.</returns>
            <remarks>
            In general, an alignment is associated to a version of a given file and later file version inherits alignment from previous version. 
            For example, suppose we have file versions v1, v2, v3, v4 and v5; and alignment are set for v1 and v3 then v2 inherit alignment from v1 and v4 and v5 inherit from v3.
            </remarks>
        </member>
        <member name="M:Trimble.Connect.Client.FilesController.GetAlignmentAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the alignment for a model file.
            </summary>
            <param name="fileId">The file identifier.</param>
            <param name="fileVersionId">The optional version identifier, if not provided latest version will be queried.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The alignment.</returns>
            <remarks>
            Returns the latest available alignment.
            Alignment is defined as an axis to axis transformation composed with a uniform scaling. 
            In general, an alignment is associated to a version of a given file and later file version inherits alignment from previous version. 
            For example, suppose we have file versions v1, v2, v3, v4 and v5; and alignment are set for v1 and v3 then v2 inherit alignment from v1 and v4 and v5 inherit from v3.
            </remarks>
        </member>
        <member name="M:Trimble.Connect.Client.FilesController.DeleteAlignmentAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Delete the alignment for a model file. All alignments for all versions are deleted.
            </summary>
            <param name="fileId">The file identifier.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The task.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.FilesController.GetAllAlignmentsAsync(System.Threading.CancellationToken)">
            <summary>
            Gets all alignment for model files.
            </summary>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The alignments.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.FilesController.GetSetRequestBody(Trimble.Connect.Client.Models.Alignment)">
            <summary>
            Converts the object template to JSON body to send as an update request.
            </summary>
            <param name="entity">The entity.</param>
            <returns>The JSON body.</returns>
        </member>
        <member name="F:Trimble.Connect.Client.FilesController.FoldersRootPath">
            <summary>
            The folder API root path.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.FilesController.FilesRootPath">
            <summary>
            The file API root path.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.FilesController.#ctor(Trimble.Connect.Client.ProjectClient)">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.FilesController"/> class.
            </summary>
            <param name="projectClient">The project client.</param>
        </member>
        <member name="P:Trimble.Connect.Client.FilesController.ProjectClient">
            <summary>
            Gets the URI used as the base for all service requests.
            </summary>
            <value>
            The base service URI.
            </value>
        </member>
        <member name="M:Trimble.Connect.Client.FilesController.CheckoutAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Checks out a file.
            </summary>
            <param name="fileId">The file identifier.</param>
            <param name="fileVersionId">The optional file versions identifier. If provided is used for concurrency check.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The successfully checked out file.</returns>
            <remarks>
            If not the latest version is given an exception is thrown.
            </remarks>
        </member>
        <member name="M:Trimble.Connect.Client.FilesController.CheckinAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Checks in a file.
            </summary>
            <param name="fileId">The file identifier.</param>
            <param name="fileVersionId">The optional file versions identifier. If provided is used for concurrency check.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The successfully checked in file.</returns>
            <remarks>
            If not the latest version is given an exception is thrown.
            </remarks>
        </member>
        <member name="M:Trimble.Connect.Client.FilesController.DeleteFileAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a file.
            </summary>
            <param name="fileVersionId">The file version identifier.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <remarks>
            Delete will only flag latest version as deleted.
            If not the latest version is given an exception is thrown.
            </remarks>
            <returns>A task.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.FilesController.UpdateFileAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Trimble.Connect.Client.FilesController.UpdateFileAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Trimble.Connect.Client.FilesController.GetFileInfoAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns file information.
            </summary>
            <param name="fileId">The file identifier.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The file information.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.FilesController.GetFileInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Returns file information.
            </summary>
            <param name="fileId">The file identifier.</param>
            <param name="fileVersionId">The file version identifier.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The file information.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.FilesController.GetPartIdentifiersAsync(System.String,System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Returns list of building entity identifiers in stable order which is used together with view bitmasks.
            </summary>
            <param name="fileId">The file identifier.</param>
            <param name="fileVersionId">The optional file version identifier.</param>
            <param name="originalIds">Determines if we want original identifiers from the model file or TCPS internal identifiers.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The file information.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.FilesController.GetFileProcessingStatusAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the format processing status for a file.
            </summary>
            <param name="fileId">The file identifier.</param>
            <param name="fileVersionId">The optional version identifier, if not provided latest version will be queried.</param>
            <param name="format">The optional format parameter.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The processing status as integer between 0 and 100. Negative values indicate processing error.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.FilesController.GetFileVersionsAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Trimble.Connect.Client.FilesController.GetFileVersionsAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Trimble.Connect.Client.FilesController.GetFileVersionsAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Trimble.Connect.Client.FilesController.CreateFolderAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a folder under given parent folder.
            </summary>
            <param name="parentFolderId">The parent folder identifier.</param>
            <param name="name">The folder name.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The information about created folder.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.FilesController.DeleteFolderAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a folder.
            </summary>
            <param name="folderVersionId">The folder version identifier.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>A task.</returns>
            <remarks>
            If not the latest version is given an exception is thrown.
            </remarks>
        </member>
        <member name="M:Trimble.Connect.Client.FilesController.UpdateFolderAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Rename and move a folder.
            </summary>
            <param name="folderId">The folder  identifier.</param>
            <param name="folderVersionId">The folder version identifier. Must be the last folder version.</param>
            <param name="name">The new folder name. If null not renamed.</param>
            <param name="parentId">The new parent folder identifier. If null not moved.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The information about updated folder.</returns>
            <remarks>
            If not the latest version is given an exception is thrown.
            </remarks>
        </member>
        <member name="M:Trimble.Connect.Client.FilesController.GetFolderItemsAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Trimble.Connect.Client.FilesController.GetFolderItemsAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Trimble.Connect.Client.FilesController.GetFolderItemsAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Trimble.Connect.Client.FilesController.GetFolderItemsByPathAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Trimble.Connect.Client.FilesController.GetFolderItemsByPathAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Trimble.Connect.Client.FilesController.GetFolderItemsByPathAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Trimble.Connect.Client.FilesController.GetFolderInfoAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get latest information about the folder.
            </summary>
            <param name="folderId">The folder identifier.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The folder information.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.FilesController.GetFolderInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about the folder version.
            </summary>
            <param name="folderId">The folder identifier.</param>
            <param name="folderVersionId">The optional folder version identifier.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The folder information.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.FilesController.GetFolderVersionsAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Trimble.Connect.Client.FilesController.GetFolderVersionsAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Trimble.Connect.Client.FilesController.GetFolderPermissionsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about folder permissions.
            </summary>
            <param name="folderId">The folder identifier.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>A folder permissions.</returns>
            <remarks>The folder version identifier can be given instead of folder identifier.</remarks>
        </member>
        <member name="M:Trimble.Connect.Client.FilesController.SetFolderPermissionsAsync(System.String,Trimble.Connect.Client.Models.FolderPermissions,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            Sets folder permission for users and groups. It can also be used to reset the default permission.
            </summary>
            <param name="folderId">The folder identifier.</param>
            <param name="permissions">The permissions to set.</param>
            <param name="cascade">If true the <paramref name="permissions"/> are applied on all subfolders recursively. Default is false.</param>
            <param name="folderVersionId">The optional folder version identifier.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>A folder permissions.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.FilesController.UpdateFolderPermissionsAsync(System.String,Trimble.Connect.Client.Models.FolderPermissions,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            Updates existing folder permission for users and groups. It can also be used to reset the default permission.
            </summary>
            <param name="folderId">The folder identifier.</param>
            <param name="permissions">The permissions to set.</param>
            <param name="cascade">If true the <paramref name="permissions"/> are updated on all subfolders recursively. Default is false.</param>
            <param name="folderVersionId">The optional folder version identifier.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>A folder permissions.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.FilesController.RemoveFolderPermissionsAsync(System.String,System.Collections.Generic.IEnumerable{Trimble.Connect.Client.Models.Permission},System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            Removes specified permissions to given user/group.
            </summary>
            <param name="folderId">The folder identifier.</param>
            <param name="permissions">The permissions to remove.</param>
            <param name="cascade">If true the <paramref name="permissions"/> are removed on all subfolders recursively. Default is false.</param>
            <param name="folderVersionId">The optional folder version identifier.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>A task.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.FilesController.UploadAsync(System.String,System.IO.Stream,System.String,System.String,System.Action{System.Net.Http.Handlers.HttpProgressEventArgs},System.Threading.CancellationToken)">
            <summary>
            Uploads the file.
            </summary>
            <param name="folderId">The folder identifier to upload file to.</param>
            <param name="stream">The stream. The stream is closed automatically when request is completed.</param>
            <param name="name">Name of the file.</param>
            <param name="contentType">The file content type (MIME). If null 'application/octet-stream' is used.</param>
            <param name="progress">The progress callback.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The information about the new file version.</returns>
            <remarks>Uses 'application/octet-stream' content type.</remarks>
            <exception cref="T:System.ArgumentNullException">One of the parameters is null.</exception>
        </member>
        <member name="M:Trimble.Connect.Client.FilesController.UploadAsync(System.String,System.IO.Stream,System.String,System.String,System.Boolean,System.String,System.Action{System.Net.Http.Handlers.HttpProgressEventArgs},System.Threading.CancellationToken)">
            <summary>
            Uploads the file.
            </summary>
            <param name="folderId">The folder identifier to upload file to.</param>
            <param name="stream">The stream. The stream is closed automatically when request is completed.</param>
            <param name="name">Name of the file.</param>
            <param name="contentType">The file content type (MIME). If null 'application/octet-stream' is used.</param>
            <param name="fileSet">Optional file set param used to initiate multifile upload.</param>
            <param name="pathTemplate">Optional path template string used in the context of potree file structure.</param>
            <param name="progress">The progress callback.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The information about the new file version.</returns>
            <remarks>Uses 'application/octet-stream' content type.</remarks>
            <exception cref="T:System.ArgumentNullException">One of the parameters is null.</exception>
        </member>
        <member name="M:Trimble.Connect.Client.FilesController.UploadAsync(System.String,Trimble.Connect.Client.FileUploadRequest,System.Threading.CancellationToken)">
            <summary>
            Uploads the file.
            </summary>
            <param name="folderId">The folder identifier to upload file to.</param>
            <param name="request">The upload request descriptor.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The information about the new file version.</returns>
            <exception cref="T:System.ArgumentNullException">One of the parameters is null.</exception>
        </member>
        <member name="M:Trimble.Connect.Client.FilesController.UploadAsync(System.String,Trimble.Connect.Client.FileUploadRequest,System.TimeSpan,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Uploads the file.
            </summary>
            <param name="folderId">The folder identifier to upload file to.</param>
            <param name="request">The upload request descriptor.</param>
            <param name="timeout">
            The time span to wait before cancelling the read activity from network stream.
            The timeout is monitored not for the whole operation but for the activity in the stream.
            If there is no activity for the specified period of time the operation is cancelled.
            </param>
            <param name="bufferSize">The size of the buffer. Value must be greater than zero. The default size is 80KB.</param> 
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The information about the new file version.</returns>
            <exception cref="T:System.ArgumentNullException">One of the parameters is null.</exception>
        </member>
        <member name="M:Trimble.Connect.Client.FilesController.UploadAsync(System.String,System.Collections.Generic.IEnumerable{Trimble.Connect.Client.FileUploadRequest},System.Threading.CancellationToken)">
            <summary>
            Uploads the collection of files.
            </summary>
            <param name="folderId">The folder identifier to upload files to.</param>
            <param name="requests">The collection of upload requests.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The information about the new file versions created.</returns>
            <exception cref="T:System.ArgumentNullException">One of the parameters is null.</exception>
        </member>
        <member name="M:Trimble.Connect.Client.FilesController.UploadAsync(System.String,System.Collections.Generic.IEnumerable{Trimble.Connect.Client.FileUploadRequest},System.TimeSpan,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Uploads the collection of files.
            </summary>
            <param name="folderId">The folder identifier to upload files to.</param>
            <param name="requests">The collection of upload requests.</param>
            <param name="timeout">
            The time span to wait before cancelling the read activity from network stream.
            The timeout is monitored not for the whole operation but for the activity in the stream.
            If there is no activity for the specified period of time the operation is cancelled.
            </param>
            <param name="bufferSize">The size of the buffer. Value must be greater than zero. The default size is 80KB.</param> 
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The information about the new file versions created.</returns>
            <exception cref="T:System.ArgumentNullException">One of the parameters is null.</exception>
        </member>
        <member name="M:Trimble.Connect.Client.FilesController.UploadAsync(Trimble.Connect.Client.Models.Attachment,System.Collections.Generic.IEnumerable{Trimble.Connect.Client.FileUploadRequest},System.TimeSpan,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Uploads the collection of files.
            </summary>
            <param name="parent">
            The parent entity descriptor. Can be e.g. <see cref="F:Trimble.Connect.Client.Models.EntityType.Folder"/> or <see cref="F:Trimble.Connect.Client.Models.EntityType.Todo"/>.
            If entity type is not specified a folder is assumed.
            </param>
            <param name="requests">The collection of upload requests.</param>
            <param name="timeout">
            The time span to wait before cancelling the read activity from network stream.
            The timeout is monitored not for the whole operation but for the activity in the stream.
            If there is no activity for the specified period of time the operation is cancelled.
            </param>
            <param name="bufferSize">The size of the buffer. Value must be greater than zero. The default size is 80KB.</param> 
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The information about the new file versions created.</returns>
            <exception cref="T:System.ArgumentNullException">One of the parameters is null.</exception>
        </member>
        <member name="M:Trimble.Connect.Client.FilesController.UploadAsync(Trimble.Connect.Client.Models.Attachment,System.Collections.Generic.IEnumerable{Trimble.Connect.Client.FileUploadRequest},System.Collections.Generic.IDictionary{System.String,System.String},System.TimeSpan,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Uploads the collection of files.
            </summary>
            <param name="parent">
            The parent entity descriptor. Can be e.g. <see cref="F:Trimble.Connect.Client.Models.EntityType.Folder"/> or <see cref="F:Trimble.Connect.Client.Models.EntityType.Todo"/>.
            If entity type is not specified a folder is assumed.
            </param>
            <param name="requests">The collection of upload requests.</param>
            <param name="parameters">Additional parameters to add ex: Flag to indicate the server to fetch a non expiring thumbnail url.</param>.
            <param name="timeout">
            The time span to wait before cancelling the read activity from network stream.
            The timeout is monitored not for the whole operation but for the activity in the stream.
            If there is no activity for the specified period of time the operation is cancelled.
            </param>
            <param name="bufferSize">The size of the buffer. Value must be greater than zero. The default size is 80KB.</param> 
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The information about the new file versions created.</returns>
            <exception cref="T:System.ArgumentNullException">One of the parameters is null.</exception>
        </member>
        <member name="M:Trimble.Connect.Client.FilesController.UploadAsync(Trimble.Connect.Client.Models.Attachment,Trimble.Connect.Client.FileUploadRequest,System.Collections.Generic.IDictionary{System.String,System.String},System.TimeSpan,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Uploads the file.
            </summary>
            <param name="parent">
            The parent entity descriptor. Can be e.g. <see cref="F:Trimble.Connect.Client.Models.EntityType.Folder"/> or <see cref="F:Trimble.Connect.Client.Models.EntityType.Todo"/>.
            If entity type is not specified a folder is assumed.
            </param>
            <param name="request">Upload request.</param>
            <param name="parameters">Additional parameters to add ex: Flag to indicate the server to fetch a non expiring thumbnail url.</param>.
            <param name="timeout">
            The time span to wait before cancelling the read activity from network stream.
            The timeout is monitored not for the whole operation but for the activity in the stream.
            If there is no activity for the specified period of time the operation is cancelled.
            </param>
            <param name="bufferSize">The size of the buffer. Value must be greater than zero. The default size is 80KB.</param> 
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The information about the new file versions created.</returns>
            <exception cref="T:System.ArgumentNullException">One of the parameters is null.</exception>
        </member>
        <member name="M:Trimble.Connect.Client.FilesController.UploadRepresentationAsync(Trimble.Connect.Client.FileUploadRequest,System.Nullable{System.TimeSpan},System.Int32,System.Threading.CancellationToken)">
            <summary>
            Uploads a representation of the model file.
            </summary>
            <param name="request">The upload request descriptor.</param>
            <param name="timeout">
            The time span to wait before cancelling the read activity from network stream.
            The timeout is monitored not for the whole operation but for the activity in the stream.
            If there is no activity for the specified period of time the operation is cancelled.
            If omitted the default timeout of 100 seconds will be used.
            </param>
            <param name="bufferSize">The size of the buffer. Value must be greater than zero. The default size is 80KB.</param> 
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The information about the new file version.</returns>
            <exception cref="T:System.ArgumentNullException">One of the parameters is null.</exception>
        </member>
        <member name="M:Trimble.Connect.Client.FilesController.DownloadAsync(System.String,System.String,System.String,System.Action{System.Net.Http.Handlers.HttpProgressEventArgs},System.Threading.CancellationToken)">
            <summary>
            Downloads the file.
            </summary>
            <param name="fileId">The file identifier to download.</param>
            <param name="fileVersionId">The file version identifier to download.</param>
            <param name="format">The file format to download.</param>
            <param name="progress">The progress callback.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <exception cref="T:System.ArgumentNullException">The fileVersionId is null.</exception>
            <returns>The network stream to read the content from. Caller is responsible on closing the stream.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.FilesController.DownloadAsync(System.String,System.String,System.String,System.String,System.Action{System.Net.Http.Handlers.HttpProgressEventArgs},System.Threading.CancellationToken)">
            <summary>
            Downloads the file.
            </summary>
            <param name="fileId">The file identifier to download.</param>
            <param name="accessToken">The access token to be used.
            <remarks>To be specified for PDF download</remarks>
            </param>
            <param name="fileVersionId">The file version identifier to download.</param>
            <param name="format">The file format to download.</param>
            <param name="progress">The progress callback.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <exception cref="T:System.ArgumentNullException">The fileVersionId is null.</exception>
            <returns>The network stream to read the content from. Caller is responsible on closing the stream.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.FilesController.DownloadPartAsync(System.String,System.String,System.String,System.Action{System.Net.Http.Handlers.HttpProgressEventArgs},System.Threading.CancellationToken)">
            <summary>
            Downloads the file.
            </summary>
            <param name="fileId">The file identifier to download.</param>
            <param name="pathTemplate">Path template string used in the context of potree file structure.</param>
            <param name="fileVersionId">The file version identifier to download.</param>
            <param name="progress">The progress callback.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <exception cref="T:System.ArgumentNullException">The fileVersionId is null.</exception>
            <returns>The network stream to read the content from. Caller is responsible on closing the stream.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.FilesController.DownloadAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.String,System.String,System.Action{System.Net.Http.Handlers.HttpProgressEventArgs},System.Threading.CancellationToken)">
            <summary>
            Downloads the file.
            </summary>
            <param name="fileId">The file identifier to download.</param>
            <param name="from">The position at which to start sending data.</param>
            <param name="to">The position at which to stop sending data.</param>
            <param name="fileVersionId">The file version identifier to download.</param>
            <param name="format">The file format to download.</param>
            <param name="progress">The progress callback.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <exception cref="T:System.ArgumentNullException">The fileVersionId is null.</exception>
            <returns>The network stream to read the content from. Caller is responsible on closing the stream.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.FilesController.DownloadAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.String,System.Action{System.Net.Http.Handlers.HttpProgressEventArgs},System.Threading.CancellationToken)">
            <summary>
            Downloads the file by passing the download url.
            </summary>
            <param name="downloadUrl">The download url.</param>
            <param name="from">The position at which to start sending data.</param>
            <param name="to">The position at which to stop sending data.</param>
            <param name="format">The file format to download.</param>
            <param name="progress">The progress callback.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <exception cref="T:System.ArgumentNullException">The fileVersionId is null.</exception>
            <returns>The network stream to read the content from. Caller is responsible on closing the stream.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.FilesController.DownloadAsync(System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.String,System.String,System.Action{System.Net.Http.Handlers.HttpProgressEventArgs},System.Threading.CancellationToken)">
            <summary>
            Downloads the file.
            </summary>
            <param name="fileId">The file identifier to download.</param>
            <param name="accessToken">The access token to be used.
            <remarks>To be specified for PDF download</remarks>
            </param>
            <param name="from">The position at which to start sending data.</param>
            <param name="to">The position at which to stop sending data.</param>
            <param name="fileVersionId">The file version identifier to download.</param>
            <param name="format">The file format to download.</param>
            <param name="progress">The progress callback.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <exception cref="T:System.ArgumentNullException">The fileVersionId is null.</exception>
            <returns>The network stream to read the content from. Caller is responsible on closing the stream.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.FilesController.DownloadAsync(System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.String,System.String,System.String,System.Action{System.Net.Http.Handlers.HttpProgressEventArgs},System.Threading.CancellationToken)">
            <summary>
            Downloads the file.
            </summary>
            <param name="fileId">The file identifier to download.</param>
            <param name="accessToken">The access token to be used.
            <remarks>To be specified for PDF download</remarks>
            </param>
            <param name="from">The position at which to start sending data.</param>
            <param name="to">The position at which to stop sending data.</param>
            <param name="fileVersionId">The file version identifier to download.</param>
            <param name="format">The file format to download.</param>
            <param name="pathTemplate">Optional path template string used in the context of potree file structure.</param>
            <param name="progress">The progress callback.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <exception cref="T:System.ArgumentNullException">The fileVersionId is null.</exception>
            <returns>The network stream to read the content from. Caller is responsible on closing the stream.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.FilesController.GetDownloadUrl(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            To get the signed download url.
            </summary>
            <param name="fileId">The file identifier.</param>
            <param name="versionId">The file version identifier.</param>
            <param name="format">The file format to download.</param>
            <param name="accessToken">The access token to be used.
            <remarks>To be specified for PDF download</remarks>
            </param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The download url string.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.FilesController.GetDownloadUrl(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            To get the signed download url.
            </summary>
            <param name="fileId">The file identifier.</param>
            <param name="versionId">The file version identifier.</param>
            <param name="format">The file format to download.</param>
            <param name="accessToken">The access token to be used.
            <remarks>To be specified for PDF download</remarks>
            </param>
            <param name="pathTemplate">Optional path template string used in the context of potree file structure.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The download url string.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.FilesController.InitiateFileUpload(System.String,System.String,Trimble.Connect.Client.FileUploadRequest,System.Threading.CancellationToken)">
            <summary>
            To get the signed upload url.
            </summary>
            <param name="parentId">The parent identifier.</param>
            <param name="parentType">The parent type.</param>
            <param name="request">The file upload request <see cref="T:Trimble.Connect.Client.FileUploadRequest"/> </param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The file upload initiation response having the upload Id.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.FilesController.CommitFileUpload(System.String,Trimble.Connect.Client.FileUploadRequest,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            To confirm the upload completion.
            </summary>
            <param name="uploadId">The Upload Id.</param>
            <param name="request">The file upload request.</param>
            <param name="parameters">Additional parameters to add ex: Flag to indicate the server to fetch a non expiring thumbnail url.</param>.
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The file/folder information.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.FilesController.UpdateFolderInternalAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a folder.
            </summary>
            <param name="folderId">The folder identifier.</param>
            <param name="folderVersionId">The optional folder version identifier.</param>
            <param name="body">The update request body.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <remarks>
            If not the latest version is given an exception is thrown.
            </remarks>
            <returns>The file information.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.FilesController.UpdateFileInternalAsync(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Update a file.
            </summary>
            <param name="fileId">The file identifier.</param>
            <param name="fileVersionId">The optional file version identifier.</param>
            <param name="body">The update request body.</param>
            <param name="parameters">
            An optional dictionary of user-defined parameters and values to include in the request URI query string.
            </param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <remarks>
            If not the latest version is given an exception is thrown.
            </remarks>
            <returns>The file information.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.FilesController.UpdateFolderItemInternalAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a folder item.
            </summary>
            <param name="path">The request path.</param>
            <param name="body">The request body.</param>
            <param name="resourceVersionId">The optional identifier of latest seen version.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <remarks>
            If not the latest version is given an exception is thrown.
            </remarks>
            <returns>The file information.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.FilesController.DoActionAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Executes an action on a file.
            </summary>
            <param name="fileId">The file identifier.</param>
            <param name="action">The action.</param>
            <param name="fileVersionId">The optional file versions identifier. If provided is used for concurrency check.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The successfully checked in file.</returns>
            <remarks>
            If not the latest version is given an exception is thrown.
            </remarks>
        </member>
        <member name="M:Trimble.Connect.Client.FilesController.UpdateFolderPermissionsAsync(System.String,Trimble.Connect.Client.Models.FolderPermissions,System.Net.Http.HttpMethod,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            Updates existing folder permission for users and groups. It can also be used to reset the default permission.
            </summary>
            <param name="folderId">The folder identifier.</param>
            <param name="permissions">The permissions to set.</param>
            <param name="verb">The http verb to use.</param>
            <param name="cascade">If true the <paramref name="permissions"/> are updated on all subfolders recursively. Default is false.</param>
            <param name="folderVersionId">The optional folder version identifier.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>A folder permissions.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.FilesController.InitiateMultipartUploadAsync(System.String,System.String,System.Int32,Trimble.Connect.Client.FileUploadRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates multipart file upload.
            </summary>
            <param name="parentId">The Parent identifier.</param>
            <param name="parentType">The parent type.</param>
            <param name="partsCount">The number of parts.</param>
            <param name="request">The file name.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The identifier of the initiated multipart upload request.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.FilesController.UploadPartAsync(System.String,System.IO.Stream,System.TimeSpan,System.Action{System.Net.Http.Handlers.HttpProgressEventArgs},System.Threading.CancellationToken)">
            <summary>
            Uploads a file part.
            </summary>
            <param name="uri">The part URI.</param>
            <param name="stream">The stream. The stream is closed automatically when request is completed.</param>
            <param name="timeout">
            The time span to wait before cancelling the activity on network stream.
            The timeout is monitored not for the whole operation but for the activity in the stream.
            If there is no activity for the specified period of time the operation is cancelled.
            </param>
            <param name="progress">The optional progress callback.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The task.</returns>
            <remarks>Uses 'application/octet-stream' content type.</remarks>
        </member>
        <member name="M:Trimble.Connect.Client.FilesController.CommitMultiPartFileUpload(System.String,System.String,System.Collections.Generic.List{Trimble.Connect.Client.Models.FilePartResponseInfo},System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken,System.String)">
            <summary>
            To confirm the upload completion.
            </summary>
            <param name="uploadId">The identifier of the multipart upload request.</param>
            <param name="hash">The file hash.</param>
            <param name="fileParts">The list of uploaded parts.</param>
            <param name="parameters">Additional parameters to add ex: Flag to indicate the server to fetch a non expiring thumbnail url.</param>.
            <param name="cancellationToken">The optional cancellation token.</param>
            <param name="uploadAgainst">The if match version.</param>
            <returns>The file/folder information.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.FilesControllerExtensions">
            <summary>
            The extensions for interface to manipulate files.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.FilesControllerExtensions.CheckoutAsync(Trimble.Connect.Client.IFilesController,Trimble.Connect.Client.Models.FolderItem,System.Threading.CancellationToken)">
            <summary>
            Checks out a file.
            </summary>
            <param name="client">The files manipulator.</param>
            <param name="file">The file.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The checked out file.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.FilesControllerExtensions.CheckinAsync(Trimble.Connect.Client.IFilesController,Trimble.Connect.Client.Models.FolderItem,System.Threading.CancellationToken)">
            <summary>
            Checks in a file.
            </summary>
            <param name="client">The files manipulator.</param>
            <param name="file">The file.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The checked in file.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.FilesControllerExtensions.RenameFolderAsync(Trimble.Connect.Client.IFilesController,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Rename a folder.
            </summary>
            <param name="client">The files manipulator.</param>
            <param name="folderId">The folder identifier.</param>
            <param name="folderVersionId">The folder version identifier. Must be the last folder version.</param>
            <param name="name">The new folder name.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The information about created folder.</returns>
            <remarks>
            If not the latest version is given an exception is thrown.
            </remarks>
        </member>
        <member name="M:Trimble.Connect.Client.FilesControllerExtensions.MoveFolderAsync(Trimble.Connect.Client.IFilesController,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Move a folder.
            </summary>
            <param name="client">The files manipulator.</param>
            <param name="folderId">The folder identifier.</param>
            <param name="folderVersionId">The folder version identifier. Must be the last folder version.</param>
            <param name="parentId">The new parent folder identifier.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The information about the moved folder.</returns>
            <remarks>
            If not the latest version is given an exception is thrown.
            </remarks>
        </member>
        <member name="M:Trimble.Connect.Client.FilesControllerExtensions.RenameFileAsync(Trimble.Connect.Client.IFilesController,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Rename a file.
            </summary>
            <param name="client">The files manipulator.</param>
            <param name="fileId">The file identifier.</param>
            <param name="fileVersionId">The optional file versions identifier. If provided is used for concurrency check.</param>
            <param name="name">The new file name.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <remarks>
            If not the latest version is given an exception is thrown.
            </remarks>
            <returns>The file information.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.FilesControllerExtensions.MoveFileAsync(Trimble.Connect.Client.IFilesController,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Move a file.
            </summary>
            <param name="client">The files manipulator.</param>
            <param name="fileId">The file  identifier.</param>
            <param name="fileVersionId">The optional file versions identifier. If provided is used for concurrency check.</param>
            <param name="parentId">The new parent folder identifier.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The file information.</returns>
            <remarks>
            If not the latest version is given an exception is thrown.
            </remarks>
        </member>
        <member name="M:Trimble.Connect.Client.FilesControllerExtensions.UpdateAsync(Trimble.Connect.Client.IFilesController,Trimble.Connect.Client.Models.FolderItem,System.Threading.CancellationToken)">
            <summary>
            Rename or move a file or folder.
            </summary>
            <param name="client">The files manipulator.</param>
            <param name="item">The file or folder to rename. The <see cref="P:Trimble.Connect.Client.Models.FolderItem.Name"/> property is used as a new name.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <remarks>
            If not the latest version is given an exception is thrown.
            </remarks>
            <returns>The file information.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.FilesControllerExtensions.RenameAsync(Trimble.Connect.Client.IFilesController,Trimble.Connect.Client.Models.FolderItem,System.Threading.CancellationToken)">
            <summary>
            Rename a file or folder.
            </summary>
            <param name="client">The files manipulator.</param>
            <param name="item">The file or folder to rename. The <see cref="P:Trimble.Connect.Client.Models.FolderItem.Name"/> property is used as a new name.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <remarks>
            If not the latest version is given an exception is thrown.
            </remarks>
            <returns>The file information.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.FilesControllerExtensions.GetLatestInfoAsync(Trimble.Connect.Client.IFilesController,Trimble.Connect.Client.Models.FolderItem,System.Threading.CancellationToken)">
            <summary>
            Get information about the latest version of the file or folder.
            </summary>
            <param name="client">The files manipulator.</param>
            <param name="item">The file or folder to delete.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <remarks>
            Delete will only flag latest version as deleted.
            If not the latest version is given an exception is thrown.
            </remarks>
            <returns>An item information.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.FilesControllerExtensions.GetVersionInfoAsync(Trimble.Connect.Client.IFilesController,Trimble.Connect.Client.Models.FolderItem,System.Threading.CancellationToken)">
            <summary>
            Get information about the specified version of the file or folder.
            </summary>
            <param name="client">The files manipulator.</param>
            <param name="item">The file or folder to delete.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <remarks>
            Delete will only flag latest version as deleted.
            If not the latest version is given an exception is thrown.
            </remarks>
            <returns>An item information.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.FilesControllerExtensions.DeleteAsync(Trimble.Connect.Client.IFilesController,Trimble.Connect.Client.Models.FolderItem,System.Threading.CancellationToken)">
            <summary>
            Deletes a file or folder.
            </summary>
            <param name="client">The files manipulator.</param>
            <param name="item">The file or folder to delete.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <remarks>
            Delete will only flag latest version as deleted.
            If not the latest version is given an exception is thrown.
            </remarks>
            <returns>A task.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.FilesControllerExtensions.UploadFromFileAsync(Trimble.Connect.Client.IFilesController,System.String,System.String,System.String,System.Action{System.Net.Http.Handlers.HttpProgressEventArgs},System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload a local file.
            </summary>
            <param name="controller">The files controller.</param>
            <param name="folderId">The folder identifier to upload file to.</param>
            <param name="path">The file path to upload.</param>
            <param name="name">
            The name to use for the file in the cloud storage. 
            If null the file name (<see cref="M:System.IO.Path.GetFileName(System.String)"/>) part of the <paramref name="path"/> is used as a name for the file in the cloud storage.
            </param>
            <param name="progress">The progress callback.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The information about the new file version created.</returns>
            <remarks>
            If file with the same name exists already a new version for the file is created. Otherwise a new file is created.
            Uses 'application/octet-stream' content type.
            </remarks>
        </member>
        <member name="M:Trimble.Connect.Client.FilesControllerExtensions.UploadFromFileAsync(Trimble.Connect.Client.IFilesController,System.String,System.String,System.String,System.String,System.Action{System.Net.Http.Handlers.HttpProgressEventArgs},System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload a local file.
            </summary>
            <param name="controller">The files controller.</param>
            <param name="folderId">The folder identifier to upload file to.</param>
            <param name="path">The file path to upload.</param>
            <param name="name">
            The name to use for the file in the cloud storage. 
            If null the file name (<see cref="M:System.IO.Path.GetFileName(System.String)"/>) part of the <paramref name="path"/> is used as a name for the file in the cloud storage.
            </param>
            <param name="contentType">The file content type (MIME). If null 'application/octet-stream' is used.</param>
            <param name="progress">The progress callback.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The information about the new file version created.</returns>
            <remarks>
            If file with the same name exists already a new version for the file is created. Otherwise a new file is created.
            Uses 'application/octet-stream' content type.
            </remarks>
        </member>
        <member name="M:Trimble.Connect.Client.FilesControllerExtensions.UploadFromFileAsync(Trimble.Connect.Client.IFilesController,System.String,System.String,System.String,System.String,System.Boolean,System.String,System.Action{System.Net.Http.Handlers.HttpProgressEventArgs},System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload a local file.
            </summary>
            <param name="controller">The files controller.</param>
            <param name="folderId">The folder identifier to upload file to.</param>
            <param name="path">The file path to upload.</param>
            <param name="name">
            The name to use for the file in the cloud storage. 
            If null the file name (<see cref="M:System.IO.Path.GetFileName(System.String)"/>) part of the <paramref name="path"/> is used as a name for the file in the cloud storage.
            </param>
            <param name="contentType">The file content type (MIME). If null 'application/octet-stream' is used.</param>
            <param name="fileSet">Optional file set param used to initiate multifile upload.</param>
            <param name="pathTemplate">Optional path template string used in the context of potree file structure.</param>
            <param name="progress">The progress callback.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The information about the new file version created.</returns>
            <remarks>
            If file with the same name exists already a new version for the file is created. Otherwise a new file is created.
            Uses 'application/octet-stream' content type.
            </remarks>
        </member>
        <member name="M:Trimble.Connect.Client.FilesControllerExtensions.UploadFromFileAsync(Trimble.Connect.Client.IFilesController,Trimble.Connect.Client.Models.Attachment,System.String,System.String,System.Action{System.Net.Http.Handlers.HttpProgressEventArgs},System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload a local file.
            </summary>
            <param name="controller">The files controller.</param>
            <param name="parent">
            The parent entity descriptor. Can be e.g. <see cref="F:Trimble.Connect.Client.Models.EntityType.Folder"/> or <see cref="F:Trimble.Connect.Client.Models.EntityType.Todo"/>.
            If entity type is not specified a folder is assumed.
            </param>
            <param name="path">The file path to upload.</param>
            <param name="name">
            The name to use for the file in the cloud storage. 
            If null the file name (<see cref="M:System.IO.Path.GetFileName(System.String)"/>) part of the <paramref name="path"/> is used as a name for the file in the cloud storage.
            </param>
            <param name="progress">The progress callback.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The information about the new file version created.</returns>
            <remarks>
            If file with the same name exists already a new version for the file is created. Otherwise a new file is created.
            Uses 'application/octet-stream' content type.
            </remarks>
        </member>
        <member name="M:Trimble.Connect.Client.FilesControllerExtensions.UploadFromFileAsync(Trimble.Connect.Client.IFilesController,Trimble.Connect.Client.Models.Attachment,System.String,System.String,System.String,System.Action{System.Net.Http.Handlers.HttpProgressEventArgs},System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload a local file.
            </summary>
            <param name="controller">The files controller.</param>
            <param name="parent">
            The parent entity descriptor. Can be e.g. <see cref="F:Trimble.Connect.Client.Models.EntityType.Folder"/> or <see cref="F:Trimble.Connect.Client.Models.EntityType.Todo"/>.
            If entity type is not specified a folder is assumed.
            </param>
            <param name="path">The file path to upload.</param>
            <param name="name">
            The name to use for the file in the cloud storage. 
            If null the file name (<see cref="M:System.IO.Path.GetFileName(System.String)"/>) part of the <paramref name="path"/> is used as a name for the file in the cloud storage.
            </param>
            <param name="contentType">The file content type (MIME). If null 'application/octet-stream' is used.</param>
            <param name="progress">The progress callback.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The information about the new file version created.</returns>
            <remarks>
            If file with the same name exists already a new version for the file is created. Otherwise a new file is created.
            Uses 'application/octet-stream' content type.
            </remarks>
        </member>
        <member name="M:Trimble.Connect.Client.FilesControllerExtensions.UploadFromFileAsync(Trimble.Connect.Client.IFilesController,Trimble.Connect.Client.Models.Attachment,System.String,System.String,System.String,System.Boolean,System.String,System.Action{System.Net.Http.Handlers.HttpProgressEventArgs},System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload a local file.
            </summary>
            <param name="controller">The files controller.</param>
            <param name="parent">
            The parent entity descriptor. Can be e.g. <see cref="F:Trimble.Connect.Client.Models.EntityType.Folder"/> or <see cref="F:Trimble.Connect.Client.Models.EntityType.Todo"/>.
            If entity type is not specified a folder is assumed.
            </param>
            <param name="path">The file path to upload.</param>
            <param name="name">
            The name to use for the file in the cloud storage. 
            If null the file name (<see cref="M:System.IO.Path.GetFileName(System.String)"/>) part of the <paramref name="path"/> is used as a name for the file in the cloud storage.
            </param>
            <param name="contentType">The file content type (MIME). If null 'application/octet-stream' is used.</param>
            <param name="fileSet">Optional file set param used to initiate multifile upload.</param>
            <param name="pathTemplate">Optional path template string used in the context of potree file structure.</param>
            <param name="progress">The progress callback.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The information about the new file version created.</returns>
            <remarks>
            If file with the same name exists already a new version for the file is created. Otherwise a new file is created.
            Uses 'application/octet-stream' content type.
            </remarks>
        </member>
        <member name="M:Trimble.Connect.Client.FilesControllerExtensions.UploadAsync(Trimble.Connect.Client.IFilesController,System.String,System.IO.Stream,System.String,System.Action{System.Net.Http.Handlers.HttpProgressEventArgs},System.Threading.CancellationToken)">
            <summary>
            Uploads the file.
            </summary>
            <param name="controller">The files controller.</param>
            <param name="folderId">The folder identifier to upload file to.</param>
            <param name="stream">The stream. The stream is closed automatically when request is completed.</param>
            <param name="name">Name of the file.</param>
            <param name="progress">The progress callback.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The information about the new file version.</returns>
            <remarks>Uses 'application/octet-stream' content type.</remarks>
            <exception cref="T:System.ArgumentNullException">One of the parameters is null.</exception>
        </member>
        <member name="M:Trimble.Connect.Client.FilesControllerExtensions.UploadAsync(Trimble.Connect.Client.IFilesController,Trimble.Connect.Client.Models.Attachment,System.IO.Stream,System.String,System.Action{System.Net.Http.Handlers.HttpProgressEventArgs},System.Threading.CancellationToken)">
            <summary>
            Uploads the file.
            </summary>
            <param name="controller">The files controller.</param>
            <param name="parent">
            The parent entity descriptor. Can be e.g. <see cref="F:Trimble.Connect.Client.Models.EntityType.Folder"/> or <see cref="F:Trimble.Connect.Client.Models.EntityType.Todo"/>.
            If entity type is not specified a folder is assumed.
            </param>
            <param name="stream">The stream. The stream is closed automatically when request is completed.</param>
            <param name="name">Name of the file.</param>
            <param name="progress">The progress callback.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The information about the new file version.</returns>
            <remarks>Uses 'application/octet-stream' content type.</remarks>
            <exception cref="T:System.ArgumentNullException">One of the parameters is null.</exception>
        </member>
        <member name="M:Trimble.Connect.Client.FilesControllerExtensions.UploadAsync(Trimble.Connect.Client.IFilesController,Trimble.Connect.Client.Models.Attachment,System.IO.Stream,System.String,System.Boolean,System.String,System.Action{System.Net.Http.Handlers.HttpProgressEventArgs},System.Threading.CancellationToken)">
            <summary>
            Uploads the file.
            </summary>
            <param name="controller">The files controller.</param>
            <param name="parent">
            The parent entity descriptor. Can be e.g. <see cref="F:Trimble.Connect.Client.Models.EntityType.Folder"/> or <see cref="F:Trimble.Connect.Client.Models.EntityType.Todo"/>.
            If entity type is not specified a folder is assumed.
            </param>
            <param name="stream">The stream. The stream is closed automatically when request is completed.</param>
            <param name="name">Name of the file.</param>
            <param name="fileSet">Optional file set param used to initiate multifile upload.</param>
            <param name="pathTemplate">Optional path template string used in the context of potree file structure.</param>
            <param name="progress">The progress callback.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The information about the new file version.</returns>
            <remarks>Uses 'application/octet-stream' content type.</remarks>
            <exception cref="T:System.ArgumentNullException">One of the parameters is null.</exception>
        </member>
        <member name="M:Trimble.Connect.Client.FilesControllerExtensions.UploadAsync(Trimble.Connect.Client.IFilesController,Trimble.Connect.Client.Models.Entity,System.IO.Stream,System.String,System.Action{System.Net.Http.Handlers.HttpProgressEventArgs},System.Threading.CancellationToken)">
            <summary>
            Uploads the file.
            </summary>
            <param name="controller">The files controller.</param>
            <param name="parent">
            The parent entity descriptor. Can be e.g. <see cref="F:Trimble.Connect.Client.Models.EntityType.Folder"/> or <see cref="F:Trimble.Connect.Client.Models.EntityType.Todo"/>.
            If entity type is not specified a folder is assumed.
            </param>
            <param name="stream">The stream. The stream is closed automatically when request is completed.</param>
            <param name="name">Name of the file.</param>
            <param name="progress">The progress callback.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The information about the new file version.</returns>
            <remarks>Uses 'application/octet-stream' content type.</remarks>
            <exception cref="T:System.ArgumentNullException">One of the parameters is null.</exception>
        </member>
        <member name="M:Trimble.Connect.Client.FilesControllerExtensions.UploadAsync(Trimble.Connect.Client.IFilesController,Trimble.Connect.Client.Models.Entity,System.Collections.Generic.IEnumerable{Trimble.Connect.Client.FileUploadRequest},System.TimeSpan,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Uploads the file.
            </summary>
            <param name="controller">The files controller.</param>
            <param name="parent">
            The parent entity descriptor. Can be e.g. <see cref="F:Trimble.Connect.Client.Models.EntityType.Folder"/> or <see cref="F:Trimble.Connect.Client.Models.EntityType.Todo"/>.
            If entity type is not specified a folder is assumed.
            </param>
            <param name="requests">The collection of upload requests.</param>
            <param name="timeout">
            The time span to wait before cancelling the read activity from network stream.
            The timeout is monitored not for the whole operation but for the activity in the stream.
            If there is no activity for the specified period of time the operation is cancelled.
            </param>
            <param name="bufferSize">The size of the buffer. Value must be greater than zero. The default size is 80KB.</param> 
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The information about the new file version.</returns>
            <remarks>Uses 'application/octet-stream' content type.</remarks>
            <exception cref="T:System.ArgumentNullException">One of the parameters is null.</exception>
        </member>
        <member name="M:Trimble.Connect.Client.FilesControllerExtensions.UploadAsync(Trimble.Connect.Client.IFilesController,Trimble.Connect.Client.Models.Attachment,Trimble.Connect.Client.FileUploadRequest,System.TimeSpan,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Uploads the file.
            </summary>
            <param name="controller">The files controller.</param>
            <param name="parent">
            The parent entity descriptor. Can be e.g. <see cref="F:Trimble.Connect.Client.Models.EntityType.Folder"/> or <see cref="F:Trimble.Connect.Client.Models.EntityType.Todo"/>.
            If entity type is not specified a folder is assumed.
            </param>
            <param name="request">The upload request descriptor.</param>
            <param name="timeout">
            The time span to wait before cancelling the read activity from network stream.
            The timeout is monitored not for the whole operation but for the activity in the stream.
            If there is no activity for the specified period of time the operation is cancelled.
            </param>
            <param name="bufferSize">The size of the buffer. Value must be greater than zero. The default size is 80KB.</param> 
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The information about the new file version.</returns>
            <remarks>Uses 'application/octet-stream' content type.</remarks>
            <exception cref="T:System.ArgumentNullException">One of the parameters is null.</exception>
        </member>
        <member name="M:Trimble.Connect.Client.FilesControllerExtensions.UploadAsync(Trimble.Connect.Client.IFilesController,Trimble.Connect.Client.Models.Entity,Trimble.Connect.Client.FileUploadRequest,System.TimeSpan,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Uploads the file.
            </summary>
            <param name="controller">The files controller.</param>
            <param name="parent">
            The parent entity. Can be e.g. <see cref="F:Trimble.Connect.Client.Models.EntityType.Folder"/> or <see cref="F:Trimble.Connect.Client.Models.EntityType.Todo"/>.
            </param>
            <param name="request">The upload request descriptor.</param>
            <param name="timeout">
            The time span to wait before cancelling the read activity from network stream.
            The timeout is monitored not for the whole operation but for the activity in the stream.
            If there is no activity for the specified period of time the operation is cancelled.
            </param>
            <param name="bufferSize">The size of the buffer. Value must be greater than zero. The default size is 80KB.</param> 
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The information about the new file version.</returns>
            <remarks>Uses 'application/octet-stream' content type.</remarks>
            <exception cref="T:System.ArgumentNullException">One of the parameters is null.</exception>
        </member>
        <member name="M:Trimble.Connect.Client.FilesControllerExtensions.DownloadToFileAsync(Trimble.Connect.Client.IFilesController,System.String,System.IO.FileMode,System.String,System.String,System.String,System.Action{System.Net.Http.Handlers.HttpProgressEventArgs},System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to download the contents of a file to a local file.
            </summary>
            <param name="controller">The files controller.</param>
            <param name="path">A string containing the path to the target file.</param>
            <param name="mode">A <see cref="T:System.IO.FileMode"/> enumeration value that determines how to open or create the file.</param>
            <param name="fileId">The file identifier to download.</param>
            <param name="fileVersionId">The optional file version identifier to download. If null the latest version is downloaded.</param>
            <param name="format">The file format to download.</param>
            <param name="progress">The progress callback.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>Uses default transfer buffer size 80KB.</remarks>
        </member>
        <member name="M:Trimble.Connect.Client.FilesControllerExtensions.DownloadToFileAsync(Trimble.Connect.Client.IFilesController,System.String,System.IO.FileMode,System.String,System.Int32,System.String,System.String,System.Action{System.Net.Http.Handlers.HttpProgressEventArgs},System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to download the contents of a file to a local file.
            </summary>
            <param name="controller">The files controller.</param>
            <param name="path">A string containing the path to the target file.</param>
            <param name="mode">A <see cref="T:System.IO.FileMode"/> enumeration value that determines how to open or create the file.</param>
            <param name="fileId">The file identifier to download.</param>
            <param name="bufferSize">The size of the buffer. Value must be greater than zero. The default size is 80KB.</param>
            <param name="fileVersionId">The optional file version identifier to download. If null the latest version is downloaded.</param>
            <param name="format">The file format to download.</param>
            <param name="progress">The progress callback.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.FilesControllerExtensions.DownloadPartToFileAsync(Trimble.Connect.Client.IFilesController,System.String,System.IO.FileMode,System.String,System.String,System.Int32,System.String,System.Action{System.Net.Http.Handlers.HttpProgressEventArgs},System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to download the contents of a file to a local file.
            </summary>
            <param name="controller">The files controller.</param>
            <param name="path">A string containing the path to the target file.</param>
            <param name="mode">A <see cref="T:System.IO.FileMode"/> enumeration value that determines how to open or create the file.</param>
            <param name="fileId">The file identifier to download.</param>
            <param name="pathTemplate">Path template string used in the context of potree file structure.</param>
            <param name="bufferSize">The size of the buffer. Value must be greater than zero. The default size is 80KB.</param>
            <param name="fileVersionId">The optional file version identifier to download. If null the latest version is downloaded.</param>
            <param name="progress">The progress callback.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.FilesControllerExtensions.DownloadToFileAsync(Trimble.Connect.Client.IFilesController,System.String,System.IO.FileMode,System.String,System.TimeSpan,System.Int32,System.String,System.String,System.Action{System.Net.Http.Handlers.HttpProgressEventArgs},System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to download the content of a file to a local file with monitoring timeout on stream activity.
            </summary>
            <param name="controller">The files controller.</param>
            <param name="path">A string containing the path to the target file.</param>
            <param name="mode">A <see cref="T:System.IO.FileMode"/> enumeration value that determines how to open or create the file.</param>
            <param name="fileId">The file identifier to download.</param>
            <param name="timeout">
            The time span to wait before cancelling the read activity from network stream.
            The timeout is monitored not for the whole operation but for the activity in the stream.
            If there is no activity for the specified period of time the operation is cancelled.
            </param>
            <param name="bufferSize">The size of the buffer. Value must be greater than zero. The default size is 80KB.</param>
            <param name="fileVersionId">The optional file version identifier to download. If null the latest version is downloaded.</param>
            <param name="format">The file format to download.</param>
            <param name="progress">The progress callback.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.FilesControllerExtensions.AssimilationCompletedAsync(Trimble.Connect.Client.IFilesController,System.String,System.String,System.String,System.Action{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Waits for file assimilation to be completed.
            </summary>
            <param name="controller">The files manipulator.</param>
            <param name="fileIdentifier">The file identifier.</param>
            <param name="fileVersionIdentifier">The optional file version identifier.</param>
            <param name="format">The optional file format, <see cref="T:Trimble.Connect.Client.Models.FileFormat"/>.</param>
            <param name="progress">The optional progress callback.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The final processing status.</returns>
            <remarks>The polling is done with 1 sec interval.</remarks>
        </member>
        <member name="T:Trimble.Connect.Client.FileSync">
            <summary>
            The controller for file synchronization.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.FileSync.RootPath">
            <summary>
            The API root path.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.FileSync.#ctor(Trimble.Connect.Client.ProjectClient)">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.FileSync"/> class.
            </summary>
            <param name="projectClient">The project client.</param>
        </member>
        <member name="P:Trimble.Connect.Client.FileSync.ProjectClient">
            <summary>
            Gets the URI used as the base for all service requests.
            </summary>
            <value>
            The base service URI.
            </value>
        </member>
        <member name="M:Trimble.Connect.Client.FileSync.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the information about file structure starting from the specified root folder.
            </summary>
            <param name="folderId">The folder identifier.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The file tree structure.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.FileSync.ProcessAsync(Trimble.Connect.Client.Models.SyncItem[],System.Threading.CancellationToken)">
            <summary>
            Initiates the synchronization session.
            </summary>
            <param name="localState">The local state.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The synchronization information.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.FileSync.CommitAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Commits changes requested during the synchronization session.
            </summary>
            <param name="sessionId">The session identifier.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The task.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.FileSync.CancelAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Cancels changes requested during the synchronization session.
            </summary>
            <param name="sessionId">The session identifier.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The task.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.GroupsController">
            <summary>
            The groups controller.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.GroupsController.#ctor(Trimble.Connect.Client.ProjectClient)">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.GroupsController"/> class.
            </summary>
            <param name="projectClient">The project client.</param>
        </member>
        <member name="M:Trimble.Connect.Client.GroupsController.GetUsersAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Lists the users in the group.
            </summary>
            <param name="groupId">The identifier of the group.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>A collection of users that belong to the group.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.GroupsController.AddUsersAsync(System.String,System.Collections.Generic.IEnumerable{Trimble.Connect.Client.Models.Person},System.Threading.CancellationToken)">
            <summary>
            Adds users to a group.
            </summary>
            <param name="groupId">The identifier of the group.</param>
            <param name="users">The users to add.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The task.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.GroupsController.RemoveUsersAsync(System.String,System.Collections.Generic.IEnumerable{Trimble.Connect.Client.Models.Person},System.Threading.CancellationToken)">
            <summary>
            Removes users from a group.
            </summary>
            <param name="groupId">The identifier of the group.</param>
            <param name="users">The users to remove.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The task.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.GroupsController.AddOrRemoveUsersAsync(System.Net.Http.HttpMethod,System.String,System.Collections.Generic.IEnumerable{Trimble.Connect.Client.Models.Person},System.Threading.CancellationToken)">
            <summary>
            Adds or removes users from a group.
            </summary>
            <param name="method">The HTTP method.</param>
            <param name="groupId">The identifier of the group.</param>
            <param name="users">The users to remove.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The task.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.GroupsControllerExtensions">
            <summary>
            The user groups controller extensions.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.GroupsControllerExtensions.AddUsersAsync(Trimble.Connect.Client.IGroupsController,System.String,Trimble.Connect.Client.Models.Person,System.Threading.CancellationToken)">
            <summary>
            Adds a user to a group.
            </summary>
            <param name="groups">The groups controller.</param>
            <param name="groupId">The identifier of the group.</param>
            <param name="user">The user to add.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The task.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.GroupsControllerExtensions.RemoveUsersAsync(Trimble.Connect.Client.IGroupsController,System.String,Trimble.Connect.Client.Models.Person,System.Threading.CancellationToken)">
            <summary>
            Removes a user from a group.
            </summary>
            <param name="groups">The groups controller.</param>
            <param name="groupId">The identifier of the group.</param>
            <param name="user">The user to remove.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The task.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.Http.QueryResponse`1">
            <summary>
            Represents the response from Data Service or Sync Service with collection of resources.
            </summary>
            <typeparam name="T">The type of the item in the result.</typeparam>
        </member>
        <member name="F:Trimble.Connect.Client.Http.QueryResponse`1.stream">
            <summary>
            The HTTP response with JSON content.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.Http.QueryResponse`1.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.Http.QueryResponse`1" /> class.
            </summary>
            <param name="stream">The HTTP content stream.</param>
        </member>
        <member name="M:Trimble.Connect.Client.Http.QueryResponse`1.Dispose">
            <summary>
            Disposes the web response.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.Http.QueryResponse`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Trimble.Connect.Client.Http.QueryResponse`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="T:Trimble.Connect.Client.Http.QueryResponse`1.ItemEnumerator`1">
            <summary>
            The item iterator.
            </summary>
            <typeparam name="T">The item type.</typeparam>
        </member>
        <member name="F:Trimble.Connect.Client.Http.QueryResponse`1.ItemEnumerator`1.stream">
            <summary>
            The HTTP response with JSON content.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Http.QueryResponse`1.ItemEnumerator`1.reader">
            <summary>
            The reader.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Http.QueryResponse`1.ItemEnumerator`1.serializer">
            <summary>
            The serializer.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.Http.QueryResponse`1.ItemEnumerator`1.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.Http.QueryResponse`1.ItemEnumerator`1"/> class.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="P:Trimble.Connect.Client.Http.QueryResponse`1.ItemEnumerator`1.Current">
            <summary>
            Gets the element in the collection at the current position of the enumerator.
            </summary>
            <returns>
            The element in the collection at the current position of the enumerator.
            </returns>
        </member>
        <member name="P:Trimble.Connect.Client.Http.QueryResponse`1.ItemEnumerator`1.System#Collections#IEnumerator#Current">
            <summary>
            Gets the current element in the collection.
            </summary>
            <returns>
            The current element in the collection.
            </returns>
        </member>
        <member name="M:Trimble.Connect.Client.Http.QueryResponse`1.ItemEnumerator`1.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.Http.QueryResponse`1.ItemEnumerator`1.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
            The true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
        </member>
        <member name="M:Trimble.Connect.Client.Http.QueryResponse`1.ItemEnumerator`1.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
        </member>
        <member name="T:Trimble.Connect.Client.IAppsController">
            <summary>
            The applications controller interface.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.IAppsController.CurrentApp">
            <summary>
            Gets or sets the current application with the information about access token.
            </summary>
            <value>The current application.</value>
            <remarks>
            This property is initialized with the call to <see cref="M:Trimble.Connect.Client.IAppsController.GetAccessTokenAsync(System.String,System.String,System.Threading.CancellationToken)"/>.
            Some API calls (like <see cref="M:Trimble.Connect.Client.IAppsController.GetSettingsAsync(System.String,System.String,System.Threading.CancellationToken)"/> and <see cref="M:Trimble.Connect.Client.IAppsController.SetSettingsAsync(Trimble.Connect.Client.Models.AppSettings,System.Threading.CancellationToken)"/>) require application to be authenticated.
            </remarks>
        </member>
        <member name="M:Trimble.Connect.Client.IAppsController.GetAllAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Returns a collection of all apps' descriptors.
            Additional <paramref name="parameters"/> could be sent to through the query string.
            </summary>
            <param name="parameters">
            A an optional dictionary of user-defined parameters and values to include in the request URI query string.
            </param>
            <param name="pageSize">The page size. Default is <c>null</c> which means pagination is controlled by server.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The collection of apps' descriptors.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IAppsController.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns the application descriptor by identifier.
            </summary>
            <param name="appId">The application identifier.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The application descriptor.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IAppsController.GetVersionInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Returns the application version information.
            </summary>
            <param name="name">The application name.</param>
            <param name="platform">The platform identifier, e.g. WIN64 or WIN32.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The application descriptor.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IAppsController.GetApiKeyAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the application API key.
            </summary>
            <param name="appId">The application identifier.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The API key.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IAppsController.GetAccessTokenAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the application access token.
            </summary>
            <param name="appId">The application identifier.</param>
            <param name="apiKey">The API key.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The user profile.</returns>
            <remarks>Sets the <see cref="P:Trimble.Connect.Client.IAppsController.CurrentApp"/>.</remarks>
        </member>
        <member name="M:Trimble.Connect.Client.IAppsController.GetSettingsAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets an application settings.
            </summary>
            <param name="userId">The user identifier to get settings for.</param>
            <param name="appId">The application identifier to get settings for.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The application settings.</returns>
            <remarks>
            The application settings are cross project per user per application settings.
            </remarks>
        </member>
        <member name="M:Trimble.Connect.Client.IAppsController.SetSettingsAsync(Trimble.Connect.Client.Models.AppSettings,System.Threading.CancellationToken)">
            <summary>
            Sets an application settings overriding previous settings.
            </summary>
            <param name="settings">The application settings to set.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The application settings.</returns>
            <remarks>
            The application settings are cross project per user per application settings.
            </remarks>
        </member>
        <member name="T:Trimble.Connect.Client.IAttachmentsController">
            <summary>
            The interface to manipulate attachments.
            Currently attachments are supported for <see cref="T:Trimble.Connect.Client.Models.Todo"/> and <see cref="T:Trimble.Connect.Client.Models.Comment"/>.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.IAttachmentsController.GetAttachmentsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the attachments for entity.
            </summary>
            <param name="identifier">The entity identifier.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The collection of attached entities.</returns>
            <remarks>
            The entities returned might not have all properties populated.
            Types of entities supported as attachments: <see cref="T:Trimble.Connect.Client.Models.View"/>, <see cref="T:Trimble.Connect.Client.Models.View2D"/>, <see cref="T:Trimble.Connect.Client.Models.FolderItem"/>, <see cref="T:Trimble.Connect.Client.Models.Clash"/>, <see cref="T:Trimble.Connect.Client.Models.UrlReference"/>.
            </remarks>
        </member>
        <member name="M:Trimble.Connect.Client.IAttachmentsController.AddAttachmentsAsync(System.String,System.Collections.Generic.IEnumerable{Trimble.Connect.Client.Models.Attachment},System.Threading.CancellationToken)">
            <summary>
            Add attachments to the entity.
            </summary>
            <param name="identifier">The entity identifier.</param>
            <param name="attachments">The collection of descriptors for entities to attach.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The collection of entities have been attached as a result of this operation.</returns>
            <remarks>
            If some attachments in the <paramref name="attachments"/> are not valid they are ignored and call is succeeded returning only entities that were attached successfully.
            The entities returned might not have all properties populated.
            Types of entities supported as attachments: <see cref="T:Trimble.Connect.Client.Models.View"/>, <see cref="T:Trimble.Connect.Client.Models.View2D"/>, <see cref="T:Trimble.Connect.Client.Models.FolderItem"/>, <see cref="T:Trimble.Connect.Client.Models.Clash"/>, <see cref="T:Trimble.Connect.Client.Models.UrlReference"/>.
            </remarks>
        </member>
        <member name="M:Trimble.Connect.Client.IAttachmentsController.EmbedAsync``1(System.String,``0,System.Threading.CancellationToken)">
            <summary>
            Embed an entity to the entity.
            </summary>
            <param name="identifier">The entity identifier.</param>
            <param name="entity">The entity to embed.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The entity has been embedded.</returns>
            <typeparam name="T">The embedded entity type.</typeparam>
            <remarks>
            A new entity is created and embedded into the entity so the embedded entity is not visible in the project root level,
            but only in the todo scope as attachment.
            </remarks>
        </member>
        <member name="M:Trimble.Connect.Client.IAttachmentsController.EmbedAsync``1(System.String,``0,System.IO.Stream,System.String,System.Threading.CancellationToken)">
            <summary>
            Embed an entity with thumbnail.
            </summary>
            <param name="identifier">The entity identifier.</param>
            <param name="entity">The entity to embed.</param>
            <param name="stream">
            The stream to read the thumbnail content from. 
            The stream is closed automatically when request is completed. 
            Can be null to create an entity without thumbnail.
            </param>
            <param name="contentType">The thumbnail content type.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The entity has been embedded.</returns>
            <typeparam name="T">The entity type.</typeparam>
            <remarks>
            A new entity is created and embedded into the entity so the embedded entity is not visible in the project root level,
            but only in the todo scope as attachment.
            Entities that support thumbnails are <see cref="T:Trimble.Connect.Client.Models.View"/> and <see cref="T:Trimble.Connect.Client.Models.View2D"/>.
            </remarks>
        </member>
        <member name="M:Trimble.Connect.Client.IAttachmentsController.DeleteAttachmentsAsync(System.String,System.Collections.Generic.IEnumerable{Trimble.Connect.Client.Models.Attachment},System.Threading.CancellationToken)">
            <summary>
            Delete attachments from the entity.
            </summary>
            <param name="identifier">The entity identifier.</param>
            <param name="attachments">The collection of descriptors for entities to remove.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The task.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.IClashSetsController">
            <summary>
            The interface to manipulate clash sets.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.IClashSetsController.GetAllItemsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get all clash items in a clash set.
            </summary>
            <param name="clashSetId">The clash set identifier.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The collection of clash items.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IClashSetsController.GetItemsAsync(System.String,System.Nullable{System.Int64},System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Get all clash items in a clash set.
            Additional <paramref name="parameters"/> could be sent to through the query string.
            </summary>
            <param name="clashSetId">The clash set identifier.</param>
            <param name="pageSize">The page size.</param>
            <param name="parameters">
            An optional dictionary of user-defined parameters and values to include in the request URI query string.
            </param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The collection of clash items.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.ICommentsController">
            <summary>
            The interface to manipulate comments.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.ICommentsController.GetAllRelatedToAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Returns a collection of all comments related to given object.
            </summary>
            <param name="identifier">The identifier of the entity comments are related to.</param>
            <param name="type">The type of the entity comments are related to (<see cref="T:Trimble.Connect.Client.Models.EntityType"/>).</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The collection of comments.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.ICompaniesController">
            <summary>
            The company controller interface.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.ICompaniesController.UploadLogoAsync(System.String,System.IO.Stream,System.String,System.Action{System.Net.Http.Handlers.HttpProgressEventArgs},System.Threading.CancellationToken)">
            <summary>
            Uploads the thumbnail.
            </summary>
            <param name="companyId">The company identifier.</param>
            <param name="stream">The stream to read the logo content from. The stream is closed automatically when request is completed.</param>
            <param name="contentType">The content type (e.g. 'image/png').</param>
            <param name="progress">The optional progress callback.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The company entity with thumbnail url.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.ICompaniesController.GetAllMembersAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns a collection of all members of the company.
            </summary>
            <param name="companyId">The company identifier.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The collection of members.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.ICompaniesController.GetMembersPagedAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Returns a collection of all members in the company paged.
            </summary>
            <param name="companyId">The company identifier.</param>
            <param name="pageSize">The page size. Default is <c>null</c> which means pagination is controlled by server.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The collection of company users.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.ICompaniesController.AddMemberAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Adds a user to the company.
            </summary>
            <param name="companyId">The company identifier.</param>
            <param name="userId">The user's identifier or email.</param>
            <param name="role">The optional user's role.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The added person.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.ICompaniesController.RemoveMemberAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a user from the company.
            </summary>
            <param name="companyId">The company identifier.</param>
            <param name="userId">The user identifier.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>A task.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.ICompaniesController.SetMemberRoleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Set a role for the company member.
            </summary>
            <param name="companyId">The company identifier.</param>
            <param name="userId">The user identifier.</param>
            <param name="role">The user's role.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>A person.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.IController`1">
            <summary>
            The interface to manipulate entities.
            </summary>
            <typeparam name="T">The entity type.</typeparam>
        </member>
        <member name="M:Trimble.Connect.Client.IController`1.GetAllAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Returns a collection of all entities.
            Additional <paramref name="parameters"/> could be sent to through the query string.
            </summary>
            <param name="parameters">
            A an optional dictionary of user-defined parameters and values to include in the request URI query string.
            </param>
            <param name="pageSize">The page size. Default is <c>null</c> which means pagination is controlled by server.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The collection of entities.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IController`1.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns the entity by identifier.
            </summary>
            <param name="identifier">The identifier.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The entity.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IController`1.CreateAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Creates a new entity.
            </summary>
            <param name="entity">The template with entity properties. Some of the properties in the template are ignored and assigned by server (timestamps, creator identifier).</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The information about created entity.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IController`1.UpdateAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Updates an entity.
            </summary>
            <param name="entity">The entity template.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The information about updated entity.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IController`1.DeleteAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes an entity.
            </summary>
            <param name="entityId">The entity identifier.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>A task.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.IdToken">
            <summary>
            The JWT security token class.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.IdToken.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.IdToken"/> class.
            </summary>
            <param name="jwtEncodedString">A JSON Web Token that has been serialized in JWS Compact serialized format.</param>
        </member>
        <member name="P:Trimble.Connect.Client.IdToken.RawData">
            <summary>
            Gets the original raw data of this instance when it was created.
            </summary>
            <value>The raw data.</value>
        </member>
        <member name="P:Trimble.Connect.Client.IdToken.Payload">
            <summary>
            Gets the payload.
            </summary>
            <value>The dictionary.</value>
        </member>
        <member name="P:Trimble.Connect.Client.IdToken.Issuer">
            <summary>
            Gets the 'value' of the 'issuer' claim { iss, 'value' }.
            </summary>
            <value>The issues identifier.</value>
            <remarks>If the 'issuer' claim is not found, null is returned.</remarks>
        </member>
        <member name="P:Trimble.Connect.Client.IdToken.IssuedAt">
            <summary>
            Gets the 'value' of the Issued At claim from JSON in the form of { iat, 'value' }.
            </summary>
            <value>The issues identifier.</value>
            <remarks>If the 'iat' claim is not found, null is returned.</remarks>
        </member>
        <member name="P:Trimble.Connect.Client.IdToken.Subject">
            <summary>
            Gets "value" of the 'subject' claim { sub, 'value' }.
            </summary>
            <remarks>If the 'subject' claim is not found, null is returned.</remarks>
        </member>
        <member name="P:Trimble.Connect.Client.IdToken.Uuid">
            <summary>
            Gets unique user identifier.
            </summary>
            <value>The UUID.</value>
        </member>
        <member name="P:Trimble.Connect.Client.IdToken.Expiration">
            <summary>
            Gets the ‘value’ of the expiration claim from JSON in the form of { exp, 'value' }.
            </summary>
            <remarks>If the expiration claim is not found or could not be converted to Int32, null is returned.</remarks>
        </member>
        <member name="P:Trimble.Connect.Client.IdToken.ValidTo">
            <summary>
            Gets 'value' of the 'expiration' claim { exp, 'value' } converted to a <see cref="T:System.DateTime"/> assuming 'value' is seconds since UnixEpoch (UTC 1970-01-01T0:0:0Z).
            </summary>
            <value>The date time.</value>
            <remarks>If the 'expiration' claim is not found, then <see cref="F:System.DateTime.MinValue"/> is returned.</remarks>
        </member>
        <member name="M:Trimble.Connect.Client.IdToken.JwtTimestampToDateTime(System.Nullable{System.Int32})">
            <summary>
            From JWT timestamp.
            </summary>
            <param name="timestamp">The JWT timestamp.</param>
            <returns>A date time. If the <paramref name="timestamp"/> is null, then <see cref="F:System.DateTime.MinValue"/> is returned.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IdToken.GetTimestamp(Newtonsoft.Json.Linq.JObject,System.String)">
            <summary>
            From JWT timestamp.
            </summary>
            <param name="jobject">The JSON object.</param>
            <param name="claim">The claim.</param>
            <returns>A timestamp in seconds or null.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IdToken.Base64UrlDecode(System.String)">
            <summary>
            Decodes a base 64 URL string.
            </summary>
            <param name="input">The input string.</param>
            <returns>The decoded bytes.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.IdTokenClaim">
            <summary>
            The id token claim names.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.IdTokenClaim.Subject">
            <summary>
            The subject.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.IdTokenClaim.Expiration">
            <summary>
            The expiration time.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.IdTokenClaim.IssuedAt">
            <summary>
            The issued at.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.IdTokenClaim.Issuer">
            <summary>
            The token issuer.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.IdTokenClaim.Uuid">
            <summary>
            The user identifier.
            </summary>
        </member>
        <member name="T:Trimble.Connect.Client.IFilesController">
            <summary>
            The interface to manipulate files and folders.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.IFilesController.CheckoutAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Checks out a file.
            </summary>
            <param name="fileId">The file identifier.</param>
            <param name="fileVersionId">The optional file versions identifier. If provided is used for concurrency check.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The successfully checked out file.</returns>
            <remarks>
            If not the latest version is given an exception is thrown.
            </remarks>
        </member>
        <member name="M:Trimble.Connect.Client.IFilesController.CheckinAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Checks in a file.
            </summary>
            <param name="fileId">The file identifier.</param>
            <param name="fileVersionId">The optional file versions identifier. If provided is used for concurrency check.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The successfully checked in file.</returns>
            <remarks>
            If not the latest version is given an exception is thrown.
            </remarks>
        </member>
        <member name="M:Trimble.Connect.Client.IFilesController.DeleteFileAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a file.
            </summary>
            <param name="fileVersionId">The file version identifier.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <remarks>
            Delete will only flag latest version as deleted.
            If not the latest version is given an exception is thrown.
            </remarks>
            <returns>A task.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IFilesController.UpdateFileAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Rename and move a file.
            </summary>
            <param name="fileId">The file identifier.</param>
            <param name="fileVersionId">The optional file versions identifier. If provided is used for concurrency check.</param>
            <param name="name">The new file name. If null not renamed.</param>
            <param name="parentId">The new parent folder identifier. If null not moved.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The file information.</returns>
            <remarks>
            If not the latest version is given an exception is thrown.
            </remarks>
        </member>
        <member name="M:Trimble.Connect.Client.IFilesController.UpdateFileAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Rename and move a file.
            </summary>
            <param name="fileId">The file identifier.</param>
            <param name="fileVersionId">The optional file versions identifier. If provided is used for concurrency check.</param>
            <param name="name">The new file name. If null not renamed.</param>
            <param name="parentId">The new parent folder identifier. If null not moved.</param>
            <param name="parameters">
            An optional dictionary of user-defined parameters and values to include in the request URI query string.
            </param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The file information.</returns>
            <remarks>
            If not the latest version is given an exception is thrown.
            </remarks>
        </member>
        <member name="M:Trimble.Connect.Client.IFilesController.UploadPartAsync(System.String,System.IO.Stream,System.TimeSpan,System.Action{System.Net.Http.Handlers.HttpProgressEventArgs},System.Threading.CancellationToken)">
            <summary>
            Uploads a file part.
            </summary>
            <param name="uri">The part URI.</param>
            <param name="stream">The stream. The stream is closed automatically when request is completed.</param>
            <param name="timeout">
            The time span to wait before cancelling the activity on network stream.
            The timeout is monitored not for the whole operation but for the activity in the stream.
            If there is no activity for the specified period of time the operation is cancelled.
            </param>
            <param name="progress">The optional progress callback.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The task.</returns>
            <remarks>Uses 'application/octet-stream' content type.</remarks>
        </member>
        <member name="M:Trimble.Connect.Client.IFilesController.CommitMultiPartFileUpload(System.String,System.String,System.Collections.Generic.List{Trimble.Connect.Client.Models.FilePartResponseInfo},System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken,System.String)">
            <summary>
            To confirm the upload completion.
            </summary>
            <param name="uploadId">The identifier of the multipart upload request.</param>
            <param name="hash">The file hash.</param>
            <param name="fileParts">The list of uploaded parts.</param>
            <param name="parameters">Additional parameters to add ex: Flag to indicate the server to fetch a non expiring thumbnail url.</param>.
            <param name="cancellationToken">The optional cancellation token.</param>
            <param name="uploadAgainst">The if match version.</param>
            <returns>The file/folder information.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IFilesController.GetDownloadUrl(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            To get the signed download url.
            </summary>
            <param name="fileId">The file identifier.</param>
            <param name="versionId">The file version identifier.</param>
            <param name="format">The file format to download.</param>
            <param name="accessToken">The access token to be used.
            <remarks>To be specified for PDF download</remarks>
            </param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The download url string.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IFilesController.GetDownloadUrl(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            To get the signed download url.
            </summary>
            <param name="fileId">The file identifier.</param>
            <param name="versionId">The file version identifier.</param>
            <param name="format">The file format to download.</param>
            <param name="accessToken">The access token to be used.
            <remarks>To be specified for PDF download</remarks>
            </param>
            <param name="pathTemplate">Optional path template string used in the context of potree file structure.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The download url string.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IFilesController.GetFileInfoAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get latest information about the file.
            </summary>
            <param name="fileId">The file identifier.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The file information.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IFilesController.GetFileInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about the file version.
            </summary>
            <param name="fileId">The file identifier.</param>
            <param name="fileVersionId">The optional file version identifier.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The file information.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IFilesController.GetPartIdentifiersAsync(System.String,System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Returns list of building entity identifiers in stable order which is used together with view bitmasks.
            </summary>
            <param name="fileId">The file identifier.</param>
            <param name="fileVersionId">The optional file version identifier.</param>
            <param name="originalIds">Determines if we want original identifiers from the model file or TCPS internal identifiers.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The file information.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IFilesController.GetFileVersionsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns all file versions.
            </summary>
            <param name="fileId">The file identifier.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The collection of file versions.</returns>
            <remarks>Info for all files versions will be returned regardless of what version of that file is specified.</remarks>
        </member>
        <member name="M:Trimble.Connect.Client.IFilesController.GetFileVersionsAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Returns all file versions.
            </summary>
            <param name="fileId">The file identifier.</param>
            <param name="pageSize">The page size. Default is <c>null</c> which means pagination is controlled by server.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The collection of file versions.</returns>
            <remarks>Info for all files versions will be returned regardless of what version of that file is specified.</remarks>
        </member>
        <member name="M:Trimble.Connect.Client.IFilesController.GetFileVersionsAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Returns all file versions.
            </summary>
            <param name="fileId">The file identifier.</param>
            <param name="parameters">
            An optional dictionary of user-defined parameters and values to include in the request URI query string.
            </param>
            <param name="pageSize">The page size. Default is <c>null</c> which means pagination is controlled by server.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The collection of file versions.</returns>
            <remarks>Info for all files versions will be returned regardless of what version of that file is specified.</remarks>
        </member>
        <member name="M:Trimble.Connect.Client.IFilesController.CreateFolderAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a folder under given parent folder.
            </summary>
            <param name="parentFolderId">The parent folder identifier.</param>
            <param name="name">The folder name.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The information about created folder.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IFilesController.DeleteFolderAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a folder.
            </summary>
            <param name="folderVersionId">The folder version identifier. Must be the last folder version.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>A task.</returns>
            <remarks>
            If not the latest version is given an exception is thrown.
            </remarks>
        </member>
        <member name="M:Trimble.Connect.Client.IFilesController.UpdateFolderAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Rename and move a folder.
            </summary>
            <param name="folderId">The folder  identifier.</param>
            <param name="folderVersionId">The folder version identifier. Must be the last folder version.</param>
            <param name="name">The new folder name. If null not renamed.</param>
            <param name="parentId">The new parent folder identifier. If null not moved.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The information about updated folder.</returns>
            <remarks>
            If not the latest version is given an exception is thrown.
            </remarks>
        </member>
        <member name="M:Trimble.Connect.Client.IFilesController.GetFolderItemsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns information about all items in the specified folder.
            </summary>
            <param name="folderId">The folder identifier.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The collection of all items in the folder.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IFilesController.GetFolderItemsAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Returns information about all items in the specified folder.
            </summary>
            <param name="folderId">The folder identifier.</param>
            <param name="pageSize">The page size. Default is <c>null</c> which means pagination is controlled by server.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The collection of all items in the folder.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IFilesController.GetFolderItemsAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Returns information about all items in the specified folder.
            </summary>
            <param name="folderId">The folder identifier.</param>
            <param name="parameters">
            An optional dictionary of user-defined parameters and values to include in the request URI query string.
            </param>
            <param name="pageSize">The page size. Default is <c>null</c> which means pagination is controlled by server.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The collection of all items in the folder.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IFilesController.GetFolderItemsByPathAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns information about all items in the specified path.
            </summary>
            <param name="searchPath">The path to get the items from.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The collection of all items in the folder.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IFilesController.GetFolderItemsByPathAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Returns information about all items in the specified path.
            </summary>
            <param name="searchPath">The path to get the items from.</param>
            <param name="pageSize">The page size. Default is <c>null</c> which means pagination is controlled by server.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The collection of all items in the folder.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IFilesController.GetFolderItemsByPathAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Returns information about all items in the specified path.
            </summary>
            <param name="searchPath">The path to get the items from.</param>
            <param name="parameters">
            An optional dictionary of user-defined parameters and values to include in the request URI query string.
            </param>
            <param name="pageSize">The page size. Default is <c>null</c> which means pagination is controlled by server.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The collection of all items in the folder.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IFilesController.GetFolderInfoAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get latest information about the folder.
            </summary>
            <param name="folderId">The folder identifier.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The folder information.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IFilesController.GetFolderInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about the folder version.
            </summary>
            <param name="folderId">The folder identifier.</param>
            <param name="folderVersionId">The optional folder version identifier.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The folder information.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IFilesController.GetFolderVersionsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about folder versions.
            </summary>
            <param name="folderId">The folder identifier.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>A collection of folder versions.</returns>
            <remarks>The folder version identifier can be given instead of folder identifier.</remarks>
        </member>
        <member name="M:Trimble.Connect.Client.IFilesController.GetFolderVersionsAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get information about folder versions.
            </summary>
            <param name="folderId">The folder identifier.</param>
            <param name="pageSize">The page size. Default is <c>null</c> which means pagination is controlled by server.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>A collection of folder versions.</returns>
            <remarks>The folder version identifier can be given instead of folder identifier.</remarks>
        </member>
        <member name="M:Trimble.Connect.Client.IFilesController.GetFolderPermissionsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get folder permissions.
            </summary>
            <param name="folderId">The folder identifier.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>A folder permissions.</returns>
            <remarks>The folder version identifier can be given instead of folder identifier.</remarks>
        </member>
        <member name="M:Trimble.Connect.Client.IFilesController.SetFolderPermissionsAsync(System.String,Trimble.Connect.Client.Models.FolderPermissions,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            Sets folder permission for users and groups. It can also be used to reset the default permission.
            </summary>
            <param name="folderId">The folder identifier.</param>
            <param name="permissions">The permissions to set.</param>
            <param name="cascade">If true the <paramref name="permissions"/> are applied on all subfolders recursively. Default is false.</param>
            <param name="folderVersionId">The optional folder version identifier for concurrency control.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>A folder permissions.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IFilesController.UpdateFolderPermissionsAsync(System.String,Trimble.Connect.Client.Models.FolderPermissions,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            Updates existing folder permission for users and groups. It can also be used to reset the default permission.
            </summary>
            <param name="folderId">The folder identifier.</param>
            <param name="permissions">The permissions to set.</param>
            <param name="cascade">If true the <paramref name="permissions"/> are updated on all subfolders recursively. Default is false.</param>
            <param name="folderVersionId">The optional folder version identifier for concurrency control.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>A folder permissions.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IFilesController.RemoveFolderPermissionsAsync(System.String,System.Collections.Generic.IEnumerable{Trimble.Connect.Client.Models.Permission},System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            Removes specified permissions to given user/group.
            </summary>
            <param name="folderId">The folder identifier.</param>
            <param name="permissions">The permissions to remove.</param>
            <param name="cascade">If true the <paramref name="permissions"/> are removed on all subfolders recursively. Default is false.</param>
            <param name="folderVersionId">The optional folder version identifier for concurrency control.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>A task.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IFilesController.UploadAsync(System.String,System.IO.Stream,System.String,System.String,System.Action{System.Net.Http.Handlers.HttpProgressEventArgs},System.Threading.CancellationToken)">
            <summary>
            Uploads the file.
            </summary>
            <param name="folderId">The folder identifier to upload file to.</param>
            <param name="stream">The stream. The stream is closed automatically when request is completed.</param>
            <param name="name">Name of the file.</param>
            <param name="contentType">The file content type (MIME). If null 'application/octet-stream' is used.</param>
            <param name="progress">The progress callback.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The information about the new file version.</returns>
            <remarks>Uses 'application/octet-stream' content type.</remarks>
            <exception cref="T:System.ArgumentNullException">One of the parameters is null.</exception>
        </member>
        <member name="M:Trimble.Connect.Client.IFilesController.UploadAsync(System.String,System.IO.Stream,System.String,System.String,System.Boolean,System.String,System.Action{System.Net.Http.Handlers.HttpProgressEventArgs},System.Threading.CancellationToken)">
            <summary>
            Uploads the file.
            </summary>
            <param name="folderId">The folder identifier to upload file to.</param>
            <param name="stream">The stream. The stream is closed automatically when request is completed.</param>
            <param name="name">Name of the file.</param>
            <param name="contentType">The file content type (MIME). If null 'application/octet-stream' is used.</param>
            <param name="fileSet">Optional file set param used to initiate multifile upload.</param>
            <param name="pathTemplate">Optional path template string used in the context of potree file structure.</param>
            <param name="progress">The progress callback.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The information about the new file version.</returns>
            <remarks>Uses 'application/octet-stream' content type.</remarks>
            <exception cref="T:System.ArgumentNullException">One of the parameters is null.</exception>
        </member>
        <member name="M:Trimble.Connect.Client.IFilesController.UploadAsync(System.String,Trimble.Connect.Client.FileUploadRequest,System.Threading.CancellationToken)">
            <summary>
            Uploads the file.
            </summary>
            <param name="folderId">The folder identifier to upload file to.</param>
            <param name="request">The upload request descriptor.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The information about the new file version.</returns>
            <exception cref="T:System.ArgumentNullException">One of the parameters is null.</exception>
        </member>
        <member name="M:Trimble.Connect.Client.IFilesController.UploadAsync(Trimble.Connect.Client.Models.Attachment,Trimble.Connect.Client.FileUploadRequest,System.Collections.Generic.IDictionary{System.String,System.String},System.TimeSpan,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Uploads the file.
            </summary>
            <param name="parent">
            The parent entity descriptor. Can be e.g. <see cref="F:Trimble.Connect.Client.Models.EntityType.Folder"/> or <see cref="F:Trimble.Connect.Client.Models.EntityType.Todo"/>.
            If entity type is not specified a folder is assumed.
            </param>
            <param name="request">Upload request.</param>
            <param name="parameters">Additional parameters to add ex: Flag to indicate the server to fetch a non expiring thumbnail url.</param>.
            <param name="timeout">
            The time span to wait before cancelling the read activity from network stream.
            The timeout is monitored not for the whole operation but for the activity in the stream.
            If there is no activity for the specified period of time the operation is cancelled.
            </param>
            <param name="bufferSize">The size of the buffer. Value must be greater than zero. The default size is 80KB.</param> 
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The information about the new file versions created.</returns>
            <exception cref="T:System.ArgumentNullException">One of the parameters is null.</exception>
        </member>
        <member name="M:Trimble.Connect.Client.IFilesController.UploadAsync(System.String,Trimble.Connect.Client.FileUploadRequest,System.TimeSpan,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Uploads the file.
            </summary>
            <param name="folderId">The folder identifier to upload file to.</param>
            <param name="request">The upload request descriptor.</param>
            <param name="timeout">
            The time span to wait before cancelling the read activity from network stream.
            The timeout is monitored not for the whole operation but for the activity in the stream.
            If there is no activity for the specified period of time the operation is cancelled.
            </param>
            <param name="bufferSize">The size of the buffer. Value must be greater than zero. The default size is 80KB.</param> 
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The information about the new file version.</returns>
            <exception cref="T:System.ArgumentNullException">One of the parameters is null.</exception>
        </member>
        <member name="M:Trimble.Connect.Client.IFilesController.UploadRepresentationAsync(Trimble.Connect.Client.FileUploadRequest,System.Nullable{System.TimeSpan},System.Int32,System.Threading.CancellationToken)">
            <summary>
            Uploads a representation of the model file.
            </summary>
            <param name="request">The upload request descriptor.</param>
            <param name="timeout">
            The time span to wait before cancelling the read activity from network stream.
            The timeout is monitored not for the whole operation but for the activity in the stream.
            If there is no activity for the specified period of time the operation is cancelled.
            If omitted the default timeout of 100 seconds will be used.
            </param>
            <param name="bufferSize">The size of the buffer. Value must be greater than zero. The default size is 80KB.</param> 
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The information about the new file version.</returns>
            <exception cref="T:System.ArgumentNullException">One of the parameters is null.</exception>
        </member>
        <member name="M:Trimble.Connect.Client.IFilesController.UploadAsync(System.String,System.Collections.Generic.IEnumerable{Trimble.Connect.Client.FileUploadRequest},System.Threading.CancellationToken)">
            <summary>
            Uploads the collection of files.
            </summary>
            <param name="folderId">The folder identifier to upload files to.</param>
            <param name="requests">The collection of upload requests.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The information about the new file versions created.</returns>
            <exception cref="T:System.ArgumentNullException">One of the parameters is null.</exception>
        </member>
        <member name="M:Trimble.Connect.Client.IFilesController.UploadAsync(System.String,System.Collections.Generic.IEnumerable{Trimble.Connect.Client.FileUploadRequest},System.TimeSpan,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Uploads the collection of files.
            </summary>
            <param name="folderId">The folder identifier to upload files to.</param>
            <param name="requests">The collection of upload requests.</param>
            <param name="timeout">
            The time span to wait before cancelling the read activity from network stream.
            The timeout is monitored not for the whole operation but for the activity in the stream.
            If there is no activity for the specified period of time the operation is cancelled.
            </param>
            <param name="bufferSize">The size of the buffer. Value must be greater than zero. The default size is 80KB.</param> 
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The information about the new file versions created.</returns>
            <exception cref="T:System.ArgumentNullException">One of the parameters is null.</exception>
        </member>
        <member name="M:Trimble.Connect.Client.IFilesController.UploadAsync(Trimble.Connect.Client.Models.Attachment,System.Collections.Generic.IEnumerable{Trimble.Connect.Client.FileUploadRequest},System.TimeSpan,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Uploads the collection of files.
            </summary>
            <param name="parent">
            The parent entity descriptor. Can be e.g. <see cref="F:Trimble.Connect.Client.Models.EntityType.Folder"/> or <see cref="F:Trimble.Connect.Client.Models.EntityType.Todo"/>.
            If entity type is not specified a folder is assumed.
            </param>
            <param name="requests">The collection of upload requests.</param>
            <param name="timeout">
            The time span to wait before cancelling the read activity from network stream.
            The timeout is monitored not for the whole operation but for the activity in the stream.
            If there is no activity for the specified period of time the operation is cancelled.
            </param>
            <param name="bufferSize">The size of the buffer. Value must be greater than zero. The default size is 80KB.</param> 
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The information about the new file versions created.</returns>
            <exception cref="T:System.ArgumentNullException">One of the parameters is null.</exception>
        </member>
        <member name="M:Trimble.Connect.Client.IFilesController.UploadAsync(Trimble.Connect.Client.Models.Attachment,System.Collections.Generic.IEnumerable{Trimble.Connect.Client.FileUploadRequest},System.Collections.Generic.IDictionary{System.String,System.String},System.TimeSpan,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Uploads the collection of files.
            </summary>
            <param name="parent">
            The parent entity descriptor. Can be e.g. <see cref="F:Trimble.Connect.Client.Models.EntityType.Folder"/> or <see cref="F:Trimble.Connect.Client.Models.EntityType.Todo"/>.
            If entity type is not specified a folder is assumed.
            </param>
            <param name="requests">The collection of upload requests.</param>
            <param name="parameters">Additional parameters to add ex: Flag to indicate the server to fetch a non expiring thumbnail url.</param> 
            <param name="timeout">
            The time span to wait before cancelling the read activity from network stream.
            The timeout is monitored not for the whole operation but for the activity in the stream.
            If there is no activity for the specified period of time the operation is cancelled.
            </param>
            <param name="bufferSize">The size of the buffer. Value must be greater than zero. The default size is 80KB.</param> 
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The information about the new file versions created.</returns>
            <exception cref="T:System.ArgumentNullException">One of the parameters is null.</exception>
        </member>
        <member name="M:Trimble.Connect.Client.IFilesController.DownloadAsync(System.String,System.String,System.String,System.Action{System.Net.Http.Handlers.HttpProgressEventArgs},System.Threading.CancellationToken)">
            <summary>
            Downloads the file.
            </summary>
            <param name="fileId">The file identifier to download.</param>
            <param name="fileVersionId">The optional file version identifier to download. If null the latest version is downloaded.</param>
            <param name="format">The optional file format to download. If null original file is downloaded.</param>
            <param name="progress">The progress callback.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <exception cref="T:System.ArgumentNullException">The fileVersionId is null.</exception>
            <returns>The network stream to read the content from. Caller is responsible on closing the stream.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IFilesController.DownloadAsync(System.String,System.String,System.String,System.String,System.Action{System.Net.Http.Handlers.HttpProgressEventArgs},System.Threading.CancellationToken)">
            <summary>
            Downloads the file.
            </summary>
            <param name="fileId">The file identifier to download.</param>
            /// <param name="accessToken">The access token to be used.
            <remarks>To be specified for PDF download</remarks>
            </param>
            <param name="fileVersionId">The optional file version identifier to download. If null the latest version is downloaded.</param>
            <param name="format">The optional file format to download. If null original file is downloaded.</param>
            <param name="progress">The progress callback.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <exception cref="T:System.ArgumentNullException">The fileVersionId is null.</exception>
            <returns>The network stream to read the content from. Caller is responsible on closing the stream.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IFilesController.DownloadPartAsync(System.String,System.String,System.String,System.Action{System.Net.Http.Handlers.HttpProgressEventArgs},System.Threading.CancellationToken)">
            <summary>
            Downloads the file.
            </summary>
            <param name="fileId">The file identifier to download.</param>
            <param name="pathTemplate">Path template string used in the context of potree file structure.</param>
            <param name="fileVersionId">The file version identifier to download.</param>
            <param name="progress">The progress callback.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <exception cref="T:System.ArgumentNullException">The fileVersionId is null.</exception>
            <returns>The network stream to read the content from. Caller is responsible on closing the stream.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IFilesController.DownloadAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.String,System.String,System.Action{System.Net.Http.Handlers.HttpProgressEventArgs},System.Threading.CancellationToken)">
            <summary>
            Downloads the file with support for range transfer.
            </summary>
            <param name="fileId">The file identifier to download.</param>
            <param name="from">The position at which to start sending data.</param>
            <param name="to">The position at which to stop sending data.</param>
            <param name="fileVersionId">The file version identifier to download.</param>
            <param name="format">The file format to download.</param>
            <param name="progress">The progress callback.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <exception cref="T:System.ArgumentNullException">The fileVersionId is null.</exception>
            <returns>The network stream to read the content from. Caller is responsible on closing the stream.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IFilesController.DownloadAsync(System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.String,System.String,System.Action{System.Net.Http.Handlers.HttpProgressEventArgs},System.Threading.CancellationToken)">
            <summary>
            Downloads the file with support for range transfer.
            </summary>
            <param name="fileId">The file identifier to download.</param>
            <param name="accessToken">The access token to be used.
            <remarks>To be specified for PDF download</remarks>
            </param>
            <param name="from">The position at which to start sending data.</param>
            <param name="to">The position at which to stop sending data.</param>
            <param name="fileVersionId">The file version identifier to download.</param>
            <param name="format">The file format to download.</param>
            <param name="progress">The progress callback.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <exception cref="T:System.ArgumentNullException">The fileVersionId is null.</exception>
            <returns>The network stream to read the content from. Caller is responsible on closing the stream.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IFilesController.DownloadAsync(System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.String,System.String,System.String,System.Action{System.Net.Http.Handlers.HttpProgressEventArgs},System.Threading.CancellationToken)">
            <summary>
            Downloads the file.
            </summary>
            <param name="fileId">The file identifier to download.</param>
            <param name="accessToken">The access token to be used.
            <remarks>To be specified for PDF download</remarks>
            </param>
            <param name="from">The position at which to start sending data.</param>
            <param name="to">The position at which to stop sending data.</param>
            <param name="fileVersionId">The file version identifier to download.</param>
            <param name="format">The file format to download.</param>
            <param name="pathTemplate">Optional path template string used in the context of potree file structure.</param>
            <param name="progress">The progress callback.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <exception cref="T:System.ArgumentNullException">The fileVersionId is null.</exception>
            <returns>The network stream to read the content from. Caller is responsible on closing the stream.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IFilesController.DownloadAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.String,System.Action{System.Net.Http.Handlers.HttpProgressEventArgs},System.Threading.CancellationToken)">
            <summary>
            Downloads the file by passing the download url.
            </summary>
            <param name="downloadUrl">The download url.</param>
            <param name="from">The position at which to start sending data.</param>
            <param name="to">The position at which to stop sending data.</param>
            <param name="format">The file format to download.</param>
            <param name="progress">The progress callback.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <exception cref="T:System.ArgumentNullException">The fileVersionId is null.</exception>
            <returns>The network stream to read the content from. Caller is responsible on closing the stream.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IFilesController.GetAllAlignmentsAsync(System.Threading.CancellationToken)">
            <summary>
            Gets all alignment for model files.
            </summary>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The alignments.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IFilesController.SetAlignmentAsync(System.String,Trimble.Connect.Client.Models.Alignment,System.String,System.Threading.CancellationToken)">
            <summary>
            Sets (creates or updates) the alignment for a model file.
            </summary>
            <param name="fileId">The file or file version identifier.</param>
            <param name="alignment">The alignment.</param>
            <param name="fileVersionId">The optional version identifier, if not provided latest version will be used.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>A new alignment.</returns>
            <remarks>
            In general, an alignment is associated to a version of a given file and later file version inherits alignment from previous version. 
            For example, suppose we have file versions v1, v2, v3, v4 and v5; and alignment are set for v1 and v3 then v2 inherit alignment from v1 and v4 and v5 inherit from v3.
            </remarks>
        </member>
        <member name="M:Trimble.Connect.Client.IFilesController.GetAlignmentAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the alignment for a model file.
            </summary>
            <param name="fileId">The file identifier.</param>
            <param name="fileVersionId">The optional version identifier, if not provided latest version will be queried.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The alignment.</returns>
            <remarks>
            Returns the latest available alignment.
            Alignment is defined as an axis to axis transformation composed with a uniform scaling. 
            In general, an alignment is associated to a version of a given file and later file version inherits alignment from previous version. 
            For example, suppose we have file versions v1, v2, v3, v4 and v5; and alignment are set for v1 and v3 then v2 inherit alignment from v1 and v4 and v5 inherit from v3.
            </remarks>
        </member>
        <member name="M:Trimble.Connect.Client.IFilesController.DeleteAlignmentAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Delete the alignment for a model file. All alignments for all versions are deleted.
            </summary>
            <param name="fileId">The file identifier.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The task.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IFilesController.GetFileProcessingStatusAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the format processing status for a file.
            </summary>
            <param name="fileId">The file identifier.</param>
            <param name="fileVersionId">The optional version identifier, if not provided latest version will be queried.</param>
            <param name="format">The optional format parameter.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The processing status as integer between 0 and 100. Negative values indicate processing error.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IFilesController.InitiateMultipartUploadAsync(System.String,System.String,System.Int32,Trimble.Connect.Client.FileUploadRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates multipart file upload.
            </summary>
            <param name="parentId">The Parent identifier.</param>
            <param name="parentType">The parent type.</param>
            <param name="partsCount">The number of parts.</param>
            <param name="request">The file name.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The identifier of the initiated multipart upload request.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.IFileSync">
            <summary>
            The file synchronization interface.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.IFileSync.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the information about file structure starting from the specified root folder.
            </summary>
            <param name="folderId">The folder identifier.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The file tree structure.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IFileSync.ProcessAsync(Trimble.Connect.Client.Models.SyncItem[],System.Threading.CancellationToken)">
            <summary>
            Initiates the synchronization session.
            </summary>
            <param name="localState">The local state.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The synchronization information.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IFileSync.CommitAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Commits changes requested during the synchronization session.
            </summary>
            <param name="sessionId">The session identifier.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The task.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IFileSync.CancelAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Cancels changes requested during the synchronization session.
            </summary>
            <param name="sessionId">The session identifier.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The task.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.IGroupsController">
            <summary>
            The interface to manipulate user groups.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.IGroupsController.GetUsersAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Lists the users in the group.
            </summary>
            <param name="groupId">The identifier of the group.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>A collection of users that belong to the group.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IGroupsController.AddUsersAsync(System.String,System.Collections.Generic.IEnumerable{Trimble.Connect.Client.Models.Person},System.Threading.CancellationToken)">
            <summary>
            Adds users to a group.
            </summary>
            <param name="groupId">The identifier of the group.</param>
            <param name="users">The users to add.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The task.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IGroupsController.RemoveUsersAsync(System.String,System.Collections.Generic.IEnumerable{Trimble.Connect.Client.Models.Person},System.Threading.CancellationToken)">
            <summary>
            Removes users from a group.
            </summary>
            <param name="groupId">The identifier of the group.</param>
            <param name="users">The users to remove.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The task.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.ILinksController">
            <summary>
            The interface to manipulate entity links.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.ILinksController.CreateAsync(System.Collections.Generic.IEnumerable{Trimble.Connect.Client.Models.EntityLink},System.Threading.CancellationToken)">
            <summary>
            Batch creation of new entities.
            </summary>
            <param name="entities">The collection of templates with entity properties. Some of the properties in the template are ignored and assigned by server (timestamps, creator identifier).</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The information about created entities.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.IModelsController">
            <summary>
            The interface to retrieve model data.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.IModelsController.GetModelTreeAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Returns a model tree structure for a given model file.
            </summary>
            <param name="fileId">The file identifier.</param>
            <param name="fileVersionId">The optional file versions identifier.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The collection of comments.</returns>
            <remarks>If fileVersionId is provided then model tree structure is returned for the specific model version,
            otherwise it is returned for the latest model version.</remarks>
        </member>
        <member name="M:Trimble.Connect.Client.IModelsController.GetObjectTypesAsync(System.Threading.CancellationToken)">
            <summary>
            Get a collection of BIM object types supported by the Trimble Connect.
            </summary>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>Supported BIM object type names.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IModelsController.GetObjectsAsync(Trimble.Connect.Client.Models.ObjectQuery,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Returns the BIM objects which satisfy query conditions as objects.
            </summary>
            <param name="query">The query to execute.</param>
            <param name="pageSize">The page size. default is <c>null</c> that means pagination is controlled by server.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>A query result as a collection of objects.</returns>
            <remarks>There needs to be at least one model specified using either fileIdentifiers or versionIdentifiers.</remarks>
        </member>
        <member name="T:Trimble.Connect.Client.IO.CacheHandler">
            <summary>
            The handler that caches the responses and checks the cache before making Web API request.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.IO.CacheHandler.ProjectsPath">
            <summary>
            The projects path.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.IO.CacheHandler.HeartBeatPath">
            <summary>
            The heartbeat path.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.IO.CacheHandler.#ctor(System.Net.Http.HttpMessageHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.IO.CacheHandler"/> class.
            </summary>
            <param name="innerHandler">The inner handler which is responsible for processing the HTTP response messages.</param>
        </member>
        <member name="M:Trimble.Connect.Client.IO.CacheHandler.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.IO.CacheHandler"/> class.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.IO.CacheHandler.HeartBeatCache">
            <summary>
            Gets the heartbeat cache.
            </summary>
            <value>The heartbeat cache value.</value>
        </member>
        <member name="P:Trimble.Connect.Client.IO.CacheHandler.ExpiresIn">
            <summary>
            Gets or sets the timespan for the expiration of the value in cache.
            </summary>
            <remarks>Default value is 2 seconds.</remarks>
            <value>The expiration value.</value>
        </member>
        <member name="M:Trimble.Connect.Client.IO.CacheHandler.Invalidate">
            <summary>
            Invalidates the cache.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.IO.CacheHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>
            Tries to send the request and if unsuccessful because of 401-Unauthorized tries to refresh the access token,
            retries the request and uses callback to set the new access token to the client.
            </summary>
            <param name="request">The request.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The web response.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IO.CacheHandler.IsHeartBeatRequest(System.Net.Http.HttpRequestMessage)">
            <summary>
            Checks if the request is heart beat request.
            </summary>
            <param name="request">The Http request.</param>
            <returns>true if the request is heart beat request, false otherwise.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.IO.FileUtils">
            <summary>
            File utilities.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.IO.FileUtils.TryDelete(System.String)">
            <summary>
            Tries to delete a file without throwing exception.
            </summary>
            <param name="path">The full path to the file to create.</param>
            <returns>True if file was deleted.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IO.FileUtils.WaitForUnlockedAndOpenAsync(System.String,System.IO.FileMode,System.IO.FileAccess,System.Threading.CancellationToken)">
            <summary>
            Waits for the file with the given name to be unlocked and opens a <see cref="T:System.IO.FileStream"/> on the specified <paramref name="path"/>,
            with the specified <paramref name="mode"/> and <paramref name="access"/>.
            </summary>
            <param name="path">The full path to the file to create.</param>
            <param name="mode">A <see cref="T:System.IO.FileMode"/> value that specifies whether a file is created if one does not exist, and determines whether the contents of existing files are retained or overwritten.</param>
            <param name="access">A <see cref="T:System.IO.FileAccess"/> value that specifies the operations that can be performed on the file.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The file stream to the created file.</returns>
            <remarks>This method can be used as a synchronization primitive using the underlying file system file locking mechanisms.</remarks>
        </member>
        <member name="T:Trimble.Connect.Client.IO.PartStreamWrapper">
            <summary>
            This class is used to wrap a stream for a particular segment of a stream.
            It makes that segment look like you are reading from beginning to end of the stream.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.IO.PartStreamWrapper.initialPosition">
            <summary>
            The initial position in the wrapped stream.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.IO.PartStreamWrapper.size">
            <summary>
            The part size.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.IO.PartStreamWrapper.#ctor(System.IO.Stream,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.IO.PartStreamWrapper"/> class.
            </summary>
            <param name="stream">The stream.</param>
            <param name="size">The size of the part. If zero or negative the remaining size of the <paramref name="stream"/> will be used.</param>
        </member>
        <member name="P:Trimble.Connect.Client.IO.PartStreamWrapper.Length">
            <inheritdoc />
        </member>
        <member name="P:Trimble.Connect.Client.IO.PartStreamWrapper.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Trimble.Connect.Client.IO.PartStreamWrapper.Position">
            <inheritdoc />
        </member>
        <member name="P:Trimble.Connect.Client.IO.PartStreamWrapper.RemainingPartSize">
            <summary>
            Gets the remaining part size.
            </summary>
            <value>The size.</value>
        </member>
        <member name="M:Trimble.Connect.Client.IO.PartStreamWrapper.Flush">
            <inheritdoc />
        </member>
        <member name="M:Trimble.Connect.Client.IO.PartStreamWrapper.Read(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Trimble.Connect.Client.IO.PartStreamWrapper.ReadByte">
            <inheritdoc />
        </member>
        <member name="M:Trimble.Connect.Client.IO.PartStreamWrapper.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Trimble.Connect.Client.IO.PartStreamWrapper.Seek(System.Int64,System.IO.SeekOrigin)">
            <inheritdoc />
        </member>
        <member name="M:Trimble.Connect.Client.IO.PartStreamWrapper.SetLength(System.Int64)">
            <inheritdoc />
        </member>
        <member name="M:Trimble.Connect.Client.IO.PartStreamWrapper.Write(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Trimble.Connect.Client.IO.PartStreamWrapper.WriteByte(System.Byte)">
            <inheritdoc />
        </member>
        <member name="M:Trimble.Connect.Client.IO.PartStreamWrapper.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Trimble.Connect.Client.IO.PartStreamWrapper.EndWrite(System.IAsyncResult)">
            <inheritdoc />
        </member>
        <member name="M:Trimble.Connect.Client.IO.PartStreamWrapper.Dispose(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:Trimble.Connect.Client.IProjectClient">
            <summary>
            The project client interface.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.IProjectClient.ProjectIdentifier">
            <summary>
            Gets the project identifier.
            </summary>
            <value>
            The project identifier.
            </value>
        </member>
        <member name="P:Trimble.Connect.Client.IProjectClient.Members">
            <summary>
            Gets the project members controller.
            </summary>
            <value>The project members controller.</value>
        </member>
        <member name="P:Trimble.Connect.Client.IProjectClient.Todos">
            <summary>
            Gets the todos controller.
            </summary>
            <value>The todos controller.</value>
        </member>
        <member name="P:Trimble.Connect.Client.IProjectClient.Views">
            <summary>
            Gets the views controller.
            </summary>
            <value>The views controller.</value>
        </member>
        <member name="P:Trimble.Connect.Client.IProjectClient.Views2D">
            <summary>
            Gets the 2D views controller.
            </summary>
            <value>The 2D views controller.</value>
        </member>
        <member name="P:Trimble.Connect.Client.IProjectClient.ViewGroups">
            <summary>
            Gets the view groups controller.
            </summary>
            <value>The view groups controller.</value>
        </member>
        <member name="P:Trimble.Connect.Client.IProjectClient.Releases">
            <summary>
            Gets the releases controller.
            </summary>
            <value>The releases controller.</value>
        </member>
        <member name="P:Trimble.Connect.Client.IProjectClient.Files">
            <summary>
            Gets the files controller.
            </summary>
            <value>The files controller.</value>
        </member>
        <member name="P:Trimble.Connect.Client.IProjectClient.Models">
            <summary>
            Gets the models controller.
            </summary>
            <value>The models controller.</value>
        </member>
        <member name="P:Trimble.Connect.Client.IProjectClient.Comments">
            <summary>
            Gets the comments controller.
            </summary>
            <value>The comments controller.</value>
        </member>
        <member name="P:Trimble.Connect.Client.IProjectClient.ClashSets">
            <summary>
            Gets the clash sets controller.
            </summary>
            <value>The clash sets controller.</value>
        </member>
        <member name="P:Trimble.Connect.Client.IProjectClient.Groups">
            <summary>
            Gets the user groups controller.
            </summary>
            <value>The user groups controller.</value>
        </member>
        <member name="P:Trimble.Connect.Client.IProjectClient.Tags">
            <summary>
            Gets the tags controller.
            </summary>
            <value>The tags controller.</value>
        </member>
        <member name="P:Trimble.Connect.Client.IProjectClient.Links">
            <summary>
            Gets the links controller.
            </summary>
            <value>The links controller.</value>
        </member>
        <member name="M:Trimble.Connect.Client.IProjectClient.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the information about project from the server.
            </summary>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The project information.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IProjectClient.UpdateAsync(Trimble.Connect.Client.Models.Project,System.Threading.CancellationToken)">
            <summary>
            Updates the project information.
            </summary>
            <param name="project">The project information to set.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The information about updated project.</returns>
            <remarks>Following properties are editable: name, description, start date and end date.</remarks>
        </member>
        <member name="M:Trimble.Connect.Client.IProjectClient.VisitAsync(System.DateTimeOffset,System.Threading.CancellationToken)">
            <summary>
            Updates the project's last visited property.
            </summary>
            <param name="time">The last visited timestamp to set.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The information about updated project.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IProjectClient.DeleteAsync(System.Threading.CancellationToken)">
            <summary>
            Deletes the project.
            </summary>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The task.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IProjectClient.UploadThumbnailAsync(System.IO.Stream,System.String,System.Action{System.Net.Http.Handlers.HttpProgressEventArgs},System.Threading.CancellationToken)">
            <summary>
            Uploads the thumbnail.
            </summary>
            <param name="stream">The stream to read the thumbnail content from. The stream is closed automatically when request is completed.</param>
            <param name="contentType">The content type (e.g. 'image/png').</param>
            <param name="progress">The optional progress callback.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The project entity with thumbnail url.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IProjectClient.GetSettingsAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Retrieves the project specific settings.
            </summary>
            <param name="parameters">
            A an optional dictionary of user-defined parameters and values to include in the request URI query string.
            </param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The settings.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IProjectClient.UpdateSettingsAsync(Trimble.Connect.Client.Models.ProjectSettings,System.Threading.CancellationToken)">
            <summary>
            Updates the project's settings.
            </summary>
            <param name="settings">The project settings.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>A task.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.IProjectClientWithSync">
            <summary>
            The project client interface.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.IProjectClientWithSync.FileSync">
            <summary>
            Gets the file sync controller.
            </summary>
            <value>The file sync controller.</value>
        </member>
        <member name="M:Trimble.Connect.Client.IProjectClientWithSync.GetHeartbeatAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the information about project's heartbeat from the server.
            </summary>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The project heartbeat information.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IProjectClientWithSync.GetChangesAsync(Trimble.Connect.Client.Models.Heartbeat,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Gets information about modified objects.
            </summary>
            <param name="cursor">Moment in time from which to consider object changes.</param>
            <param name="types">
            Optional list of entity types to query changes for. Values are from <see cref="T:Trimble.Connect.Client.Models.EntityType"/> and <see cref="T:Trimble.Connect.Client.Models.PrincipalType"/>.
            If empty or null, all supported entity types are checked for object modifications.
            </param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The query response object.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IProjectClientWithSync.GetChangesAsync(Trimble.Connect.Client.Models.Heartbeat,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Gets information about modified objects.
            </summary>
            <param name="cursor">The sync cursor. Points to moment in time from which to consider object changes.</param>
            <param name="types">
            Optional list of entity types to query changes for. Values are from <see cref="T:Trimble.Connect.Client.Models.EntityType"/> and <see cref="T:Trimble.Connect.Client.Models.PrincipalType"/>.
            If empty or null, all supported entity types are checked for object modifications.
            </param>
            <param name="pageSize">The page size. If <c>null</c> that means pagination is controlled by server.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The query response object.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IProjectClientWithSync.GetChangesAsync(Trimble.Connect.Client.Models.Heartbeat,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Gets information about modified objects.
            </summary>
            <param name="cursor">The sync cursor. Points to moment in time from which to consider object changes.</param>
            <param name="types">
            Optional list of entity types to query changes for. Values are from <see cref="T:Trimble.Connect.Client.Models.EntityType"/> and <see cref="T:Trimble.Connect.Client.Models.PrincipalType"/>.
            If empty or null, all supported entity types are checked for object modifications.
            </param>
            <param name="parameters">
            A an optional dictionary of user-defined parameters and values to include in the request URI query string.
            </param>
            <param name="pageSize">The page size. If <c>null</c> that means pagination is controlled by server.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The query response object.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.IProjectMembersController">
            <summary>
            The project members controller interface.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.IProjectMembersController.GetAllAsync(System.Threading.CancellationToken)">
            <summary>
            Returns a collection of all members in the project.
            </summary>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The collection of members.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IProjectMembersController.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get user information in project.
            </summary>
            <param name="userId">The user identifier.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>A person.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IProjectMembersController.AddAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Adds a user to the project.
            </summary>
            <param name="email">The user's email.</param>
            <param name="role">The user's role.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The added person.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IProjectMembersController.RemoveAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a user from the project.
            </summary>
            <param name="userId">The user identifier.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>A task.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IProjectMembersController.SetRoleAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Set a role for the project member.
            </summary>
            <param name="userId">The user identifier.</param>
            <param name="role">The user's role.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>A person.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IProjectMembersController.GetAllRolesAsync(System.Threading.CancellationToken)">
            <summary>
            Returns a collection of all user roles in the project.
            </summary>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The collection of available roles.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.IQueryResult`1">
            <summary>
            The query result that represents a list of items returned from server with possible pagination.
            </summary>
            <typeparam name="T">The entity type.</typeparam>
            <example>
            This sample shows how to iterate over the all pages.
              <code>
                var allItems = new List{SearchResult}();
                var page = await client.SearchAsync(Search.For("column"), 100);
                allItems.AddRange(page);
                while (page.HasMore)
                {
                    page = await page.GetNextPageAsync();
                    allItems.AddRange(page);
                }
              </code>
            </example>
        </member>
        <member name="P:Trimble.Connect.Client.IQueryResult`1.HasMore">
            <summary>
            Gets a value indicating whether there are more pages to fetch.
            </summary>
            <value>The flag if there are more pages to fetch.</value>
        </member>
        <member name="P:Trimble.Connect.Client.IQueryResult`1.TotalLength">
            <summary>
            Gets a total number of items in all pages if available.
            </summary>
            <value>The total length.</value>
        </member>
        <member name="M:Trimble.Connect.Client.IQueryResult`1.GetNextPageAsync(System.Threading.CancellationToken)">
            <summary>
            Fetches a next page of results.
            </summary>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The task.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.IReleasesController">
            <summary>
            The interface to manipulate releases.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.IReleasesController.GetAllWithStatusAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Returns all releases with specified status in the project.
            </summary>
            <param name="status">The release status (<see cref="T:Trimble.Connect.Client.Models.ReleaseStatus"/>).</param>
            <param name="pageSize">The page size. Default is <c>null</c> that means pagination is controlled by server.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The collection of releases.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IReleasesController.GetFilesAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns all files attached to the specified release.
            </summary>
            <param name="releaseId">The release identifier.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The collection of file information.</returns>
            <remarks>For entities returned only basic properties are populated.</remarks>
        </member>
        <member name="M:Trimble.Connect.Client.IReleasesController.AddFilesAsync(System.String,System.Collections.Generic.IEnumerable{Trimble.Connect.Client.Models.Attachment},System.Threading.CancellationToken)">
            <summary>
            Attaches files to a release.
            </summary>
            <param name="releaseId">The release identifier.</param>
            <param name="files">The files to add.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The collection of file information.</returns>
            <remarks>For entities returned only basic properties are populated.</remarks>
        </member>
        <member name="M:Trimble.Connect.Client.IReleasesController.RemoveFilesAsync(System.String,System.Collections.Generic.IEnumerable{Trimble.Connect.Client.Models.Attachment},System.Threading.CancellationToken)">
            <summary>
            Removes files from a release.
            </summary>
            <param name="releaseId">The release identifier.</param>
            <param name="files">The files to remove.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The task.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IReleasesController.SendReleaseAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Sends the release to recipients.
            </summary>
            <param name="releaseId">The identifier of the release to send.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The sent release.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.ITagsController">
            <summary>
            The interface to manipulate tags.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.ITagsController.GetEntitiesAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of entities tagged with the specified tag.
            </summary>
            <param name="tagId">The tag identifier.</param>
            <param name="pageSize">The page size.</param>
            <param name="cancellationToken">An optional cancellation token.</param>
            <returns>The tagged entities.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.ITagsController.AddEntitiesAsync(System.String,System.Collections.Generic.IEnumerable{Trimble.Connect.Client.Models.Attachment},System.Threading.CancellationToken)">
            <summary>
            Adds the entities to the tag.
            </summary>
            <param name="tagId">The tag identifier.</param>
            <param name="entities">The entities descriptors to attach the tag to.</param>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>The tagged entities.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.ITagsController.RemoveEntitiesAsync(System.String,System.Collections.Generic.IEnumerable{Trimble.Connect.Client.Models.Attachment},System.Threading.CancellationToken)">
            <summary>
            Removes the entities from the tag.
            </summary>
            <param name="tagId">The tag identifier.</param>
            <param name="entities">The entities descriptors to remove the tag from.</param>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>A task.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.ITodosController">
            <summary>
            The interface to manipulate todos.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.ITodosController.EmbedAsync(System.String,Trimble.Connect.Client.Models.View,System.Threading.CancellationToken)">
            <summary>
            Embed a view to the todo.
            </summary>
            <param name="todoId">The todo identifier.</param>
            <param name="view">The view to embed.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The view has been embedded.</returns>
            <remarks>A new view is created and embedded into the todo so the view is not visible in the project root level, but only in the todo scope as attachment.</remarks>
        </member>
        <member name="M:Trimble.Connect.Client.ITodosController.EmbedAsync(System.String,Trimble.Connect.Client.Models.View,System.IO.Stream,System.String,System.Threading.CancellationToken)">
            <summary>
            Embed view to the todo.
            </summary>
            <param name="todoId">The todo identifier.</param>
            <param name="view">The view to embed.</param>
            <param name="stream">
            The stream to read the thumbnail content from. 
            The stream is closed automatically when request is completed. 
            Can be null to create view without thumbnail.
            </param>
            <param name="contentType">The thumbnail content type.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The view has been embedded.</returns>
            <remarks>A new view is created and embedded into the todo so the view is not visible in the project root level, but only in the todo scope as attachment.</remarks>
        </member>
        <member name="T:Trimble.Connect.Client.ITrimbleConnectClient">
            <summary>
            The Trimble Connect client interface.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.ITrimbleConnectClient.ServiceUri">
            <summary>
            Gets the URI for the Trimble Connect Service.
            </summary>
            <value>
            The Trimble Connect Service URI.
            </value>
        </member>
        <member name="P:Trimble.Connect.Client.ITrimbleConnectClient.CurrentUser">
            <summary>
            Gets the current authenticated user provided after a successful call to <see cref="M:Trimble.Connect.Client.ITrimbleConnectClient.LoginAsync(System.String,System.Threading.CancellationToken)"/> 
            or <see cref="M:Trimble.Connect.Client.ITrimbleConnectClient.LoginAsync(System.String,System.Threading.CancellationToken)"/>.
            </summary>
            <value>The user.</value>
        </member>
        <member name="P:Trimble.Connect.Client.ITrimbleConnectClient.CredentialsProvider">
            <summary>
            Gets the credentials provider which can provide a Trimble Connect Services authentication token. 
            If available, the authentication token will be included in all requests made to the Trimble Connect Service, 
            allowing the client to perform all actions that require authenticated-user level permissions.
            </summary>
            <value>The credentials provider.</value>
        </member>
        <member name="P:Trimble.Connect.Client.ITrimbleConnectClient.Configuration">
            <summary>
            Gets or sets the collection of regions.
            </summary>
            <value>The collection of regions.</value>
            <remarks>
            Property is initialized automatically on a first service call is left uninitialized.
            Call <see cref="M:Trimble.Connect.Client.ITrimbleConnectClient.ReadConfigurationAsync(System.Threading.CancellationToken)"/> to initialize the property explicitly.
            </remarks>
        </member>
        <member name="P:Trimble.Connect.Client.ITrimbleConnectClient.Companies">
            <summary>
            Gets the companies controller.
            </summary>
            <value>The companies controller.</value>
        </member>
        <member name="P:Trimble.Connect.Client.ITrimbleConnectClient.Apps">
            <summary>
            Gets the apps controller.
            </summary>
            <value>The apps controller.</value>
        </member>
        <member name="M:Trimble.Connect.Client.ITrimbleConnectClient.AddUserAgent(System.String,System.String)">
            <summary>
            Adds the product name and version to be used in the user agent header when making requests.
            </summary>
            <param name="productName">Name of the product to be used in the user agent.</param>
            <param name="version">Version of the product to be used in the user agent.</param>
            <remarks>This method can be called multiple times and allows to add information about different components to the UserAgent header.</remarks>
        </member>
        <member name="M:Trimble.Connect.Client.ITrimbleConnectClient.LoginAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Signs in a Trimble Identity user to the Trimble Connect.
            </summary>
            <param name="idToken">The valid id token issued by Trimble Identity.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The authenticated Trimble Connect user.</returns>
            <remarks>
            This method exchanges the TID id token to the TCPS id-token.
            After this method successfully executed the <see cref="P:Trimble.Connect.Client.ITrimbleConnectClient.CurrentUser" /> property is set and all subsequent calls are made in the context of the user.
            </remarks>
        </member>
        <member name="M:Trimble.Connect.Client.ITrimbleConnectClient.LoginAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Signs in to the Trimble Connect using API key.
            </summary>
            <param name="username">The user name.</param>
            <param name="apiKey">The API key.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The authenticated Trimble Connect user.</returns>
            <remarks>
            The API key is available from the profile page in Trimble Connect.
            After this method successfully executed the <see cref="P:Trimble.Connect.Client.ITrimbleConnectClient.CurrentUser"/> property is set and all subsequent calls are made in the context of the user.
            </remarks>
        </member>
        <member name="M:Trimble.Connect.Client.ITrimbleConnectClient.InitializeTrimbleConnectUserAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Initialize Trimble Connect user using Trimble Identity id token and access token.
            </summary>
            <param name="idToken">The valid id token issued by Trimble Identity.</param>
            <param name="accessToken">The valid access token issued by Trimble Identity.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The authenticated Trimble Connect user.</returns>
            <remarks>
            After this method successfully executed the <see cref="P:Trimble.Connect.Client.ITrimbleConnectClient.CurrentUser" /> property is set and all subsequent calls are made in the context of the user.
            </remarks>
        </member>
        <member name="M:Trimble.Connect.Client.ITrimbleConnectClient.InitializeTrimbleConnectUserAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Initialize Trimble Connect user using Trimble Identity access token.
            </summary>
            <param name="accessToken">The valid access token issued by Trimble Identity.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The authenticated Trimble Connect user.</returns>
            <remarks>
            After this method successfully executed the <see cref="P:Trimble.Connect.Client.ITrimbleConnectClient.CurrentUser" /> property is set and all subsequent calls are made in the context of the user.
            </remarks>
        </member>
        <member name="M:Trimble.Connect.Client.ITrimbleConnectClient.LogoutAsync">
            <summary>
            Log a user out.
            </summary>
            <returns>A task.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.ITrimbleConnectClient.ReadConfigurationAsync(System.Threading.CancellationToken)">
            <summary>
            Query the regions table from the master PoD and initialize a <see cref="P:Trimble.Connect.Client.ITrimbleConnectClient.Configuration"/> property.
            </summary>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The collection of regions returned by server.</returns>
            <remarks>
            Normally application don't need to call this method explicitly because 
            it will be called automatically on the first call to 
            <see cref="M:Trimble.Connect.Client.ITrimbleConnectClient.GetProjectsAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int64},System.Action{System.Collections.Generic.IEnumerable{Trimble.Connect.Client.Models.Project}},System.Func{Trimble.Connect.Client.Models.Region,System.Boolean},System.Threading.CancellationToken)"/>.
            </remarks>
        </member>
        <member name="M:Trimble.Connect.Client.ITrimbleConnectClient.CreateProjectAsync(Trimble.Connect.Client.Models.Project,System.Threading.CancellationToken)">
            <summary>
            Creates a project.
            </summary>
            <param name="project">The project data.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The project information as created from backend.</returns>
            <remarks>
            The <see cref="P:Trimble.Connect.Client.ITrimbleConnectClient.Configuration"/> is automatically initialized (if not yet) 
            with a call to <see cref="M:Trimble.Connect.Client.ITrimbleConnectClient.ReadConfigurationAsync(System.Threading.CancellationToken)"/>.
            For the <paramref name="project"/> only <see cref="P:Trimble.Connect.Client.Models.Project.Location"/> and <see cref="P:Trimble.Connect.Client.Models.Project.Name"/> properties are required to be initialized.
            If <see cref="P:Trimble.Connect.Client.Models.Project.Location"/> is null, the <see cref="P:Trimble.Connect.Client.ITrimbleConnectClient.ServiceUri"/> is used as a project location.
            </remarks>
        </member>
        <member name="M:Trimble.Connect.Client.ITrimbleConnectClient.GetProjectsAsync(System.Boolean,System.Nullable{System.Int64},System.Action{System.Collections.Generic.IEnumerable{Trimble.Connect.Client.Models.Project}},System.Func{Trimble.Connect.Client.Models.Region,System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Get projects current user is member of.
            </summary>
            <param name="fullyLoaded">The parameter decides whether to partially or fully load the projects.</param>
            <remarks>
            Passing fullyLoaded parameter as false will optimize the loading of projects but the loaded projects will miss few fields like information about license.
            </remarks>
            <param name="pageSize">The requested page size when querying each pod. Default is <c>null</c> that means pagination is controlled by server.</param>
            <param name="received">
            The optional callback to call when results are received from the server.
            Note that this callback will be reused for all pages fetched starting from this page (<see cref="M:Trimble.Connect.Client.IQueryResult`1.GetNextPageAsync(System.Threading.CancellationToken)"/>), not only the first page.
            </param>
            <param name="podFilter">The optional pod filter. If provided should return <c>true</c> for the pods that should be queried.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>Collection of projects.</returns>
            <remarks>
            Results from all pods are returned.
            The <see cref="P:Trimble.Connect.Client.ITrimbleConnectClient.Configuration"/> is automatically initialized with call to <see cref="M:Trimble.Connect.Client.ITrimbleConnectClient.ReadConfigurationAsync(System.Threading.CancellationToken)"/> if it was not initialized before.
            The <paramref name="received"/> callback can be used by the application to received the results from the faster pods faster. 
            The <paramref name="received"/> callback is called as soon as results from the specific pod is arrived. 
            When enumerating results from the return value responses from faster pods are delayed until responses from all pods has arrived.
            </remarks>
        </member>
        <member name="M:Trimble.Connect.Client.ITrimbleConnectClient.GetProjectsAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int64},System.Action{System.Collections.Generic.IEnumerable{Trimble.Connect.Client.Models.Project}},System.Func{Trimble.Connect.Client.Models.Region,System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Get projects current user is member of.
            Additional <paramref name="parameters"/> could be sent to through the query string.
            </summary>
            <param name="parameters">
            An optional dictionary of user-defined parameters and values to include in the request URI query string.
            </param>
            <param name="pageSize">The requested page size when querying each pod. Default is <c>null</c> that means pagination is controlled by server.</param>
            <param name="received">
            The optional callback to call when results are received from the server.
            Note that this callback will be reused for all pages fetched starting from this page (<see cref="M:Trimble.Connect.Client.IQueryResult`1.GetNextPageAsync(System.Threading.CancellationToken)"/>), not only the first page.
            </param>
            <param name="podFilter">The optional pod filter. If provided should return <c>true</c> for the pods that should be queried.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>Collection of projects.</returns>
            <remarks>
            Results from all pods are returned.
            The <see cref="P:Trimble.Connect.Client.ITrimbleConnectClient.Configuration"/> is automatically initialized with call to <see cref="M:Trimble.Connect.Client.ITrimbleConnectClient.ReadConfigurationAsync(System.Threading.CancellationToken)"/> if it was not initialized before.
            The <paramref name="received"/> callback can be used by the application to received the results from the faster pods faster. 
            The <paramref name="received"/> callback is called as soon as results from the specific pod is arrived. 
            When enumerating results from the return value responses from faster pods are delayed until responses from all pods has arrived.
            </remarks>
        </member>
        <member name="M:Trimble.Connect.Client.ITrimbleConnectClient.GetProjectClient(System.String,System.Uri)">
            <summary>
            Creates a project client wrapper to access data inside the project.
            </summary>
            <param name="projectId">The project identifier.</param>
            <param name="serviceUri">The service uri.</param>
            <returns>The project client.</returns>
            <remarks>
            For the <paramref name="serviceUri"/> should point to the specific region the project is located.
            </remarks>
        </member>
        <member name="M:Trimble.Connect.Client.ITrimbleConnectClient.DownloadThumbnailAsync(System.String,System.Action{System.Net.Http.Handlers.HttpProgressEventArgs},System.Threading.CancellationToken)">
            <summary>
            Downloads the thumbnail.
            </summary>
            <param name="url">The thumbnail url.</param>
            <param name="progress">The optional progress callback.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The network stream and media type (e.g. 'image/png') tuple.</returns>
            <remarks>This method can be used to download thumbnails for <see cref="T:Trimble.Connect.Client.Models.Project"/>, <see cref="T:Trimble.Connect.Client.Models.View"/> and other entities.</remarks>
        </member>
        <member name="M:Trimble.Connect.Client.ITrimbleConnectClient.RequestAccessAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Request access to the locked project.
            </summary>
            <param name="projectId">The project identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The task.</returns>
            <remarks>API to send email to the business (or project) admin requesting access to the project so the user can access the project.</remarks>
        </member>
        <member name="M:Trimble.Connect.Client.ITrimbleConnectClient.SupportedAssimilationFormatsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Request list of file extensions supported for the assimilation.
            </summary>
            <param name="formatType">The optional parameter to limit the format types (<see cref="T:Trimble.Connect.Client.Models.FileFormatType"/>) returned.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The list of formats.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.ITrimbleConnectClient.SearchAsync(Trimble.Connect.Client.Models.SearchQuery,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Search for the term in projects.
            </summary>
            <param name="query">The search query.</param>
            <param name="parameters">
            An optional dictionary of user-defined parameters and values to include in the request URI query string.
            </param>
            <param name="pageSize">The requested page size when querying each pod. Default is <c>null</c> that means pagination is controlled by server.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>Collection of search results.</returns>
            <remarks>
            Application should expect that results are returned in pages.
            The search query <paramref name="query"/> can be built with convenience <see cref="T:Trimble.Connect.Client.Models.Search"/> helpers.
            </remarks>
            <example>
            This sample shows how to build query, call the <see cref="M:Trimble.Connect.Client.ITrimbleConnectClient.SearchAsync(Trimble.Connect.Client.Models.SearchQuery,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int64},System.Threading.CancellationToken)"/> method and iterate over the all pages.
              <code>
                var query = Search.For{Todo}("column").Between(now.AddDays(-1), now).In(project.Identifier);
                var items = await client.SearchAsync(query, 100);
                while (items.HasMore)
                {
                    items = await items.GetNextPageAsync();
                }
              </code>
            </example>
        </member>
        <member name="M:Trimble.Connect.Client.ITrimbleConnectClient.InvokeApiAsync``2(System.String,``0,System.Net.Http.HttpMethod,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Invokes a TC Service API using the specified HTTP Method.
            Additional data can be sent though the HTTP content or the query string.
            </summary>
            <typeparam name="T">The type of instance sent to the TC Service.</typeparam>
            <typeparam name="U">The type of instance returned from the TC Service.</typeparam>    
            <param name="apiName">The name of the custom API.</param>
            <param name="body">The optional value to be sent as the HTTP body.</param>
            <param name="method">The HTTP method. If null HTTP GET is used when <paramref name="body"/> is null, POST otherwise.</param>
            <param name="parameters">
            An optional dictionary of user-defined parameters and values to include in the request URI query string.
            </param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> token to observe.</param>
            <returns>The response content from the API invocation.</returns>
            <remarks>
            Normally a specialized wrapper should be preferred to communicate with the TC service.
            This method could be used as an extensibility mechanism when some wrapper is missing from the .NET SDK.
            </remarks>
        </member>
        <member name="M:Trimble.Connect.Client.ITrimbleConnectClient.InvokeApiAsync(System.String,System.Net.Http.HttpContent,System.Net.Http.HttpMethod,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Invokes a TC Service API using the specified HttpMethod.
            Additional data can be sent though the HTTP content or the query string. 
            </summary>
            <param name="apiName">The name of the API.</param>
            <param name="content">The optional HTTP content.</param>
            <param name="method">The HTTP method. If null the HTTP GET is used if <paramref name="content"/> is null, POST otherwise.</param>
            <param name="parameters">
            An optional dictionary of user-defined parameters and values to include in the request URI query string.
            </param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> token to observe.</param>
            <returns>The HTTP Response from the API invocation.</returns>
            <remarks>
            Normally a specialized wrapper should be preferred to communicate with the TC service.
            This method could be used as an extensibility mechanism when some wrapper is missing from the .NET SDK.
            </remarks>
        </member>
        <member name="M:Trimble.Connect.Client.ITrimbleConnectClient.RequestApplicationAccessToken(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Request application access token.
            </summary>
            <param name="appId">The application identifier.</param>
            <param name="apiKey">The application api key.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The task.</returns>
            <remarks>API to request application token. The application token is used in downloading pdf file format.</remarks>
        </member>
        <member name="T:Trimble.Connect.Client.IUsersController">
            <summary>
            The users controller interface.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.IUsersController.GetProfileAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the user profile.
            </summary>
            <param name="id">The user identifier.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The user profile.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IUsersController.UpdateAsync(Trimble.Connect.Client.Models.Person,System.Threading.CancellationToken)">
            <summary>
            Updates an user profile.
            </summary>
            <param name="entity">The user profile template.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The user profile.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IUsersController.GetLicensesAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the user licenses.
            </summary>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>Collection of user licenses.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IUsersController.GetTimeZonesAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the time zones supported by Trimble Connect.
            </summary>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>Collection of time zones.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.IViewGroupsController">
            <summary>
            The interface to manipulate view groups.
            </summary>
        </member>
        <member name="T:Trimble.Connect.Client.IViews2DController">
            <summary>
            The interface to manipulate 2D views.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.IViews2DController.CreateAsync(Trimble.Connect.Client.Models.View2D,System.IO.Stream,System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a new view with thumbnail.
            </summary>
            <param name="view">
            The template with view properties. 
            Some of the properties in the template are ignored and assigned by server (timestamps, creator identifier).
            </param>
            <param name="stream">
            The stream to read the thumbnail content from. 
            The stream is closed automatically when request is completed. 
            Can be null to create view without thumbnail.
            </param>
            <param name="contentType">The thumbnail content type.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The information about created view.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IViews2DController.UpdateAsync(Trimble.Connect.Client.Models.View2D,System.IO.Stream,System.String,System.Threading.CancellationToken)">
            <summary>
            Updates a view with thumbnail.
            </summary>
            <param name="view">The new view state.</param>
            <param name="stream">
            The stream to read the thumbnail content from. 
            The stream is closed automatically when request is completed. 
            Can be null to update view without changing thumbnail.
            </param>
            <param name="contentType">The thumbnail content type.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The result view state.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.IViewsController">
            <summary>
            The interface to manipulate views.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.IViewsController.CreateAsync(Trimble.Connect.Client.Models.View,System.IO.Stream,System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a new view with thumbnail.
            </summary>
            <param name="view">
            The template with view properties. 
            Some of the properties in the template are ignored and assigned by server (timestamps, creator identifier).
            </param>
            <param name="stream">
            The stream to read the thumbnail content from. 
            The stream is closed automatically when request is completed. 
            Can be null to create view without thumbnail.
            </param>
            <param name="contentType">The thumbnail content type.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The information about created view.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IViewsController.UpdateAsync(Trimble.Connect.Client.Models.View,System.IO.Stream,System.String,System.Threading.CancellationToken)">
            <summary>
            Updates a view with thumbnail.
            </summary>
            <param name="view">The new view state.</param>
            <param name="stream">
            The stream to read the thumbnail content from. 
            The stream is closed automatically when request is completed. 
            Can be null to update view without changing thumbnail.
            </param>
            <param name="contentType">The thumbnail content type.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The result view state.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IViewsController.UploadThumbnailAsync(System.String,System.IO.Stream,System.String,System.Action{System.Net.Http.Handlers.HttpProgressEventArgs},System.Threading.CancellationToken)">
            <summary>
            Uploads the thumbnail.
            </summary>
            <param name="viewId">The view identifier.</param>
            <param name="stream">The stream to read the thumbnail content from. The stream is closed automatically when request is completed.</param>
            <param name="contentType">The thumbnail content type.</param>
            <param name="progress">The progress callback.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The entity with thumbnail url.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IViewsController.GetCameraAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the <see cref="T:Trimble.Connect.Client.Models.Camera"/> for the given view.
            </summary>
            <param name="viewId">The view identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The camera.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IViewsController.UpdateCameraAsync(System.String,Trimble.Connect.Client.Models.Camera,System.Threading.CancellationToken)">
            <summary>
            Sets the <see cref="T:Trimble.Connect.Client.Models.Camera"/> for the given view.
            </summary>
            <param name="viewId">The view identifier.</param>
            <param name="camera">The camera to set.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The camera.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IViewsController.GetSectionPlanesAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the collection of <see cref="T:Trimble.Connect.Client.Models.SectionPlane"/>s for the given view.
            </summary>
            <param name="viewId">The view identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The collection of <see cref="T:Trimble.Connect.Client.Models.SectionPlane"/>s.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IViewsController.AddSectionPlanesAsync(System.String,System.Collections.Generic.IEnumerable{Trimble.Connect.Client.Models.SectionPlane},System.Threading.CancellationToken)">
            <summary>
            Adds new <see cref="T:Trimble.Connect.Client.Models.SectionPlane"/>s for the given view.
            </summary>
            <param name="viewId">The view identifier.</param>
            <param name="planes">The section planes to update.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The collection of <see cref="T:Trimble.Connect.Client.Models.SectionPlane"/>s.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IViewsController.UpdateSectionPlanesAsync(System.String,System.Collections.Generic.IEnumerable{Trimble.Connect.Client.Models.SectionPlane},System.Threading.CancellationToken)">
            <summary>
            Updates the <see cref="T:Trimble.Connect.Client.Models.SectionPlane"/>s for the given view.
            </summary>
            <param name="viewId">The view identifier.</param>
            <param name="planes">The section planes to update.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The collection of <see cref="T:Trimble.Connect.Client.Models.SectionPlane"/>s.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IViewsController.DeteleSectionPlaneAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes the <see cref="T:Trimble.Connect.Client.Models.SectionPlane"/> in the given view.
            </summary>
            <param name="viewId">The view identifier.</param>
            <param name="sectionPlaneId">The section plane identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The task.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IViewsController.GetMarkupsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the collection of <see cref="T:Trimble.Connect.Client.Models.Markup"/>s for the given view.
            </summary>
            <param name="viewId">The view identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The collection of <see cref="T:Trimble.Connect.Client.Models.Markup"/>s.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IViewsController.AddMarkupsAsync(System.String,System.Collections.Generic.IEnumerable{Trimble.Connect.Client.Models.Markup},System.Threading.CancellationToken)">
            <summary>
            Adds new <see cref="T:Trimble.Connect.Client.Models.Markup"/>s for the given view.
            </summary>
            <param name="viewId">The view identifier.</param>
            <param name="markups">The markups to update.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The collection of <see cref="T:Trimble.Connect.Client.Models.Markup"/>s.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IViewsController.UpdateMarkupsAsync(System.String,System.Collections.Generic.IEnumerable{Trimble.Connect.Client.Models.Markup},System.Threading.CancellationToken)">
            <summary>
            Updates the <see cref="T:Trimble.Connect.Client.Models.Markup"/>s for the given view.
            </summary>
            <param name="viewId">The view identifier.</param>
            <param name="markups">The markups to update.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The collection of <see cref="T:Trimble.Connect.Client.Models.Markup"/>s.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IViewsController.DeteleMarkupAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes the <see cref="T:Trimble.Connect.Client.Models.Markup"/> in the given view.
            </summary>
            <param name="viewId">The view identifier.</param>
            <param name="markupId">The markup identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The task.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IViewsController.GetPresentationAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the <see cref="T:Trimble.Connect.Client.Models.ViewPresentation"/> for the given view.
            </summary>
            <param name="viewId">The view identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The presentation.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.IViewsController.UpdatePresentationAsync(System.String,Trimble.Connect.Client.Models.ViewPresentation,System.Threading.CancellationToken)">
            <summary>
            Sets the <see cref="T:Trimble.Connect.Client.Models.ViewPresentation"/> for the given view.
            </summary>
            <param name="viewId">The view identifier.</param>
            <param name="presentation">The presentation to set.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The presentation.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.LinkQuery">
            <summary>
            Helper class for queries using <see cref="T:Trimble.Connect.Client.ILinksController"/>.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.LinkQuery.EntityRoleParameter">
            <summary>
            Key for parameter containing entity role. Meant for interaction with <see cref="T:Trimble.Connect.Client.LinksController"/>.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.LinkQuery.SourceRole">
            <summary>
            Entity in the link query is link's source entity.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.LinkQuery.TargetRole">
            <summary>
            Entity in the link query is link's target entity.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.LinkQuery.detailed">
            <summary>
            A flag indicating whether to request full object bodies in the response from service.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.LinkQuery.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.LinkQuery"/> class.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.LinkQuery.Entity">
            <summary>
            Gets the query's entity.
            </summary>
            <value>The query's entity.</value>
        </member>
        <member name="P:Trimble.Connect.Client.LinkQuery.IsSourceQuery">
            <summary>
            Gets a value indicating whether the entity is a link source or target.
            </summary>
            <value>A  flag indicating whether the entity is a link source or target.</value>
        </member>
        <member name="P:Trimble.Connect.Client.LinkQuery.IncludesDeleted">
            <summary>
            Gets a value indicating whether to include deleted links in results.
            </summary>
            <value>A flag indicating whether to include deleted links in results.</value>
        </member>
        <member name="P:Trimble.Connect.Client.LinkQuery.IncludeOrphanLinks">
            <summary>
            Gets a value indicating whether to include orphan links in results.
            </summary>
            <value>A flag indicating whether to include orphan links in results.</value>
        </member>
        <member name="P:Trimble.Connect.Client.LinkQuery.ModifiedAfterFilter">
            <summary>
            Gets the modified after timestamp.
            </summary>
            <value>The modified after timestamp.</value>
            <remarks>Optionally include only links modified after this point in time.</remarks>
        </member>
        <member name="M:Trimble.Connect.Client.LinkQuery.WithSource(Trimble.Connect.Client.Models.Attachment)">
            <summary>
            Query will return links which have <paramref name="source"/> as <see cref="P:Trimble.Connect.Client.Models.EntityLink.Source"/>.
            </summary>
            <param name="source">The source entity.</param>
            <returns>The query.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.LinkQuery.WithTarget(Trimble.Connect.Client.Models.Attachment)">
            <summary>
            Query will return links which have <paramref name="target"/> as <see cref="P:Trimble.Connect.Client.Models.EntityLink.Target"/>.
            </summary>
            <param name="target">The target entity.</param>
            <returns>The query.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.LinkQuery.ToDictionary">
            <summary>
            Transforms the query into a collection of parameters.
            </summary>
            <returns>The parameters.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.LinkQuery.IncludeDeleted">
            <summary>
            Query will include deleted links.
            </summary>
            <returns>The query.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.LinkQuery.IncludeOrphans">
            <summary>
            Query will include orphans links.
            </summary>
            <returns>The query.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.LinkQuery.ModifiedAfter(System.DateTimeOffset)">
            <summary>
            Query will return only object which have been modified on or after <paramref name="time"/>.
            </summary>
            <param name="time">The point in time.</param>
            <returns>The query.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.LinkQuery.WithDetails">
            <summary>
            Query will return fully formed <see cref="T:Trimble.Connect.Client.Models.EntityLink"/> objects without potentially missing properties.
            </summary>
            <returns>The query.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.LinkQuery.ValidateEntity(Trimble.Connect.Client.Models.Attachment,System.String)">
            <summary>
            Validates that preconditions for setting the query's entity have been met.
            </summary>
            <param name="entity">The entity.</param>
            <param name="paramName">The name of the parameter with entity in the calling method.</param>
        </member>
        <member name="T:Trimble.Connect.Client.LinksController">
            <summary>
            The controller for entity links. Implements operations for <see cref="T:Trimble.Connect.Client.Models.EntityLink"/> entities.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.LinksController.#ctor(Trimble.Connect.Client.ProjectClient)">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.LinksController"/> class.
            </summary>
            <param name="projectClient">The project client.</param>
        </member>
        <member name="M:Trimble.Connect.Client.LinksController.GetAllAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Returns a collection of all entities.
            Additional <paramref name="parameters"/> could be sent to through the query string.
            </summary>
            <param name="parameters">
            An optional dictionary of user-defined parameters and values to include in the request URI query string.
            </param>
            <param name="pageSize">The page size.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The collection of entities.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.LinksController.CreateAsync(System.Collections.Generic.IEnumerable{Trimble.Connect.Client.Models.EntityLink},System.Threading.CancellationToken)">
            <summary>
            Batch creation of new entities.
            </summary>
            <param name="entities">The collection of templates with entity properties. Some of the properties in the template are ignored and assigned by server (timestamps, creator identifier).</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The information about created entities.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.LinksControllerExtensions">
            <summary>
            Extension methods for the <see cref="T:Trimble.Connect.Client.ILinksController"/> class.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.LinksControllerExtensions.GetAllAsync(Trimble.Connect.Client.ILinksController,Trimble.Connect.Client.LinkQuery,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Returns a collection of all entities.
            </summary>
            <param name="controller">The links controller.</param>
            <param name="query">The links query.</param>
            <param name="pageSize">The page size. default is <c>null</c> that means pagination is controlled by server.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The collection of entities.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.ModelsController">
            <summary>
            Models and BIM objects manipulator inside the TC project.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.ModelsController.FilesRootPath">
            <summary>
            The file API root path.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.ModelsController.BIMRoot">
            <summary>
            The BIM objects API root path.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.ModelsController.#ctor(Trimble.Connect.Client.ProjectClient)">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.ModelsController"/> class.
            </summary>
            <param name="projectClient">The project client.</param>
        </member>
        <member name="P:Trimble.Connect.Client.ModelsController.ProjectClient">
            <summary>
            Gets the URI used as the base for all service requests.
            </summary>
            <value>
            The base service URI.
            </value>
        </member>
        <member name="M:Trimble.Connect.Client.ModelsController.GetModelTreeAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Returns a model tree structure for a given model file.
            </summary>
            <param name="fileId">The file identifier.</param>
            <param name="fileVersionId">The optional file versions identifier.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The collection of comments.</returns>
            <remarks>If fileVersionId is provided then model tree structure is returned for the specific model version,
            otherwise it is returned for the latest model version.</remarks>
        </member>
        <member name="M:Trimble.Connect.Client.ModelsController.GetObjectTypesAsync(System.Threading.CancellationToken)">
            <summary>
            Get a collection of BIM object types supported by the Trimble Connect.
            </summary>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>Supported BIM object type names.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.ModelsController.GetObjectsAsync(Trimble.Connect.Client.Models.ObjectQuery,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Returns the BIM objects which satisfy query conditions as objects.
            </summary>
            <param name="query">The query to execute.</param>
            <param name="pageSize">The page size. default is <c>null</c> that means pagination is controlled by server.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>A query result as a collection of objects.</returns>
            <remarks>There needs to be at least one model specified using either fileIdentifiers or versionIdentifiers.</remarks>
        </member>
        <member name="T:Trimble.Connect.Client.ModelsControllerExtensions">
            <summary>
            Files manipulator inside the TC project.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.ModelsControllerExtensions.GetModelTreeAsync(Trimble.Connect.Client.IModelsController,Trimble.Connect.Client.Models.FolderItem,System.Threading.CancellationToken)">
            <summary>
            Returns a model tree structure for a given model file.
            </summary>
            <param name="controller">The models controller.</param>
            <param name="file">The file.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The model tree structure for the given file.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.PollHelper">
            <summary>
            The polling helper.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.PollHelper.PollUntilAsync``1(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{``0}},System.Predicate{``0},System.Action{``0},System.Threading.CancellationToken)">
            <summary>
            Polls the completion status.
            </summary>
            <param name="poll">The poll action.</param>
            <param name="completed">The completion predicate.</param>
            <param name="progress">The optional progress callback.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <typeparam name="T">The status or entity type to poll.</typeparam>
            <returns>The clash set state.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.ProjectClient">
            <summary>
            Trimble Connect Service Client to work with data inside the project.
            </summary>
            <summary>
            Trimble Connect Service Client to work with data inside the project.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.ProjectClient.ProjectsPath">
            <summary>
            The API path.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.ProjectClient.fileSync">
            <summary>
            The file sync controller.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.ProjectClient.#ctor(System.String,System.String,Trimble.Connect.Client.Common.Http.TrimbleConnectHttpClient)">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.ProjectClient"/> class.
            </summary>
            <param name="projectIdentifier">The project identifier.</param>
            <param name="serviceUri">The URI for the Trimble Connect Service.</param>
            <param name="httpClient">The HTTP client.</param>
        </member>
        <member name="M:Trimble.Connect.Client.ProjectClient.#ctor(System.String,System.Uri,Trimble.Connect.Client.Common.Http.TrimbleConnectHttpClient)">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.ProjectClient"/> class.
            </summary>
            <param name="projectIdentifier">The project identifier.</param>
            <param name="serviceUri">The URI for the Trimble Connect Service.</param>
            <param name="httpClient">The HTTP client.</param>
        </member>
        <member name="P:Trimble.Connect.Client.ProjectClient.ProjectIdentifier">
            <summary>
            Gets the project identifier.
            </summary>
            <value>
            The project identifier.
            </value>
        </member>
        <member name="P:Trimble.Connect.Client.ProjectClient.Members">
            <summary>
            Gets the project members controller.
            </summary>
            <value>The project members controller.</value>
        </member>
        <member name="P:Trimble.Connect.Client.ProjectClient.Todos">
            <summary>
            Gets the todos controller.
            </summary>
            <value>The todos controller.</value>
        </member>
        <member name="P:Trimble.Connect.Client.ProjectClient.Views">
            <summary>
            Gets the views controller.
            </summary>
            <value>The views controller.</value>
        </member>
        <member name="P:Trimble.Connect.Client.ProjectClient.Views2D">
            <summary>
            Gets the 2D views controller.
            </summary>
            <value>The 2D views controller.</value>
        </member>
        <member name="P:Trimble.Connect.Client.ProjectClient.ViewGroups">
            <summary>
            Gets the view groups controller.
            </summary>
            <value>The view groups controller.</value>
        </member>
        <member name="P:Trimble.Connect.Client.ProjectClient.Releases">
            <summary>
            Gets the releases controller.
            </summary>
            <value>The releases controller.</value>
        </member>
        <member name="P:Trimble.Connect.Client.ProjectClient.Files">
            <summary>
            Gets the files controller.
            </summary>
            <value>The files controller.</value>
        </member>
        <member name="P:Trimble.Connect.Client.ProjectClient.Models">
            <summary>
            Gets the models controller.
            </summary>
            <value>The models controller.</value>
        </member>
        <member name="P:Trimble.Connect.Client.ProjectClient.Comments">
            <summary>
            Gets the comments controller.
            </summary>
            <value>The comments controller.</value>
        </member>
        <member name="P:Trimble.Connect.Client.ProjectClient.ClashSets">
            <summary>
            Gets the clash sets controller.
            </summary>
            <value>The clash sets controller.</value>
        </member>
        <member name="P:Trimble.Connect.Client.ProjectClient.Groups">
            <summary>
            Gets the groups controller.
            </summary>
            <value>The groups controller.</value>
        </member>
        <member name="P:Trimble.Connect.Client.ProjectClient.Tags">
            <summary>
            Gets the tags controller.
            </summary>
            <value>The tags controller.</value>
        </member>
        <member name="P:Trimble.Connect.Client.ProjectClient.Links">
            <summary>
            Gets the links controller.
            </summary>
            <value>The links controller.</value>
        </member>
        <member name="P:Trimble.Connect.Client.ProjectClient.Trimble#Connect#Client#IProjectClientWithSync#FileSync">
            <summary>
            Gets the file synchronization controller.
            </summary>
            <value>The file synchronization controller.</value>
        </member>
        <member name="P:Trimble.Connect.Client.ProjectClient.ProjectPath">
            <summary>
            Gets the project resource path.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.ProjectClient.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Refreshes the information about project from the server.
            </summary>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The project information.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.ProjectClient.UpdateAsync(Trimble.Connect.Client.Models.Project,System.Threading.CancellationToken)">
            <summary>
            Updates project information.
            </summary>
            <param name="project">The project information to set.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The information about updated project.</returns>
            <remarks>Following properties are editable: name, description, start date and end date.</remarks>
        </member>
        <member name="M:Trimble.Connect.Client.ProjectClient.VisitAsync(System.DateTimeOffset,System.Threading.CancellationToken)">
            <summary>
            Updates the project's last visited property.
            </summary>
            <param name="time">The last visited timestamp to set.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The information about updated project.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.ProjectClient.DeleteAsync(System.Threading.CancellationToken)">
            <summary>
            Deletes the project.
            </summary>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The task.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.ProjectClient.UploadThumbnailAsync(System.IO.Stream,System.String,System.Action{System.Net.Http.Handlers.HttpProgressEventArgs},System.Threading.CancellationToken)">
            <summary>
            Uploads the thumbnail.
            </summary>
            <param name="stream">The stream to read the thumbnail content from. The stream is closed automatically when request is completed.</param>
            <param name="contentType">The content type.</param>
            <param name="progress">The progress callback.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The project entity with thumbnail url.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.ProjectClient.GetSettingsAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Retrieves the project specific settings.
            </summary>
            <param name="parameters">
            A an optional dictionary of user-defined parameters and values to include in the request URI query string.
            </param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The settings.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.ProjectClient.UpdateSettingsAsync(Trimble.Connect.Client.Models.ProjectSettings,System.Threading.CancellationToken)">
            <summary>
            Updates the project's settings.
            </summary>
            <param name="settings">The project settings.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>A task.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.ProjectClient.BuildJObject(Trimble.Connect.Client.Models.Project)">
            <summary>
            Creates a JObject from a project.
            </summary>
            <param name="project">The project.</param>
            <returns>The JObject containing relevant subset of data.</returns>
        </member>
        <member name="F:Trimble.Connect.Client.ProjectClient.HeartbeatsPath">
            <summary>
            The API path.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.ProjectClient.DeltaQueryPath">
            <summary>
            The API path.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.ProjectClient.heartbeatPath">
            <summary>
            The project heartbeat path.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.ProjectClient.deltaPath">
            <summary>
            The project delta query path.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.ProjectClient.GetHeartbeatAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the information about project's heartbeat from the server.
            </summary>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The project heartbeat information.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.ProjectClient.Trimble#Connect#Client#IProjectClientWithSync#GetChangesAsync(Trimble.Connect.Client.Models.Heartbeat,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <inheritdoc /> 
        </member>
        <member name="M:Trimble.Connect.Client.ProjectClient.Trimble#Connect#Client#IProjectClientWithSync#GetChangesAsync(Trimble.Connect.Client.Models.Heartbeat,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc /> 
        </member>
        <member name="M:Trimble.Connect.Client.ProjectClient.Trimble#Connect#Client#IProjectClientWithSync#GetChangesAsync(Trimble.Connect.Client.Models.Heartbeat,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc /> 
        </member>
        <member name="T:Trimble.Connect.Client.ProjectEntityController`1">
            <summary>
            The controller to manipulate entities that belong to the project.
            </summary>
            <typeparam name="T">The entity type.</typeparam>
        </member>
        <member name="M:Trimble.Connect.Client.ProjectEntityController`1.#ctor(Trimble.Connect.Client.ProjectClient,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.ProjectEntityController`1"/> class.
            </summary>
            <param name="client">The client.</param>
            <param name="rootPath">The API root path.</param>
        </member>
        <member name="P:Trimble.Connect.Client.ProjectEntityController`1.Client">
            <summary>
            Gets the project client.
            </summary>
            <value>The project client.</value>
        </member>
        <member name="M:Trimble.Connect.Client.ProjectEntityController`1.GetAllAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Returns a collection of all entities.
            Additional <paramref name="parameters"/> could be sent to through the query string.
            </summary>
            <param name="parameters">
            An optional dictionary of user-defined parameters and values to include in the request URI query string.
            </param>
            <param name="pageSize">The page size.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The collection of entities.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.ProjectEntityController`1.GetCreateRequestBody(`0)">
            <summary>
            Converts the object template to JSON body to send as an create request.
            </summary>
            <param name="entity">The entity.</param>
            <returns>The JSON body.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.ProjectEntityController`1.GetUpdateRequestBody(`0)">
            <summary>
            Converts the object template to JSON body to send as an update request.
            </summary>
            <param name="entity">The entity.</param>
            <returns>The JSON body.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.ProjectMembersController">
            <summary>
            Project members controller.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.ProjectMembersController.#ctor(Trimble.Connect.Client.ProjectClient)">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.ProjectMembersController"/> class.
            </summary>
            <param name="projectClient">The project client.</param>
        </member>
        <member name="P:Trimble.Connect.Client.ProjectMembersController.ProjectClient">
            <summary>
            Gets the URI used as the base for all service requests.
            </summary>
            <value>
            The base service URI.
            </value>
        </member>
        <member name="M:Trimble.Connect.Client.ProjectMembersController.GetAllAsync(System.Threading.CancellationToken)">
            <summary>
            Returns a collection of all project members in the project.
            </summary>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The collection of project members.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.ProjectMembersController.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get user information in project.
            </summary>
            <param name="userId">The user identifier.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>A person.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.ProjectMembersController.AddAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Adds a user to the project.
            </summary>
            <param name="email">The user's email.</param>
            <param name="role">The user's role.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The added person.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.ProjectMembersController.SetRoleAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Set a role for the project member.
            </summary>
            <param name="userId">The user identifier.</param>
            <param name="role">The user's role.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>A person.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.ProjectMembersController.RemoveAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a user from the project.
            </summary>
            <param name="userId">The user identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A task.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.ProjectMembersController.GetAllRolesAsync(System.Threading.CancellationToken)">
            <summary>
            Returns a collection of all user groups in the project.
            </summary>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The collection of groups.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.ProjectQueryResult">
            <summary>
            The project query result implementation.
            Manages the aggregation of the results from all known pods.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.ProjectQueryResult.regionPositions">
            <summary>
            The current position of project iterator.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.ProjectQueryResult.regionLengths">
            <summary>
            The maximum acceptable range for regions project collection.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.ProjectQueryResult.received">
            <summary>
            The callback to call when response from server received.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.ProjectQueryResult.uri">
            <summary>
            The uri to query from.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.ProjectQueryResult.#ctor(Trimble.Connect.Client.TrimbleConnectClient,System.Nullable{System.Int64},System.Collections.Generic.IDictionary{System.String,System.String},System.Action{System.Collections.Generic.IEnumerable{Trimble.Connect.Client.Models.Project}},System.Func{Trimble.Connect.Client.Models.Region,System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.ProjectQueryResult"/> class.
            </summary>
            <param name="client">The TC client.</param>
            <param name="pageSize">The size of range to request from pod.</param>
            <param name="parameters">An optional dictionary of user-defined parameters and values to include in the request URI query string.</param>
            <param name="received">The optional callback to call when results are received from the server.</param>
            <param name="podFilter">The optional pod filter. If provided should return <c>true</c> for the pods that should be queried.</param>
            <remarks>The client must initialize <see cref="P:Trimble.Connect.Client.TrimbleConnectClient.Configuration"/>.</remarks>
        </member>
        <member name="M:Trimble.Connect.Client.ProjectQueryResult.#ctor(Trimble.Connect.Client.ProjectQueryResult)">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.ProjectQueryResult"/> class.
            </summary>
            <param name="prevPage">The previous page.</param>
        </member>
        <member name="M:Trimble.Connect.Client.ProjectQueryResult.GetNextPageAsync(System.Threading.CancellationToken)">
            <summary>
            Fetches a next page of results.
            </summary>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The task.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.ProjectQueryResult.CreateAsync(Trimble.Connect.Client.TrimbleConnectClient,System.Nullable{System.Int64},System.Collections.Generic.IDictionary{System.String,System.String},System.Action{System.Collections.Generic.IEnumerable{Trimble.Connect.Client.Models.Project}},System.Func{Trimble.Connect.Client.Models.Region,System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Fetches a first page of results from server.
            </summary>
            <param name="client">The TC client.</param>
            <param name="pageSize">The size of range to request from pod.</param>
            <param name="parameters">An optional dictionary of user-defined parameters and values to include in the request URI query string.</param>
            <param name="received">The optional callback to call when results are received from the server.</param>
            <param name="podFilter">The optional pod filter. If provided should return <c>true</c> for the pods that should be queried.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The task.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.ProjectQueryResult.GetPageAsync(Trimble.Connect.Client.ProjectQueryResult,System.Threading.CancellationToken)">
            <summary>
            Fetches a page of items from server.
            </summary>
            <param name="page">The page to fetch.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The task.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.ProjectSettingsFilter">
            <summary>
            Filter options for <see cref="M:Trimble.Connect.Client.IProjectClient.GetSettingsAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)"/>.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.ProjectSettingsFilter.Sync">
            <summary>
            Return only sync settings.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.ProjectSettingsFilter.Notifications">
            <summary>
            Return only notification settings.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.ProjectSettingsFilter.Unit">
            <summary>
            Return only unit settings.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.ProjectSettingsFilter.Create(System.String)">
            <summary>
            Creates a parameters collection with desired filter.
            </summary>
            <param name="filter">The filter value.</param>
            <returns>The query parameters collection.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.QueryResult`1">
            <summary>
            The generic query result template.
            </summary>
            <typeparam name="T">The entity type.</typeparam>
        </member>
        <member name="F:Trimble.Connect.Client.QueryResult`1.Client">
            <summary>
            The the client.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.QueryResult`1.User">
            <summary>
            The the current user.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.QueryResult`1.#ctor(Trimble.Connect.Client.Common.Http.TrimbleConnectHttpClient,Trimble.Connect.Client.TrimbleConnectUser,System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.QueryResult`1"/> class.
            </summary>
            <param name="client">The TC client.</param>
            <param name="user">The TC user.</param>
            <param name="pageSize">The size of range to request.</param>
        </member>
        <member name="M:Trimble.Connect.Client.QueryResult`1.#ctor(Trimble.Connect.Client.QueryResult{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.QueryResult`1"/> class.
            </summary>
            <param name="prevPage">The previous page.</param>
        </member>
        <member name="P:Trimble.Connect.Client.QueryResult`1.HasMore">
            <summary>
            Gets a value indicating whether there are more pages to fetch.
            </summary>
            <value>The flag if there are more pages to fetch.</value>
        </member>
        <member name="P:Trimble.Connect.Client.QueryResult`1.TotalLength">
            <summary>
            Gets a total number of items in all pages if available.
            </summary>
            <remarks>Total length is not supported for <see cref="F:Trimble.Connect.Client.Models.EntityType.FsObject"/>.</remarks>
            <value>The total length.</value>
        </member>
        <member name="P:Trimble.Connect.Client.QueryResult`1.PageSize">
            <summary>
            Gets or sets the page size.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.QueryResult`1.Position">
            <summary>
            Gets or sets the current position.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.QueryResult`1.Items">
            <summary>
            Gets or sets the query result.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.QueryResult`1.GetNextPageAsync(System.Threading.CancellationToken)">
            <summary>
            Fetches a next page of results.
            </summary>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The task.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.QueryResult`1.GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.QueryResult`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.QueryResultExtensions">
            <summary>
            The extension method for <see cref="T:Trimble.Connect.Client.IQueryResult`1"/>
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.QueryResultExtensions.ReceiveAll``1(Trimble.Connect.Client.IQueryResult{``0},System.Action{System.Collections.Generic.IEnumerable{``0}},System.Threading.CancellationToken)">
            <summary>
            Iterates over entire query result calling receiving delegate for each page returned.
            </summary>
            <typeparam name="T">The type of the query result.</typeparam>
            <param name="queryResult">The query result.</param>
            <param name="receive">The receiving delegate.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.QueryResultExtensions.ReceiveAllAsync``1(Trimble.Connect.Client.IQueryResult{``0},System.Action{System.Collections.Generic.IEnumerable{``0}},System.Threading.CancellationToken)">
            <summary>
            Iterates over entire query result calling receiving delegate for each page returned.
            </summary>
            <typeparam name="T">The type of the query result.</typeparam>
            <param name="queryResult">The query result.</param>
            <param name="receive">The receiving delegate.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.QueryResultExtensions.ReceiveAll``1(System.Threading.Tasks.Task{Trimble.Connect.Client.IQueryResult{``0}},System.Action{System.Collections.Generic.IEnumerable{``0}},System.Threading.CancellationToken)">
            <summary>
            Iterates over entire query result calling receiving delegate for each page returned.
            </summary>
            <typeparam name="T">The type of the query result.</typeparam>
            <param name="query">The query function.</param>
            <param name="receive">The receiving delegate.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.QueryResultExtensions.ReceiveAllAsync``1(System.Threading.Tasks.Task{Trimble.Connect.Client.IQueryResult{``0}},System.Action{System.Collections.Generic.IEnumerable{``0}},System.Threading.CancellationToken)">
            <summary>
            Iterates over entire query result calling receiving delegate for each page returned.
            </summary>
            <typeparam name="T">The type of the query result.</typeparam>
            <param name="query">The query function.</param>
            <param name="receive">The receiving delegate.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.ReleasesController">
            <summary>
            The controller for releases. Implements operations for <see cref="T:Trimble.Connect.Client.Models.Release"/> entities.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.ReleasesController.#ctor(Trimble.Connect.Client.ProjectClient)">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.ReleasesController"/> class.
            </summary>
            <param name="projectClient">The project client.</param>
        </member>
        <member name="M:Trimble.Connect.Client.ReleasesController.GetAllWithStatusAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Returns all releases created by current user with specified status in the project.
            </summary>
            <param name="status">The release status (<see cref="T:Trimble.Connect.Client.Models.ReleaseStatus"/>).</param>
            <param name="pageSize">The page size.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The collection of releases.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.ReleasesController.GetFilesAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns all files attached to the specified release.
            </summary>
            <param name="releaseId">The release identifier.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The collection of file information.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.ReleasesController.AddFilesAsync(System.String,System.Collections.Generic.IEnumerable{Trimble.Connect.Client.Models.Attachment},System.Threading.CancellationToken)">
            <summary>
            Attaches files to a release.
            </summary>
            <param name="releaseId">The release identifier.</param>
            <param name="files">The files to add.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The collection of file information.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.ReleasesController.RemoveFilesAsync(System.String,System.Collections.Generic.IEnumerable{Trimble.Connect.Client.Models.Attachment},System.Threading.CancellationToken)">
            <summary>
            Removes files from a release.
            </summary>
            <param name="releaseId">The release identifier.</param>
            <param name="files">The files to remove.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The task.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.ReleasesController.SendReleaseAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Sends the release to recipients.
            </summary>
            <param name="releaseId">The identifier of the release to send.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The sent release.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.ReleasesController.CreateAttachmentsContent(System.Collections.Generic.IEnumerable{Trimble.Connect.Client.Models.Attachment})">
            <summary>
            Creates a request body with list of attachments.
            </summary>
            <param name="attachments">The collection of attachments.</param>
            <returns>The message content.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.ReleasesController.MakeAttachmentRequestAsync(System.Net.Http.HttpMethod,System.String,System.Collections.Generic.IEnumerable{Trimble.Connect.Client.Models.Attachment},System.Threading.CancellationToken)">
            <summary>
            Sends the request containing release attachments.
            </summary>
            <param name="method">The http method to use.</param>
            <param name="releaseId">The release identifier.</param>
            <param name="files">A collection of attachments.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The response received.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.ReleasesController.AttachmentHeader">
            <summary>
            Class containing minimal information required for handling release attachments.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.ReleasesController.AttachmentHeader.#ctor(Trimble.Connect.Client.Models.Attachment)">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.ReleasesController.AttachmentHeader"/> class.
            </summary>
            <param name="attachment">The attachment.</param>
        </member>
        <member name="P:Trimble.Connect.Client.ReleasesController.AttachmentHeader.Identifier">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="P:Trimble.Connect.Client.ReleasesController.AttachmentHeader.Type">
            <summary>
            Gets or sets the attached entity type.
            </summary>
            <value>The entity type.</value>
        </member>
        <member name="T:Trimble.Connect.Client.ReleasesControllerExtensions">
            <summary>
            The extensions of interface to manipulate releases.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.ReleasesControllerExtensions.GetFilesAsync(Trimble.Connect.Client.IReleasesController,Trimble.Connect.Client.Models.Release,System.Threading.CancellationToken)">
            <summary>
            Returns all files attached to the specified release.
            </summary>
            <param name="controller">The releases manipulator.</param>
            <param name="release">The release.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The collection of file information.</returns>
            <remarks>For entities returned only basic properties are populated.</remarks>
        </member>
        <member name="M:Trimble.Connect.Client.ReleasesControllerExtensions.AddFilesAsync(Trimble.Connect.Client.IReleasesController,System.String,Trimble.Connect.Client.Models.Attachment,System.Threading.CancellationToken)">
            <summary>
            Attaches a single file to a release.
            </summary>
            <param name="controller">The releases manipulator.</param>
            <param name="releaseId">The release identifier.</param>
            <param name="file">The file to add.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The collection of file information.</returns>
            <remarks>For entities returned only basic properties are populated.</remarks>
        </member>
        <member name="M:Trimble.Connect.Client.ReleasesControllerExtensions.RemoveFilesAsync(Trimble.Connect.Client.IReleasesController,System.String,Trimble.Connect.Client.Models.Attachment,System.Threading.CancellationToken)">
            <summary>
            Removes a single file from a release.
            </summary>
            <param name="controller">The releases manipulator.</param>
            <param name="releaseId">The release identifier.</param>
            <param name="file">The file to add.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The collection of file information.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.ReleasesControllerExtensions.SendReleaseAsync(Trimble.Connect.Client.IReleasesController,Trimble.Connect.Client.Models.Release,System.Threading.CancellationToken)">
            <summary>
            Sends the release to recipients.
            </summary>
            <param name="controller">The releases manipulator.</param>
            <param name="release">The release to send.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The sent release.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.Resources">
            <summary>
            Resource strings.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Resources.EnumUtilsCannotConvertToEnumValue">
            <summary>
            The error message when string cannot be converted to enumerable value.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Resources.HttpMessageHandlerExtensionsWrongHandlerType">
            <summary>
            The wrong handler type is provided.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Resources.JavaDateTimeConverterCannotConvertNullValue">
            <summary>
            The null value is provided to the converter.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Resources.JavaDateTimeConverterNotATime">
            <summary>
            The error message when value provided to converter is not a time.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Resources.JavaDateTimeConverterUnexpectedToken">
            <summary>
            The error message for not expected JSON token.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Resources.DtoEnumConverterUnexpectedToken">
            <summary>
            The error message for not expected JSON token.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Resources.TrimbleConnectClientCannotFindRegion">
            <summary>
            The error message when region (POD) configuration cannot be retrieved.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Resources.TrimbleConnectClientProjectLocationRequired">
            <summary>
            The error message for not initialized location property.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.Resources.TrimbleConnectClientProjectNameRequired">
            <summary>
            The error message for not initialized name property.
            </summary>
        </member>
        <member name="T:Trimble.Connect.Client.ResponseErrorCode">
            <summary>
            The response error codes.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.ResponseErrorCode.Unknown">
            <summary>
            The error is unknown.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.ResponseErrorCode.TidTokenExpired">
            <summary>
            The TID token is expired.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.ResponseErrorCode.TidTokenInvalid">
            <summary>
            The TID token is invalid.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.ResponseErrorCode.ApiTokenGenerationError">
            <summary>
            The API token generation error.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.ResponseErrorCode.UserNotFound">
            <summary>
            The user is not found.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.ResponseErrorCode.UserNotInProject">
            <summary>
            The user is not member of the project.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.ResponseErrorCode.ApiKeyInvalid">
            <summary>
            The API key is invalid.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.ResponseErrorCode.EcomEntitlementDataFailed">
            <summary>
            The backend EMS (Entitlement Services) APIs are not available.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.ResponseErrorCode.BadRequest">
            <summary>
            The bad request.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.ResponseErrorCode.InvalidAccessToken">
            <summary>
            The TCPS access token is invalid.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.ResponseErrorCode.InvalidSession">
            <summary>
            The authorization header is not provided.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.ResponseErrorCode.AccessTokenExpired">
            <summary>
            Access token expired.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.ResponseErrorCode.NoContent">
            <summary>
            The server does not provide the content in the response.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.ResponseErrorCode.InternalError">
            <summary>
            General internal server error.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.ResponseErrorCode.InvalidOperation">
            <summary>
            The HTTP operation is invalid on given endpoint.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.ResponseErrorCode.ProjectDeleted">
            <summary>
            The project has been deleted.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.ResponseErrorCode.FileAlreadyCheckedOut">
            <summary>
            The file is already has been checked out.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.ResponseErrorCode.FileAlreadyCheckedOutByAnotherUser">
            <summary>
            The file is already checked out by another user.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.ResponseErrorCode.FileNotCheckedOut">
            <summary>
            The file is not checked out.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.ResponseErrorCode.FileAlreadyDeleted">
            <summary>
            The file is deleted already.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.ResponseErrorCode.ConflictOldRevision">
            <summary>
            If versionId specified is not latest versionId.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.ResponseErrorCode.ObjectNotFound">
            <summary>
            If object of “objectType” specified in request is not found.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.ResponseErrorCode.ObjectNotInProject">
            <summary>
            If object of “objectType” specified in request does not belong to specified project.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.ResponseErrorCode.InvalidObjectType">
            <summary>
            The object type specified in request is not valid.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.ResponseErrorCode.UnsupportedType">
            <summary>
            If “objectType” is not supported.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.ResponseErrorCode.UserWarning">
            <summary>
            The request has generated a user warning that prevents to complete the operation.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.ResponseErrorCode.FileHasAssociation">
            <summary>
            The operation with file cannot be performed because the file has association.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.ResponseErrorCode.MissingRequiredParameter">
            <summary>
            The required parameter is missed.
            </summary>
            <remarks>This error code is returned if you try to create view without giving projectId as url parameter.</remarks>
        </member>
        <member name="F:Trimble.Connect.Client.ResponseErrorCode.InvalidArguments">
            <summary>
            The request has invalid data.
            </summary>
            <remarks>This error code is returned if e.g. models collection is empty in the view.</remarks>
        </member>
        <member name="F:Trimble.Connect.Client.ResponseErrorCode.InvalidParameters">
            <summary>
            The request has invalid data.
            </summary>
            <remarks>This error code is returned if e.g. model identifier is not valid in the view or clash set.</remarks>
        </member>
        <member name="F:Trimble.Connect.Client.ResponseErrorCode.InvalidFileId">
            <summary>
            The request refers to invalid file identifier.
            </summary>
            <remarks>This error code is returned if e.g. model identifier is not valid in the view or clash set.</remarks>
        </member>
        <member name="F:Trimble.Connect.Client.ResponseErrorCode.ViewNotFound">
            <summary>
            The requested view is not found.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.ResponseErrorCode.ViewGroupNotFound">
            <summary>
            The requested view group is not found.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.ResponseErrorCode.AlignmentNotFound">
            <summary>
            The operation tries to edit alignment that does not exists.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.ResponseErrorCode.ClashNotFound">
            <summary>
            The clash not found.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.ResponseErrorCode.ClashNotReady">
            <summary>
            The clash set execution is not completed.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.ResponseErrorCode.PermissionNotFound">
            <summary>
            The operation tries to edit permission that does not exists.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.ResponseErrorCode.TodoAlreadyDeleted">
            <summary>
            The todo has been already deleted.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.ResponseErrorCode.OperationOnDeletedObject">
            <summary>
            The invalid operation on deleted object.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.ResponseErrorCode.CommentAlreadyDeleted">
            <summary>
            The comment has been already deleted.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.ResponseErrorCode.ViewAlreadyDeleted">
            <summary>
            The view has been already deleted.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.ResponseErrorCode.ViewGroupAlreadyDeleted">
            <summary>
            The view group has been already deleted.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.ResponseErrorCode.ClashAlreadyDeleted">
            <summary>
            The clash has been already deleted.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.ResponseErrorCode.FileNotReady">
            <summary>
            The assimilation process is not finished for requested format.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.ResponseErrorCode.InvalidExtensionImage">
            <summary>
            The not supported image.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.ResponseErrorCode.InvalidEndpoint">
            <summary>
            Invalid endpoint.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.ResponseErrorCode.InvalidName">
            <summary>
            The given file name is not acceptable. E.g. file extension cannot be changed.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.ResponseErrorCode.InvalidParent">
            <summary>
            The given parent is not acceptable.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.ResponseErrorCode.DuplicateName">
            <summary>
            The file or folder with same name already exists.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.ResponseErrorCode.NoFilesInRelease">
            <summary>
            No files attached to release.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.ResponseErrorCode.PermissionDenied">
            <summary>
            Permission denied.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.ResponseErrorCode.LicenseCheckFailed">
            <summary>
            The license check failed.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.ResponseErrorCode.ComplianceCheckNotCompleted">
            <summary>
            Compliance check not completed for new users.
            </summary>
        </member>
        <member name="T:Trimble.Connect.Client.RetryHandler">
            <summary>
            The handler that allows to retry requests.
            </summary>
        </member>
        <member name="P:Trimble.Connect.Client.RetryHandler.OnFailed">
            <summary>
            Gets or sets the function called when request failed.
            </summary>
            <value>The value indicating whether the request should be retried.</value>
        </member>
        <member name="M:Trimble.Connect.Client.RetryHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>
            Tries to send the request and if unsuccessful because of 401-Unauthorized tries to refresh the access token,
            retries the request and uses callback to set the new access token to the client.
            </summary>
            <param name="request">The request.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The web response.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.TagsController">
            <summary>
            The controller for tags. Implements operations for <see cref="T:Trimble.Connect.Client.Models.Tag"/> entities.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.TagsController.EntitiesPath">
            <summary>
            The path fragment for tagged entities.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.TagsController.#ctor(Trimble.Connect.Client.ProjectClient)">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.TagsController"/> class.
            </summary>
            <param name="projectClient">The project client.</param>
        </member>
        <member name="M:Trimble.Connect.Client.TagsController.GetEntitiesAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of entities tagged with the specified tag.
            </summary>
            <param name="tagId">The tag identifier.</param>
            <param name="pageSize">The page size.</param>
            <param name="cancellationToken">An optional cancellation token.</param>
            <returns>The tagged entities.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.TagsController.AddEntitiesAsync(System.String,System.Collections.Generic.IEnumerable{Trimble.Connect.Client.Models.Attachment},System.Threading.CancellationToken)">
            <summary>
            Adds the entities to the tag.
            </summary>
            <param name="tagId">The tag identifier.</param>
            <param name="entities">The entities.</param>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>The tagged entities.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.TagsController.RemoveEntitiesAsync(System.String,System.Collections.Generic.IEnumerable{Trimble.Connect.Client.Models.Attachment},System.Threading.CancellationToken)">
            <summary>
            Removes the entities from the tag.
            </summary>
            <param name="tagId">The tag identifier.</param>
            <param name="entities">The entities.</param>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>The tagged entities.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.TagsController.CreateEntitiesContent(System.Collections.Generic.IEnumerable{Trimble.Connect.Client.Models.Attachment})">
            <summary>
            Creates a request body with list of typed identities.
            </summary>
            <param name="entities">The collection of typed identities.</param>
            <returns>The entities content.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.TagsControllerExtensions">
            <summary>
            The extensions class for <see cref="T:Trimble.Connect.Client.ITagsController"/>.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.TagsControllerExtensions.AddEntitiesAsync(Trimble.Connect.Client.ITagsController,System.String,Trimble.Connect.Client.Models.Attachment,System.Threading.CancellationToken)">
            <summary>
            Adds the entity to the tag.
            </summary>
            <param name="controller">The tags controller.</param>
            <param name="tagId">The tag identifier.</param>
            <param name="entity">The descriptor of entity to add.</param>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>The tagged entity.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.TagsControllerExtensions.AddEntitiesAsync(Trimble.Connect.Client.ITagsController,System.String,Trimble.Connect.Client.Models.Entity,System.Threading.CancellationToken)">
            <summary>
            Adds the entity to the tag.
            </summary>
            <param name="controller">The tags controller.</param>
            <param name="tagId">The tag identifier.</param>
            <param name="entity">The entity to add.</param>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>The tagged entity.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.TagsControllerExtensions.AddEntitiesAsync(Trimble.Connect.Client.ITagsController,System.String,System.Collections.Generic.IEnumerable{Trimble.Connect.Client.Models.Entity},System.Threading.CancellationToken)">
            <summary>
            Adds the entities to the tag.
            </summary>
            <param name="controller">The tags controller.</param>
            <param name="tagId">The tag identifier.</param>
            <param name="entities">The entities to add.</param>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>The tagged entities.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.TagsControllerExtensions.RemoveEntitiesAsync(Trimble.Connect.Client.ITagsController,System.String,Trimble.Connect.Client.Models.Attachment,System.Threading.CancellationToken)">
            <summary>
            Removes the entity from the tag.
            </summary>
            <param name="controller">The tags controller.</param>
            <param name="tagId">The tag identifier.</param>
            <param name="entity">The descriptor of the entity to remove.</param>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>The tagged entities.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.TagsControllerExtensions.RemoveEntitiesAsync(Trimble.Connect.Client.ITagsController,System.String,Trimble.Connect.Client.Models.Entity,System.Threading.CancellationToken)">
            <summary>
            Removes the entity from the tag.
            </summary>
            <param name="controller">The tags controller.</param>
            <param name="tagId">The tag identifier.</param>
            <param name="entity">The entity to remove.</param>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>The tagged entities.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.TagsControllerExtensions.RemoveEntitiesAsync(Trimble.Connect.Client.ITagsController,System.String,System.Collections.Generic.IEnumerable{Trimble.Connect.Client.Models.Entity},System.Threading.CancellationToken)">
            <summary>
            Removes the entity from the tag.
            </summary>
            <param name="controller">The tags controller.</param>
            <param name="tagId">The tag identifier.</param>
            <param name="entities">The entity to remove.</param>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>The tagged entities.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.Threading.Tasks">
            <summary>
            Tasks constants and utils.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.Threading.Tasks.ParallelForEachAsync``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Func{``0,System.Threading.Tasks.Task})">
            <summary>
            Execute tasks with specific degree of parallelism.
            Based on code from <see href="https://blogs.msdn.microsoft.com/pfxteam/2012/03/05/implementing-a-simple-foreachasync-part-2/"/>.
            </summary>
            <typeparam name="T">The type.</typeparam>
            <param name="source">The source collection.</param>
            <param name="maxDegreeOfConcurrency">The degree of parallelism.</param>
            <param name="action">The action to execute.</param>
            <returns>The task.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.Threading.Tasks.ExecuteWithRetries``1(System.Func{System.Threading.Tasks.Task{``0}},System.Int32,System.Action{System.Exception})">
            <summary>
            Executes an action with specified number of retries in case of errors.
            Typically used for network operations.
            </summary>
            <param name="action">The action to execute.</param>
            <param name="tries">The maximum number of retry attempts. If 1 or less only one attempt is made.</param>
            <param name="beforeRetry">The optional action to execute on error before retrying.</param>
            <typeparam name="T">The action return type.</typeparam>
            <returns>The task result.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.Threading.Tasks.ExecuteWithRetries(System.Func{System.Threading.Tasks.Task},System.Int32,System.Action{System.Exception})">
            <summary>
            Executes an action with specified number of retries in case of errors.
            Typically used for network operations.
            </summary>
            <param name="action">The action to execute.</param>
            <param name="tries">The maximum number of retry attempts. If 1 or less only one attempt is made.</param>
            <param name="beforeRetry">The optional action to execute on error before retrying.</param>
            <returns>The task.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.TodosController">
            <summary>
            The controller for todos. Implements operations for <see cref="T:Trimble.Connect.Client.Models.Todo"/> entities.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.TodosController.FieldNameTodoId">
            <summary>
            The field name.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.TodosController.#ctor(Trimble.Connect.Client.ProjectClient)">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.TodosController"/> class.
            </summary>
            <param name="projectClient">The project client.</param>
        </member>
        <member name="M:Trimble.Connect.Client.TodosController.GetAttachmentsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the todo attachments.
            </summary>
            <param name="identifier">The todo identifier.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The collection of attachments.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.TodosController.AddAttachmentsAsync(System.String,System.Collections.Generic.IEnumerable{Trimble.Connect.Client.Models.Attachment},System.Threading.CancellationToken)">
            <summary>
            Add attachments to the todo.
            </summary>
            <param name="identifier">The todo identifier.</param>
            <param name="attachments">The collection of entities to attach.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The collection of entities have been attached.</returns>
            <remarks>
            If some attachments in the <paramref name="attachments"/> are not valid they are ignored and call is succeeded returning only entities that were attached successfully.
            </remarks>
        </member>
        <member name="M:Trimble.Connect.Client.TodosController.EmbedAsync(System.String,Trimble.Connect.Client.Models.View,System.Threading.CancellationToken)">
            <summary>
            Embed view to the todo.
            </summary>
            <param name="todoId">The todo identifier.</param>
            <param name="view">The view to embed.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The view has been embedded.</returns>
            <remarks>A new view is created and embedded into the todo so the view is not visible in the project root level, but only in the todo scope as attachment.</remarks>
        </member>
        <member name="M:Trimble.Connect.Client.TodosController.EmbedAsync(System.String,Trimble.Connect.Client.Models.View,System.IO.Stream,System.String,System.Threading.CancellationToken)">
            <summary>
            Embed view to the todo.
            </summary>
            <param name="todoId">The todo identifier.</param>
            <param name="view">The view to embed.</param>
            <param name="stream">
            The stream to read the thumbnail content from. 
            The stream is closed automatically when request is completed. 
            Can be null to create view without thumbnail.
            </param>
            <param name="contentType">The thumbnail content type.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The view has been embedded.</returns>
            <remarks>A new view is created and embedded into the todo so the view is not visible in the project root level, but only in the todo scope as attachment.</remarks>
        </member>
        <member name="M:Trimble.Connect.Client.TodosController.EmbedAsync``1(System.String,``0,System.Threading.CancellationToken)">
            <summary>
            Embed an entity to the todo.
            </summary>
            <param name="identifier">The todo identifier.</param>
            <param name="entity">The entity to embed.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The view has been embedded.</returns>
            <typeparam name="T">The entity type.</typeparam>
            <remarks>A new entity is created and embedded into the todo so the entity is not visible in the project root level, but only in the todo scope as attachment.</remarks>
        </member>
        <member name="M:Trimble.Connect.Client.TodosController.EmbedAsync``1(System.String,``0,System.IO.Stream,System.String,System.Threading.CancellationToken)">
            <summary>
            Embed an entity with thumbnail to the todo.
            </summary>
            <param name="identifier">The todo identifier.</param>
            <param name="entity">The entity to embed.</param>
            <param name="stream">
            The stream to read the thumbnail content from. 
            The stream is closed automatically when request is completed. 
            Can be null to create view without thumbnail.
            </param>
            <param name="contentType">The thumbnail content type.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The view has been embedded.</returns>
            <typeparam name="T">The entity type.</typeparam>
            <remarks>A new entity is created and embedded into the todo so the entity is not visible in the project root level, but only in the todo scope as attachment.</remarks>
        </member>
        <member name="M:Trimble.Connect.Client.TodosController.DeleteAttachmentsAsync(System.String,System.Collections.Generic.IEnumerable{Trimble.Connect.Client.Models.Attachment},System.Threading.CancellationToken)">
            <summary>
            Delete attachments from the todo.
            </summary>
            <param name="identifier">The todo identifier.</param>
            <param name="attachments">The collection of entities to remove from the todo.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The task.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.TodosControllerExtensions">
            <summary>
            The extensions for interface to manipulate todos.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.TodosControllerExtensions.GetAllAsync(Trimble.Connect.Client.ITodosController,Trimble.Connect.Client.Models.Attachment,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Returns a collection of all todos linked to given attached file.
            </summary>
            <param name="client">The todos manipulator.</param>
            <param name="attachment">
            An attachment. At the moment only file attachments are supported. 
            If <see cref="P:Trimble.Connect.Client.Models.Attachment.Version"/> is null todos linked to all versions of the file are returned.
            </param>
            <param name="pageSize">The page size. default is <c>null</c> that means pagination is controlled by server.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The collection of entities.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.TodosControllerExtensions.AddAttachmentsAsync(Trimble.Connect.Client.ITodosController,System.String,Trimble.Connect.Client.Models.Attachment[])">
            <summary>
            Add attachments to the todo.
            </summary>
            <param name="client">The todos manipulator.</param>
            <param name="todoId">The todo identifier.</param>
            <param name="attachments">The collection of entities to attach to the todo.</param>
            <returns>The collection of entities that have been attached.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.TodosControllerExtensions.AddAttachmentsAsync(Trimble.Connect.Client.ITodosController,System.Threading.CancellationToken,System.String,Trimble.Connect.Client.Models.Attachment[])">
            <summary>
            Add attached files to the todo.
            </summary>
            <param name="client">The todos manipulator.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <param name="todoId">The todo identifier.</param>
            <param name="attachments">The collection of entities to attach to the todo.</param>
            <returns>The collection of entities that have been attached.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.TodosControllerExtensions.AddAttachmentsAsync(Trimble.Connect.Client.ITodosController,System.Threading.CancellationToken,Trimble.Connect.Client.Models.Todo,Trimble.Connect.Client.Models.Attachment[])">
            <summary>
            Add attached files to the todo.
            </summary>
            <param name="client">The todos manipulator.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <param name="todo">The todo.</param>
            <param name="attachments">The collection of entities to attach to the todo.</param>
            <returns>The collection of entities that have been attached.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.TodosControllerExtensions.EmbedAsync(Trimble.Connect.Client.ITodosController,Trimble.Connect.Client.Models.Todo,Trimble.Connect.Client.Models.View,System.Threading.CancellationToken)">
            <summary>
            Embed view to the todo.
            </summary>
            <param name="client">The todos manipulator.</param>
            <param name="todo">The todo.</param>
            <param name="view">The views to embed.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The view has been embedded.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.TodosControllerExtensions.EmbedAsync(Trimble.Connect.Client.ITodosController,Trimble.Connect.Client.Models.Todo,Trimble.Connect.Client.Models.View,System.IO.Stream,System.String,System.Threading.CancellationToken)">
            <summary>
            Embed view with thumbnail to the todo.
            </summary>
            <param name="client">The todos manipulator.</param>
            <param name="todo">The todo.</param>
            <param name="view">The view to embed.</param>
            <param name="stream">
            The stream to read the thumbnail content from. 
            The stream is closed automatically when request is completed. 
            Can be null to create view without thumbnail.
            </param>
            <param name="contentType">The thumbnail content type.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The view has been embedded.</returns>
            <remarks>A new view is created and embedded into the todo so the view is not visible in the project root level, but only in the todo scope as attachment.</remarks>
        </member>
        <member name="T:Trimble.Connect.Client.TransferUtility">
            <summary>
            <para>
            Provides a high level utility for managing transfers to and from TCPS using resumable segmented transfers.
            </para>
            <para>
            <c>TransferUtility</c> provides a simple API for uploading content to and downloading content from TCPS. 
            It makes extensive use of multipart uploads to achieve enhanced throughput, performance, and reliability. 
            </para>
            <para>
            When uploading large files by specifying file paths instead of a stream, 
            <c>TransferUtility</c> uses multiple threads to upload multiple parts of a single upload at once. 
            When dealing with large content sizes and high bandwidth, this can increase throughput significantly.
            </para>
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.TransferUtility.DownloadFileSuffix">
            <summary>
            The suffix for file that holds the download content temporarily.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.TransferUtility.DownloadLockFileSuffix">
            <summary>
            The suffix for the file that is used as a lock when downloading files.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.TransferUtility.MinPartSize">
            <summary>
            The minimum supported file part size.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.TransferUtility.MinSizeBeforePartUpload">
            <summary>
            The minimum file size to start multipart transfer.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.TransferUtility.MaxNumberOfParts">
            <summary>
            The maximum number of parts.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.TransferUtility.client">
            <summary>
            The project client.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.TransferUtility.numberOfThreads">
            <summary>
            The number of parallel threads per transfer.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.TransferUtility.#ctor(Trimble.Connect.Client.IProjectClient)">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.TransferUtility"/> class.
            </summary>
            <param name="client">The project client.</param>
        </member>
        <member name="P:Trimble.Connect.Client.TransferUtility.Client">
            <summary>
            Gets the project client.
            </summary>
            <value>The client.</value>
        </member>
        <member name="P:Trimble.Connect.Client.TransferUtility.Timeout">
            <summary>
            Gets or sets the timeout to use for data transfer.
            Default is 120 seconds.
            </summary>
            <value>The timeout.</value>
            <remarks>
            The time span to wait before cancelling the activity in network stream.
            The timeout is monitored not for the whole operation but for the activity in the stream.
            If there is no activity for the specified period of time the operation is cancelled.
            </remarks>
        </member>
        <member name="P:Trimble.Connect.Client.TransferUtility.BufferSize">
            <summary>
            Gets or sets the transfer buffer size.
            Default is 80kB.
            </summary>
            <value>The buffer size.</value>
        </member>
        <member name="P:Trimble.Connect.Client.TransferUtility.MaxErrorRetries">
            <summary>
            Gets or sets the maximum amount of retries to perform for a request.
            </summary>
            <value>The maximum amount of retries to perform for a request.</value>
            <remarks>Default is 3.</remarks>
        </member>
        <member name="P:Trimble.Connect.Client.TransferUtility.MaxParallelSegments">
            <summary>
            Gets or sets the maximum number of parallel threads per transfer.
            This property determines how many active threads will be used to transfer the file. The default value is 3 parallel transfers.
            </summary>
            <value>The number parallel threads.</value>
            <remarks>
            Must be in range of 1 to 10.
            A value less than or equal to 0 will be silently ignored.
            </remarks>
        </member>
        <member name="M:Trimble.Connect.Client.TransferUtility.UploadAsync(System.String,System.String,System.String,System.String,System.Action{System.Net.Http.Handlers.HttpProgressEventArgs},System.Threading.CancellationToken)">
            <summary>
            Uploads the specified file.  
            Multiple threads are used to read the file and perform multiple uploads in parallel.  
            For large uploads, the file will be divided and uploaded in parts using TCPS multipart file upload API.
            The parts will be reassembled as one file in TCPS.
            </summary>
            <param name="folderId">The folder identifier.</param>
            <param name="filePath">The file path of the file to upload.</param>
            <param name="name">The optional file name, if not specified the file name from the <paramref name="filePath"/> is used.</param>
            <param name="versionId">The optional file version identifier of the last seen version for the concurrency check.</param>
            <param name="progress">The optional progress callback.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The uploaded file.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.TransferUtility.UploadAsync(Trimble.Connect.Client.Models.Attachment,System.String,System.String,System.String,System.String,System.Action{System.Net.Http.Handlers.HttpProgressEventArgs},System.Threading.CancellationToken,System.Boolean,System.String)">
            <summary>
            Uploads the specified file.  
            Multiple threads are used to read the file and perform multiple uploads in parallel.  
            For large uploads, the file will be divided and uploaded in parts using TCPS multipart file upload API.
            The parts will be reassembled as one file in TCPS.
            </summary>
            <param name="parent">
            The parent entity descriptor. Can be e.g. <see cref="F:Trimble.Connect.Client.Models.EntityType.Folder"/> or <see cref="F:Trimble.Connect.Client.Models.EntityType.Todo"/>.
            If entity type is not specified a folder is assumed.
            </param>
            <param name="filePath">The file path of the file to upload.</param>
            <param name="hash">The hash of the file. Mandatory for multipart uploads.</param>
            <param name="name">The optional file name, if not specified the file name from the <paramref name="filePath"/> is used.</param>
            <param name="versionId">The optional file version identifier of the last seen version for the concurrency check.</param>
            <param name="progress">The optional progress callback.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <param name="fileSet">Optional file set param used to initiate multifile upload.</param>
            <param name="pathTemplate">Optional path template string used in the context of point cloud file structure.</param>
            <returns>The uploaded file.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.TransferUtility.UploadAsync(Trimble.Connect.Client.Models.Attachment,System.String,System.String,System.String,System.Action{System.Net.Http.Handlers.HttpProgressEventArgs},System.Threading.CancellationToken,System.Boolean,System.String)">
            <summary>
            Uploads the specified file.  
            Multiple threads are used to read the file and perform multiple uploads in parallel.  
            For large uploads, the file will be divided and uploaded in parts using TCPS multipart file upload API.
            The parts will be reassembled as one file in TCPS.
            </summary>
            <param name="parent">
            The parent entity descriptor. Can be e.g. <see cref="F:Trimble.Connect.Client.Models.EntityType.Folder"/> or <see cref="F:Trimble.Connect.Client.Models.EntityType.Todo"/>.
            If entity type is not specified a folder is assumed.
            </param>
            <param name="filePath">The file path of the file to upload.</param>
            <param name="name">The optional file name, if not specified the file name from the <paramref name="filePath"/> is used.</param>
            <param name="versionId">The optional file version identifier of the last seen version for the concurrency check.</param>
            <param name="progress">The optional progress callback.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <param name="fileSet">Optional file set param used to initiate multifile upload.</param>
            <param name="pathTemplate">Optional path template string used in the context of point cloud file structure.</param>
            <returns>The uploaded file.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.TransferUtility.UploadAsync(System.String,System.IO.Stream,System.String,System.String,System.Action{System.Net.Http.Handlers.HttpProgressEventArgs},System.Threading.CancellationToken)">
            <summary>
            Uploads the specified file from stream.  
            The stream is split into parts, but all parts are uploaded sequentially with resume support in case of failure.
            </summary>
            <param name="folderId">The folder identifier.</param>
            <param name="stream">The file path of the file to upload.</param>
            <param name="name">The file name.</param>
            <param name="versionId">The optional file version identifier of the last seen version for the concurrency check.</param>
            <param name="progress">The optional progress callback.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The uploaded file.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.TransferUtility.UploadAsync(Trimble.Connect.Client.Models.Attachment,System.IO.Stream,System.String,System.String,System.Action{System.Net.Http.Handlers.HttpProgressEventArgs},System.Threading.CancellationToken,System.Boolean,System.String)">
            <summary>
            Uploads the specified file from stream.  
            The stream is split into parts, but all parts are uploaded sequentially with resume support in case of failure.
            </summary>
            <param name="parent">
            The parent entity descriptor. Can be e.g. <see cref="F:Trimble.Connect.Client.Models.EntityType.Folder"/> or <see cref="F:Trimble.Connect.Client.Models.EntityType.Todo"/>.
            If entity type is not specified a folder is assumed.
            </param>
            <param name="stream">The file path of the file to upload.</param>
            <param name="name">The file name.</param>
            <param name="versionId">The optional file version identifier of the last seen version for the concurrency check.</param>
            <param name="progress">The optional progress callback.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <param name="fileSet">Optional file set param used to initiate multifile upload.</param>
            <param name="pathTemplate">Optional path template string used in the context of point cloud file structure.</param>
            <returns>The uploaded file.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.TransferUtility.UploadMultipartAsync(Trimble.Connect.Client.Models.Attachment,System.IO.Stream,System.String,System.String,System.String,System.Action{System.Net.Http.Handlers.HttpProgressEventArgs},System.Threading.CancellationToken)">
            <summary>
            Upload Multipart Async.
            </summary>
            <param name="parent">The attachment.</param>
            <param name="stream">The stream value.</param>
            <param name="name">The name.</param>
            <param name="hash">The Hash.</param>
            <param name="versionId">The version Identifier.</param>
            <param name="progress">The progress value.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns the folder item.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.TransferUtility.DownloadAsync(System.String,System.String,System.String,System.String,System.Action{System.Net.Http.Handlers.HttpProgressEventArgs},System.Threading.CancellationToken)">
            <summary>
            Downloads the content from TCPS and writes it to the <paramref name="filePath"/>. 
            Resume is supported in case of failure.
            </summary>
            <param name="filePath"> The file path where the content will be written to.</param>
            <param name="fileId">The file identifier to download.</param>
            <param name="versionId">The optional file version identifier to download. If null the latest version is downloaded.</param>
            <param name="format">The optional file format to download. If null original file is downloaded.</param>
            <param name="progress">The optional progress callback.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The task.</returns>
            <exception cref="T:System.IO.IOException">If file with name <paramref name="filePath"/> already exists.</exception>
            <remarks>
            This method will acquire a download lock (based on <paramref name="filePath"/>) and initiate a file download to a temporary file.
            Both lock and temporary download file are stored in the same directory as <paramref name="filePath"/>.
            The temporary file is used to hold partial download result if download is interrupted by some reason.
            If presence of the temporary file is detected the download will resume from the last downloaded byte.
            If it is detected that the download for the same file already going on, this method will wait for the download to be completed and will throw <see cref="T:System.IO.IOException"/>.
            </remarks>
        </member>
        <member name="M:Trimble.Connect.Client.TransferUtility.DownloadAsync(System.String,System.String,System.String,System.String,System.String,System.Action{System.Net.Http.Handlers.HttpProgressEventArgs},System.Threading.CancellationToken)">
            <summary>
            Downloads the content from TCPS and writes it to the <paramref name="filePath"/>. 
            Resume is supported in case of failure.
            </summary>
            <param name="filePath"> The file path where the content will be written to.</param>
            <param name="fileId">The file identifier to download.</param>
            <param name="accessToken">The access token to be used.
            <remarks>To be specified for PDF download</remarks>
            </param>
            <param name="versionId">The optional file version identifier to download. If null the latest version is downloaded.</param>
            <param name="format">The optional file format to download. If null original file is downloaded.</param>
            <param name="progress">The optional progress callback.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The task.</returns>
            <exception cref="T:System.IO.IOException">If file with name <paramref name="filePath"/> already exists.</exception>
            <remarks>
            This method will acquire a download lock (based on <paramref name="filePath"/>) and initiate a file download to a temporary file.
            Both lock and temporary download file are stored in the same directory as <paramref name="filePath"/>.
            The temporary file is used to hold partial download result if download is interrupted by some reason.
            If presence of the temporary file is detected the download will resume from the last downloaded byte.
            If it is detected that the download for the same file already going on, this method will wait for the download to be completed and will throw <see cref="T:System.IO.IOException"/>.
            </remarks>
        </member>
        <member name="M:Trimble.Connect.Client.TransferUtility.CalculatePartSize(System.Int64)">
            <summary>
            Calculates the default part size.
            </summary>
            <param name="fileSize">The total file size.</param>
            <returns>The part size.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.TransferUtility.CalculatePartitionsCount(System.Int64,System.Int64)">
            <summary>
            Calculates the number of partitions in multipart transfer.
            </summary>
            <param name="partSize">The part size.</param>
            <param name="totalSize">The total file size.</param>
            <returns>The number of partitions.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.TrimbleConnectApp">
            <summary>
            A Trimble Connect application.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.TrimbleConnectApp.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.TrimbleConnectApp"/> class.
            </summary>
            <param name="appId">The application identifier.</param>
        </member>
        <member name="P:Trimble.Connect.Client.TrimbleConnectApp.AppId">
            <summary>
            Gets the application identifier.
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="P:Trimble.Connect.Client.TrimbleConnectApp.AccessToken">
            <summary>
            Gets or sets a Trimble Connect Services application access token. If non-null, the access token will be 
            included in requests to authentication the application.
            </summary>
            <value>The token.</value>
        </member>
        <member name="T:Trimble.Connect.Client.TrimbleConnectClient">
            <summary>
            The Trimble Connect client.
            </summary>
            <summary>
            The Trimble Connect client.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.TrimbleConnectClient.RegionsPath">
            <summary>
            The API path.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.TrimbleConnectClient.AuthPath">
            <summary>
            The API path.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.TrimbleConnectClient.SearchPath">
            <summary>
            The API path.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.TrimbleConnectClient.TimeZonesPath">
            <summary>
            The API path.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.TrimbleConnectClient.Me">
            <summary>
            The current user is Me.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.TrimbleConnectClient.currentUser">
            <summary>
            The Trimble connect user.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.TrimbleConnectClient.#ctor(System.String,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.TrimbleConnectClient"/> class.
            </summary>
            <param name="serviceUri">
            The URI for the Trimble Connect Service (master shard).
            </param>
            <param name="handlers">An ordered list of <see cref="T:System.Net.Http.DelegatingHandler"/> instances to be invoked as an 
            <see cref="T:System.Net.Http.HttpRequestMessage"/> travels from the <see cref="P:Trimble.Connect.Client.TrimbleConnectClient.HttpClient"/> to the network and an 
            <see cref="T:System.Net.Http.HttpResponseMessage"/> travels from the network back to <see cref="T:Trimble.Connect.Client.TrimbleConnectClient"/>.
            The handlers are invoked in a top-down fashion. That is, the first entry is invoked first for 
            an outbound request message but last for an inbound response message.</param>
            <remarks>All handlers are disposed when this instance is disposed.</remarks>
        </member>
        <member name="M:Trimble.Connect.Client.TrimbleConnectClient.#ctor(System.String,System.Net.Http.HttpMessageHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.TrimbleConnectClient"/> class.
            </summary>
            <param name="serviceUri">
            The URI for the Trimble Connect Service (master shard).
            </param>
            <param name="innerHandler">The inner handler represents the destination of the HTTP message channel and is responsible for processing the HTTP response messages.</param>
            <param name="handlers">An ordered list of <see cref="T:System.Net.Http.DelegatingHandler"/> instances to be invoked as an 
            <see cref="T:System.Net.Http.HttpRequestMessage"/> travels from the <see cref="P:Trimble.Connect.Client.TrimbleConnectClient.HttpClient"/> to the network and an 
            <see cref="T:System.Net.Http.HttpResponseMessage"/> travels from the network back to <see cref="T:Trimble.Connect.Client.TrimbleConnectClient"/>.
            The handlers are invoked in a top-down fashion. That is, the first entry is invoked first for 
            an outbound request message but last for an inbound response message.</param>
            <remarks>All handlers are disposed when this instance is disposed.</remarks>
        </member>
        <member name="M:Trimble.Connect.Client.TrimbleConnectClient.#ctor(System.Uri,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.TrimbleConnectClient"/> class.
            </summary>
            <param name="serviceUri">
            The URI for the Trimble Connect Service (master shard).
            </param>
            <param name="handlers">An ordered list of <see cref="T:System.Net.Http.DelegatingHandler"/> instances to be invoked as an 
            <see cref="T:System.Net.Http.HttpRequestMessage"/> travels from the <see cref="P:Trimble.Connect.Client.TrimbleConnectClient.HttpClient"/> to the network and an 
            <see cref="T:System.Net.Http.HttpResponseMessage"/> travels from the network back to <see cref="T:Trimble.Connect.Client.TrimbleConnectClient"/>.
            The handlers are invoked in a top-down fashion. That is, the first entry is invoked first for 
            an outbound request message but last for an inbound response message.</param>
            <remarks>All handlers are disposed when this instance is disposed.</remarks>
        </member>
        <member name="M:Trimble.Connect.Client.TrimbleConnectClient.#ctor(System.Uri,System.Net.Http.HttpMessageHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.TrimbleConnectClient"/> class.
            </summary>
            <param name="serviceUri">
            The URI for the Trimble Connect Service (master shard).
            </param>
            <param name="innerHandler">The inner handler represents the destination of the HTTP message channel and is responsible for processing the HTTP response messages.</param>
            <param name="handlers">An ordered list of <see cref="T:System.Net.Http.DelegatingHandler"/> instances to be invoked as an 
            <see cref="T:System.Net.Http.HttpRequestMessage"/> travels from the <see cref="P:Trimble.Connect.Client.TrimbleConnectClient.HttpClient"/> to the network and an 
            <see cref="T:System.Net.Http.HttpResponseMessage"/> travels from the network back to <see cref="T:Trimble.Connect.Client.TrimbleConnectClient"/>.
            The handlers are invoked in a top-down fashion. That is, the first entry is invoked first for 
            an outbound request message but last for an inbound response message.</param>
            <remarks>All handlers are disposed when this instance is disposed.</remarks>
        </member>
        <member name="M:Trimble.Connect.Client.TrimbleConnectClient.#ctor(Trimble.Connect.Client.TrimbleConnectClientConfig,Trimble.Connect.Client.ICredentialsProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.TrimbleConnectClient"/> class.
            </summary>
            <param name="config">
            The Trimble Connect Client Config.
            </param>
            <param name="credentialsProvider">The credentials provider.</param>
            <remarks>The <see cref="P:Trimble.Connect.Client.ClientConfig.ServiceURI"/> is required to initialize.</remarks>
        </member>
        <member name="M:Trimble.Connect.Client.TrimbleConnectClient.#ctor(Trimble.Connect.Client.TrimbleConnectClientConfig,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.TrimbleConnectClient"/> class.
            </summary>
            <param name="config">
            The Trimble Connect Client Config.
            </param>
            <param name="handlers">An ordered list of <see cref="T:System.Net.Http.DelegatingHandler"/> instances to be invoked as an 
            <see cref="T:System.Net.Http.HttpRequestMessage"/> travels from the <see cref="P:Trimble.Connect.Client.TrimbleConnectClient.HttpClient"/> to the network and an 
            <see cref="T:System.Net.Http.HttpResponseMessage"/> travels from the network back to <see cref="T:Trimble.Connect.Client.TrimbleConnectClient"/>.
            The handlers are invoked in a top-down fashion. That is, the first entry is invoked first for 
            an outbound request message but last for an inbound response message.</param>
            <remarks>All handlers are disposed when this instance is disposed.</remarks>
        </member>
        <member name="M:Trimble.Connect.Client.TrimbleConnectClient.#ctor(System.Uri,Trimble.Connect.Client.Common.Http.TrimbleConnectHttpClient)">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.TrimbleConnectClient"/> class.
            </summary>
            <param name="serviceUri">
            The URI for the Trimble Connect Service (master shard).
            </param>
            <param name="httpClient">The http client.</param>
        </member>
        <member name="P:Trimble.Connect.Client.TrimbleConnectClient.ServiceUri">
            <summary>
            Gets the URI for the Trimble Connect Service.
            </summary>
            <value>
            The Trimble Connect Service URI.
            </value>
        </member>
        <member name="P:Trimble.Connect.Client.TrimbleConnectClient.CurrentUser">
            <summary>
            Gets or sets the current authenticated user provided after 
            any successful API call that requires authentication. 
            </summary>
            <value>The user.</value>
            <remarks><see cref="M:Trimble.Connect.Client.TrimbleConnectClient.InitializeTrimbleConnectUserAsync(System.String,System.Threading.CancellationToken)"/>.</remarks>
        </member>
        <member name="P:Trimble.Connect.Client.TrimbleConnectClient.Configuration">
            <inheritdoc />
        </member>
        <member name="P:Trimble.Connect.Client.TrimbleConnectClient.Companies">
            <summary>
            Gets the companies controller.
            </summary>
            <value>The companies controller.</value>
        </member>
        <member name="P:Trimble.Connect.Client.TrimbleConnectClient.CredentialsProvider">
            <summary>
            Gets the credentials provider which can provide a Trimble Connect Services authentication token. 
            If available, the authentication token will be included in all requests made to the Trimble Connect Service, 
            allowing the client to perform all actions that require authenticated-user level permissions.
            </summary>
            <value>The credentials provider.</value>
        </member>
        <member name="P:Trimble.Connect.Client.TrimbleConnectClient.Apps">
            <summary>
            Gets the apps controller.
            </summary>
            <value>The apps controller.</value>
        </member>
        <member name="P:Trimble.Connect.Client.TrimbleConnectClient.HttpClient">
            <summary>
            Gets the <see cref="T:Trimble.Connect.Client.Common.Http.TrimbleConnectHttpClient"/> associated with this client.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.TrimbleConnectClient.AddUserAgent(System.String,System.String)">
            <summary>
            Adds the product name and version to be used in the user agent header when making requests.
            </summary>
            <param name="productName">Name of the product to be used in the user agent.</param>
            <param name="version">Version of the product to be used in the user agent.</param>
            <remarks>
            This method can be called multiple times and allows to add information about different components to the UserAgent header.
            If entry with the name <paramref name="productName"/> exists already the call is silently ignored.
            </remarks>
        </member>
        <member name="M:Trimble.Connect.Client.TrimbleConnectClient.LoginAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Signs in a Trimble Identity user to the Trimble Connect.
            </summary>
            <param name="idToken">The valid id token issued by Trimble Identity.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The authenticated Trimble Connect user.</returns>
            <remarks>
            This method exchanges the TID id token to the TCPS id-token.
            After this method successfully executed the <see cref="P:Trimble.Connect.Client.TrimbleConnectClient.CurrentUser" /> property is set and all subsequent calls are made in the context of the user.
            </remarks>
        </member>
        <member name="M:Trimble.Connect.Client.TrimbleConnectClient.LoginAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Signs in to the Trimble Connect using API key.
            </summary>
            <param name="username">The user name.</param>
            <param name="apiKey">The API key.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The authenticated Trimble Connect user.</returns>
            <remarks>
            The API key is available from the user profile page in Trimble Connect web.
            After this method successfully executed the <see cref="P:Trimble.Connect.Client.TrimbleConnectClient.CurrentUser"/> property is set and all subsequent calls are made in the context of the user.
            </remarks>
        </member>
        <member name="M:Trimble.Connect.Client.TrimbleConnectClient.InitializeTrimbleConnectUserAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Initialize Trimble Connect user using Trimble Identity id token and access token.
            </summary>
            <param name="idToken">The valid id token issued by Trimble Identity.</param>
            <param name="accessToken">The valid access token issued by Trimble Identity.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The authenticated Trimble Connect user.</returns>
            <remarks>
            After this method successfully executed the <see cref="P:Trimble.Connect.Client.TrimbleConnectClient.CurrentUser" /> property is set and all subsequent calls are made in the context of the user.
            </remarks>
        </member>
        <member name="M:Trimble.Connect.Client.TrimbleConnectClient.InitializeTrimbleConnectUserAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Initialize Trimble Connect user using Trimble Identity access token.
            </summary>
            <param name="accessToken">The valid access token issued by Trimble Identity.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The authenticated Trimble Connect user.</returns>
            <remarks>
            After this method successfully executed the <see cref="P:Trimble.Connect.Client.TrimbleConnectClient.CurrentUser" /> property is set and all subsequent calls are made in the context of the user.
            </remarks>
        </member>
        <member name="M:Trimble.Connect.Client.TrimbleConnectClient.LogoutAsync">
            <summary>
            Log a user out.
            </summary>
            <returns>A task.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.TrimbleConnectClient.ReadConfigurationAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Trimble.Connect.Client.TrimbleConnectClient.GetProjectsAsync(System.Boolean,System.Nullable{System.Int64},System.Action{System.Collections.Generic.IEnumerable{Trimble.Connect.Client.Models.Project}},System.Func{Trimble.Connect.Client.Models.Region,System.Boolean},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Trimble.Connect.Client.TrimbleConnectClient.GetProjectsAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int64},System.Action{System.Collections.Generic.IEnumerable{Trimble.Connect.Client.Models.Project}},System.Func{Trimble.Connect.Client.Models.Region,System.Boolean},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Trimble.Connect.Client.TrimbleConnectClient.GetProjectClient(System.String,System.Uri)">
            <summary>
            Creates a project client wrapper to access data inside the project.
            </summary>
            <param name="projectId">The project identifier.</param>
            <param name="serviceUri">The service uri.</param>
            <returns>The project client.</returns>
            <remarks>
            For the <paramref name="serviceUri"/> should point to the specific region the project is located.
            </remarks>
        </member>
        <member name="M:Trimble.Connect.Client.TrimbleConnectClient.CreateProjectAsync(Trimble.Connect.Client.Models.Project,System.Threading.CancellationToken)">
            <summary>
            Creates a project.
            </summary>
            <param name="project">The project data.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The project information as created from backend.</returns>
            <remarks>
            The shards table (<see cref="P:Trimble.Connect.Client.TrimbleConnectClient.Configuration"/>) is automatically initialized (if not yet) with a call to <see cref="M:Trimble.Connect.Client.TrimbleConnectClient.ReadConfigurationAsync(System.Threading.CancellationToken)"/>.
            For the <paramref name="project"/> only <see cref="P:Trimble.Connect.Client.Models.Project.Location"/> and <see cref="P:Trimble.Connect.Client.Models.Project.Name"/> properties are required to be initialized.
            If <see cref="P:Trimble.Connect.Client.Models.Project.Location"/> is null, the <see cref="P:Trimble.Connect.Client.TrimbleConnectClient.ServiceUri"/> is used as a project location.
            </remarks>
        </member>
        <member name="M:Trimble.Connect.Client.TrimbleConnectClient.DownloadThumbnailAsync(System.String,System.Action{System.Net.Http.Handlers.HttpProgressEventArgs},System.Threading.CancellationToken)">
            <summary>
            Downloads the thumbnail.
            </summary>
            <param name="url">The thumbnail url.</param>
            <param name="progress">The optional progress callback.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The network stream and media type (e.g. 'image/png') tuple.</returns>
            <remarks>This method can be used to download thumbnails for <see cref="T:Trimble.Connect.Client.Models.Project"/>, <see cref="T:Trimble.Connect.Client.Models.View"/> and other entities.</remarks>
        </member>
        <member name="M:Trimble.Connect.Client.TrimbleConnectClient.RequestApplicationAccessToken(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Request application access token.
            </summary>
            <param name="appId">The application identifier.</param>
            <param name="apiKey">The application api key.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The task.</returns>
            <remarks>API to request application token. The application token is used in downloading pdf file format.</remarks>
        </member>
        <member name="M:Trimble.Connect.Client.TrimbleConnectClient.RequestAccessAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Request access to the locked project.
            </summary>
            <param name="projectId">The project identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The task.</returns>
            <remarks>API to send email to the business (or project) admin requesting access to the project so the user can access the project.</remarks>
        </member>
        <member name="M:Trimble.Connect.Client.TrimbleConnectClient.SupportedAssimilationFormatsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Request list of file extensions supported for the assimilation.
            </summary>
            <param name="formatType">The optional parameter to limit the format types (<see cref="T:Trimble.Connect.Client.Models.FileFormatType"/>) returned.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The list of formats.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.TrimbleConnectClient.SearchAsync(Trimble.Connect.Client.Models.SearchQuery,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Search for the term in projects.
            </summary>
            <param name="query">The search query.</param>
            <param name="parameters">
            A optional dictionary of user-defined parameters and values to include in the request URI query string.
            </param>
            <param name="pageSize">The requested page size when querying each pod. Default is <c>null</c> that means pagination is controlled by server.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>Collection of search results.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.TrimbleConnectClient.InvokeApiAsync``2(System.String,``0,System.Net.Http.HttpMethod,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Invokes a TC Service API using the specified HTTP Method.
            Additional data can be sent though the HTTP content or the query string.
            </summary>
            <typeparam name="T">The type of instance sent to the TC Service.</typeparam>
            <typeparam name="U">The type of instance returned from the TC Service.</typeparam>    
            <param name="apiName">The name of the custom API.</param>
            <param name="body">The value to be sent as the HTTP body.</param>
            <param name="method">The HTTP method. If null the HTTP GET is used if <paramref name="body"/> is null, POST otherwise.</param>
            <param name="parameters">
            A optional dictionary of user-defined parameters and values to include in the request URI query string.
            </param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> token to observe.</param>
            <returns>The response content from the API invocation.</returns>
            <remarks>
            Normally a specialized wrapper should be preferred to communicate with the TC service.
            This method could be used as an extensibility mechanism when some wrapper is missing from the .NET SDK.
            </remarks>
        </member>
        <member name="M:Trimble.Connect.Client.TrimbleConnectClient.InvokeApiAsync(System.String,System.Net.Http.HttpContent,System.Net.Http.HttpMethod,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Invokes a TC Service API using the specified HttpMethod.
            Additional data can be sent though the HTTP content or the query string. 
            </summary>
            <param name="apiName">The name of the API.</param>
            <param name="content">The HTTP content.</param>
            <param name="method">The HTTP method. If null the HTTP GET is used if <paramref name="content"/> is null, POST otherwise.</param>
            <param name="parameters">
            A optional dictionary of user-defined parameters and values to include in the request URI query string.
            </param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> token to observe.</param>
            <returns>The HTTP Response from the API invocation.</returns>
            <remarks>
            Normally a specialized wrapper should be preferred to communicate with the TC service.
            This method could be used as an extensibility mechanism when some wrapper is missing from the .NET SDK.
            </remarks>
        </member>
        <member name="M:Trimble.Connect.Client.TrimbleConnectClient.GetTimeZonesAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the time zones supported by Trimble Connect.
            </summary>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>Collection of time zones.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.TrimbleConnectClient.Dispose">
            <summary>
            Implementation of <see cref="T:System.IDisposable"/>
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.TrimbleConnectClient.GetUserAuthenticationToken">
            <summary>
            Return authentication token if present or returns null.
            </summary>
            <returns>Returns the authentication token if present or null.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.TrimbleConnectClient.Dispose(System.Boolean)">
            <summary>
            Implementation of <see cref="T:System.IDisposable"/> for derived classes to use.
            </summary>
            <param name="disposing">
            Indicates if being called from the Dispose() method or the finalizer.
            </param>
        </member>
        <member name="M:Trimble.Connect.Client.TrimbleConnectClient.RequestTokenAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
            <summary>
            Makes an authentication request.
            </summary>
            <param name="uri">The uri.</param>
            <param name="content">The content.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The authenticated Trimble Connect user.</returns>
            <remarks>
            After this method successfully executed the <see cref="P:Trimble.Connect.Client.TrimbleConnectClient.CurrentUser"/> property is set and all subsequent calls are made in the context of the user.
            </remarks>
        </member>
        <member name="M:Trimble.Connect.Client.TrimbleConnectClient.CreateUriString(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Helper function to assemble the Uri for a given API.
            </summary>
            <param name="uriFragment">The uri fragment.</param>
            <param name="parameters">The query parameters.</param>
            <returns>The Uri.</returns>
        </member>
        <member name="F:Trimble.Connect.Client.TrimbleConnectClient.UsersPath">
            <summary>
            The API path.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.TrimbleConnectClient.LicensesPath">
            <summary>
            The API path.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.TrimbleConnectClient.GetProfileAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the user profile.
            </summary>
            <param name="id">The user identifier.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The user profile.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.TrimbleConnectClient.UpdateAsync(Trimble.Connect.Client.Models.Person,System.Threading.CancellationToken)">
            <summary>
            Updates an user profile.
            </summary>
            <param name="entity">The user profile template.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The user profile.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.TrimbleConnectClient.GetLicensesAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the user licenses.
            </summary>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>Collection of user licenses.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.TrimbleConnectClient.GetMyUserProfileAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the user profile.
            </summary>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The user profile.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.TrimbleConnectClient.GetUpdateRequestBody(Trimble.Connect.Client.Models.Person)">
            <summary>
            Converts the object template to JSON body to send as an update request.
            </summary>
            <param name="entity">The entity.</param>
            <returns>The JSON body.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.TrimbleConnectClientConfig">
            <summary>
            The configuration data for the <see cref="T:Trimble.Connect.Client.TrimbleConnectClient"/> class.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.TrimbleConnectClientConfig.GetServiceURIForRegion(System.String)">
            <summary>
            All derived classes should override this method to provide a service URI for each supported region.
            </summary>
            <param name="region">The region for which the service URI is requested.</param>
            <returns>The service URI for the specified region.</returns>
            <remarks>It is necessary to call <see cref="M:Trimble.Connect.Client.ITrimbleConnectClient.ReadConfigurationAsync(System.Threading.CancellationToken)"/> to initialize the regions 
            before making any API calls that are using regional end points.</remarks>
        </member>
        <member name="T:Trimble.Connect.Client.TrimbleConnectClientExtensions">
            <summary>
            The <see cref="T:Trimble.Connect.Client.ITrimbleConnectClient"/> extensions.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.TrimbleConnectClientExtensions.GetProjectsAsync(Trimble.Connect.Client.ITrimbleConnectClient,System.Threading.CancellationToken)">
            <summary>
            Get all projects current user is member of.
            </summary>
            <param name="client">The Trimble Connect client.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>Collection of projects.</returns>
            <remarks>
            Results from all pods are returned.
            The <see cref="P:Trimble.Connect.Client.ITrimbleConnectClient.Configuration"/> is automatically initialized 
            with call to <see cref="M:Trimble.Connect.Client.ITrimbleConnectClient.ReadConfigurationAsync(System.Threading.CancellationToken)"/> if it was not initialized before.
            </remarks>
        </member>
        <member name="M:Trimble.Connect.Client.TrimbleConnectClientExtensions.GetProjectsAsync(Trimble.Connect.Client.ITrimbleConnectClient,System.Nullable{System.Int64},System.Action{System.Collections.Generic.IEnumerable{Trimble.Connect.Client.Models.Project}},System.Func{Trimble.Connect.Client.Models.Region,System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Get all projects current user is member of.
            </summary>
            <param name="client">The Trimble Connect client.</param>
            <param name="pageSize">The requested page size when querying each pod. Default is <c>null</c> that means pagination is controlled by server.</param>
            <param name="received">
            The optional callback to call when results are received from the server.
            Note that this callback will be reused for all pages fetched starting from this page (<see cref="M:Trimble.Connect.Client.IQueryResult`1.GetNextPageAsync(System.Threading.CancellationToken)"/>), not only the first page.
            </param>
            <param name="podFilter">The optional pod filter. If provided should return <c>true</c> for the pods that should be queried.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>Collection of projects.</returns>
            <remarks>
            Results from all pods are returned.
            The <see cref="P:Trimble.Connect.Client.ITrimbleConnectClient.Configuration"/> is automatically initialized with call to <see cref="M:Trimble.Connect.Client.ITrimbleConnectClient.ReadConfigurationAsync(System.Threading.CancellationToken)"/> if it was not initialized before.
            The <paramref name="received"/> callback can be used by the application to received the results from the faster pods faster. 
            The <paramref name="received"/> callback is called as soon as results from the specific pod is arrived. 
            When enumerating results from the return value responses from faster pods are delayed until responses from all pods has arrived.
            </remarks>
        </member>
        <member name="M:Trimble.Connect.Client.TrimbleConnectClientExtensions.GetProjectClientAsync(Trimble.Connect.Client.ITrimbleConnectClient,Trimble.Connect.Client.Models.Project,System.Threading.CancellationToken)">
            <summary>
            Creates a project client wrapper to access data inside the project.
            </summary>
            <param name="client">The Trimble Connect client.</param>
            <param name="project">The project.</param>
            <returns>The project client.</returns>
            <param name="cancellationToken">The optional cancellation token.</param>
            <remarks>
            The shards table (<see cref="P:Trimble.Connect.Client.ITrimbleConnectClient.Configuration"/>) is automatically initialized (if not yet) 
            with a call to <see cref="M:Trimble.Connect.Client.ITrimbleConnectClient.ReadConfigurationAsync(System.Threading.CancellationToken)"/>.
            For the <paramref name="project"/> only <see cref="P:Trimble.Connect.Client.Models.ObjectIdentity.Identifier"/> and <see cref="P:Trimble.Connect.Client.Models.Project.Location"/> properties are required to be initialized.
            </remarks>
            <exception cref="T:System.InvalidOperationException">It the information about the shard for the project cannot be found.</exception>
        </member>
        <member name="M:Trimble.Connect.Client.TrimbleConnectClientExtensions.DeleteAsync(Trimble.Connect.Client.ITrimbleConnectClient,Trimble.Connect.Client.Models.Project,System.Threading.CancellationToken)">
            <summary>
            Deletes the project.
            </summary>
            <returns>The task.</returns>
            <param name="client">The Trimble Connect client.</param>
            <param name="project">The project.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The task.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.TrimbleConnectClientExtensions.SearchAsync(Trimble.Connect.Client.ITrimbleConnectClient,Trimble.Connect.Client.Models.SearchQuery,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Search for the term in projects.
            </summary>
            <param name="client">The Trimble Connect client.</param>
            <param name="query">The search query.</param>
            <param name="pageSize">The requested page size when querying each pod. Default is <c>null</c> that means pagination is controlled by server.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>Collection of search results.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.TrimbleConnectClientExtensions.InvokeApiAsync``1(Trimble.Connect.Client.ITrimbleConnectClient,System.String,System.Threading.CancellationToken)">
            <summary>
            Invokes a TC Service API using an HTTP GET.
            </summary>
            <typeparam name="T">The type of instance returned from the TC Service.</typeparam>    
            <param name="client">The Trimble Connect client.</param>
            <param name="apiName">The name of the API.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> token to observe.</param>
            <returns>The response content from the API invocation.</returns>
            <remarks>
            Normally a specialized wrapper should be preferred to communicate with the TC service.
            This method could be used as an extensibility mechanism when some wrapper is missing from the .NET SDK.
            </remarks>
        </member>
        <member name="M:Trimble.Connect.Client.TrimbleConnectClientExtensions.InvokeApiAsync``2(Trimble.Connect.Client.ITrimbleConnectClient,System.String,``0,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Invokes a TC Service API using an HTTP GET or POST with support for sending HTTP content. If content is not null POST is used.
            </summary>
            <typeparam name="T">The type of instance sent to the TC Service.</typeparam>
            <typeparam name="U">The type of instance returned from the TC Service.</typeparam>    
            <param name="client">The Trimble Connect client.</param>
            <param name="apiName">The name of the API.</param>
            <param name="body">The optional value to be sent as the HTTP body.</param>
            <param name="parameters">
            A dictionary of user-defined parameters and values to include in the request URI query string.
            </param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> token to observe.</param>
            <returns>The response content from the API invocation.</returns>
            <remarks>
            Normally a specialized wrapper should be preferred to communicate with the TC service.
            This method could be used as an extensibility mechanism when some wrapper is missing from the .NET SDK.
            </remarks>
        </member>
        <member name="M:Trimble.Connect.Client.TrimbleConnectClientExtensions.InvokeApiAsync``1(Trimble.Connect.Client.ITrimbleConnectClient,System.String,System.Net.Http.HttpMethod,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Invokes a TC Service API using the specified HTTP Method.
            Additional data can be passed using the query string.
            </summary>
            <typeparam name="T">The type of instance sent to the TC Service.</typeparam>
            <param name="client">The Trimble Connect client.</param>
            <param name="apiName">The name of the API.</param>
            <param name="method">The HTTP method. If null HTTP GET is used.</param>
            <param name="parameters">
            A dictionary of user-defined parameters and values to include in the request URI query string.
            </param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> token to observe.</param>
            <returns>The response content from the API invocation.</returns>
            <remarks>
            Normally a specialized wrapper should be preferred to communicate with the TC service.
            This method could be used as an extensibility mechanism when some wrapper is missing from the .NET SDK.
            </remarks>
        </member>
        <member name="T:Trimble.Connect.Client.TrimbleConnectUser">
            <summary>
            A Trimble Connect user.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.TrimbleConnectUser.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.TrimbleConnectUser"/> class.
            </summary>
            <param name="userId">The user identifier.</param>
        </member>
        <member name="P:Trimble.Connect.Client.TrimbleConnectUser.UserId">
            <summary>
            Gets the user identifier.
            </summary>
            <value>The identifier.</value>
            <remarks>
            The wrapper implementation does not use this value internally, 
            Additional information about the user is stored in <see cref="P:Trimble.Connect.Client.TrimbleConnectUser.UserInfo"/> 
            </remarks>
        </member>
        <member name="P:Trimble.Connect.Client.TrimbleConnectUser.AuthenticationToken">
            <summary>
            Gets or sets a Trimble Connect Services authentication token for the user given by the <see cref="P:Trimble.Connect.Client.TrimbleConnectUser.UserId"/>. 
            If non-null, the authentication token will be included in all requests made to the Trimble Connect Service, 
            allowing the client to perform all actions that require authenticated-user level permissions.
            </summary>
            <value>The token.</value>
        </member>
        <member name="P:Trimble.Connect.Client.TrimbleConnectUser.UserInfo">
            <summary>
            Gets the Trimble connect user information.
            </summary>
            <value>The user Information.</value>
        </member>
        <member name="T:Trimble.Connect.Client.UnixDateConverter">
            <summary>
            The date convertor for Unix epoch dates.
            </summary>
        </member>
        <member name="F:Trimble.Connect.Client.UnixDateConverter.Epoch">
            <summary>
            The Date time epoch.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.UnixDateConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the json.
            </summary>
            <param name="reader">The json Reader.</param>
            <param name="objectType">The object type.</param>
            <param name="existingValue">The existing value of object.</param>
            <param name="serializer">The json serializer.</param>
            <returns>Read Json.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.UnixDateConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the json.
            </summary>
            <param name="writer">The json writer.</param>
            <param name="value">The value.</param>
            <param name="serializer">The Json Serializer.</param>
        </member>
        <member name="T:Trimble.Connect.Client.ViewGroupsController">
            <summary>
            The controller for view groups. Implements operations for <see cref="T:Trimble.Connect.Client.Models.ViewGroup"/> entities.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.ViewGroupsController.#ctor(Trimble.Connect.Client.ProjectClient)">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.ViewGroupsController"/> class.
            </summary>
            <param name="projectClient">The project client.</param>
        </member>
        <member name="T:Trimble.Connect.Client.Views2DController">
            <summary>
            The controller for 2D views. Implements operations for <see cref="T:Trimble.Connect.Client.Models.View2D"/> entities.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.Views2DController.#ctor(Trimble.Connect.Client.ProjectClient)">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.Views2DController"/> class.
            </summary>
            <param name="projectClient">The project client.</param>
        </member>
        <member name="M:Trimble.Connect.Client.Views2DController.CreateAsync(Trimble.Connect.Client.Models.View2D,System.IO.Stream,System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a new view with thumbnail.
            </summary>
            <param name="view">
            The template with view properties. 
            Some of the properties in the template are ignored and assigned by server (timestamps, creator identifier).
            </param>
            <param name="stream">
            The stream to read the thumbnail content from. 
            The stream is closed automatically when request is completed. 
            Can be null to create view without thumbnail.
            </param>
            <param name="contentType">The thumbnail content type.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The information about created view.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.Views2DController.UpdateAsync(Trimble.Connect.Client.Models.View2D,System.IO.Stream,System.String,System.Threading.CancellationToken)">
            <summary>
            Updates a view with thumbnail.
            </summary>
            <param name="view">The new view state.</param>
            <param name="stream">
            The stream to read the thumbnail content from. 
            The stream is closed automatically when request is completed. 
            Can be null to update view without changing thumbnail.
            </param>
            <param name="contentType">The thumbnail content type.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The result view state.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.Views2DController.CreateOrUpdateAsync(System.Net.Http.HttpMethod,System.String,Trimble.Connect.Client.Models.View2D,System.IO.Stream,System.String,System.Threading.CancellationToken)">
            <summary>
            Updates a view with thumbnail.
            </summary>
            <param name="method">The method.</param>
            <param name="path">The path.</param>
            <param name="entity">
            The template with entity properties. 
            Some of the properties in the template are ignored and assigned by server (timestamps, creator identifier).
            </param>
            <param name="stream">
            The stream to read the thumbnail content from. 
            The stream is closed automatically when request is completed. 
            Can be null to create view without thumbnail.
            </param>
            <param name="contentType">The thumbnail content type.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The information about created entity.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.Views2DControllerExtensions">
            <summary>
            The extensions for interface to manipulate views.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.Views2DControllerExtensions.GetAllAsync(Trimble.Connect.Client.IViews2DController,Trimble.Connect.Client.Models.FolderItem,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Returns a collection of all views linked to given attachment.
            </summary>
            <param name="client">The views manipulator.</param>
            <param name="file">The file. 
            If <see cref="P:Trimble.Connect.Client.Models.FolderItem.VersionIdentifier"/> is null views linked to all versions of the file are returned.
            </param>
            <param name="parameters">
            A dictionary of user-defined parameters and values to include in the request URI query string.
            </param>
            <param name="pageSize">The page size. default is <c>null</c> that means pagination is controlled by server.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The collection of entities.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.ViewsController">
            <summary>
            The controller for views. Implements operations for <see cref="T:Trimble.Connect.Client.Models.View"/> entities.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.ViewsController.#ctor(Trimble.Connect.Client.ProjectClient)">
            <summary>
            Initializes a new instance of the <see cref="T:Trimble.Connect.Client.ViewsController"/> class.
            </summary>
            <param name="projectClient">The project client.</param>
        </member>
        <member name="M:Trimble.Connect.Client.ViewsController.CreateAsync(Trimble.Connect.Client.Models.View,System.IO.Stream,System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a new view with thumbnail.
            </summary>
            <param name="view">
            The template with view properties. 
            Some of the properties in the template are ignored and assigned by server (timestamps, creator identifier).
            </param>
            <param name="stream">
            The stream to read the thumbnail content from. 
            The stream is closed automatically when request is completed. 
            Can be null to create view without thumbnail.
            </param>
            <param name="contentType">The thumbnail content type.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The information about created view.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.ViewsController.UpdateAsync(Trimble.Connect.Client.Models.View,System.IO.Stream,System.String,System.Threading.CancellationToken)">
            <summary>
            Updates a view with thumbnail.
            </summary>
            <param name="view">The new view state.</param>
            <param name="stream">
            The stream to read the thumbnail content from. 
            The stream is closed automatically when request is completed. 
            Can be null to update view without changing thumbnail.
            </param>
            <param name="contentType">The thumbnail content type.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The result view state.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.ViewsController.UploadThumbnailAsync(System.String,System.IO.Stream,System.String,System.Action{System.Net.Http.Handlers.HttpProgressEventArgs},System.Threading.CancellationToken)">
            <summary>
            Uploads the thumbnail.
            </summary>
            <param name="viewId">The view identifier.</param>
            <param name="stream">The stream to read the thumbnail content from. The stream is closed automatically when request is completed.</param>
            <param name="contentType">The content type.</param>
            <param name="progress">The progress callback.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The entity with thumbnail url.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.ViewsController.GetCameraAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the <see cref="T:Trimble.Connect.Client.Models.Camera"/> for the given view.
            </summary>
            <param name="viewId">The view identifier.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The collection of entity.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.ViewsController.UpdateCameraAsync(System.String,Trimble.Connect.Client.Models.Camera,System.Threading.CancellationToken)">
            <summary>
            Sets the <see cref="T:Trimble.Connect.Client.Models.Camera"/> for the given view.
            </summary>
            <param name="viewId">The view identifier.</param>
            <param name="camera">The camera to set.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The camera.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.ViewsController.GetSectionPlanesAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the collection of <see cref="T:Trimble.Connect.Client.Models.SectionPlane"/>s for the given view.
            </summary>
            <param name="viewId">The view identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The collection of <see cref="T:Trimble.Connect.Client.Models.SectionPlane"/>s.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.ViewsController.AddSectionPlanesAsync(System.String,System.Collections.Generic.IEnumerable{Trimble.Connect.Client.Models.SectionPlane},System.Threading.CancellationToken)">
            <summary>
            Adds new <see cref="T:Trimble.Connect.Client.Models.SectionPlane"/>s for the given view.
            </summary>
            <param name="viewId">The view identifier.</param>
            <param name="planes">The section planes to update.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The collection of <see cref="T:Trimble.Connect.Client.Models.SectionPlane"/>s.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.ViewsController.UpdateSectionPlanesAsync(System.String,System.Collections.Generic.IEnumerable{Trimble.Connect.Client.Models.SectionPlane},System.Threading.CancellationToken)">
            <summary>
            Updates the <see cref="T:Trimble.Connect.Client.Models.SectionPlane"/>s for the given view.
            </summary>
            <param name="viewId">The view identifier.</param>
            <param name="planes">The section planes to update.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The collection of <see cref="T:Trimble.Connect.Client.Models.SectionPlane"/>s.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.ViewsController.DeteleSectionPlaneAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes the <see cref="T:Trimble.Connect.Client.Models.SectionPlane"/> in the given view.
            </summary>
            <param name="viewId">The view identifier.</param>
            <param name="sectionPlaneId">The section plane identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The task.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.ViewsController.GetMarkupsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the collection of <see cref="T:Trimble.Connect.Client.Models.Markup"/>s for the given view.
            </summary>
            <param name="viewId">The view identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The collection of <see cref="T:Trimble.Connect.Client.Models.Markup"/>s.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.ViewsController.AddMarkupsAsync(System.String,System.Collections.Generic.IEnumerable{Trimble.Connect.Client.Models.Markup},System.Threading.CancellationToken)">
            <summary>
            Adds new <see cref="T:Trimble.Connect.Client.Models.Markup"/>s for the given view.
            </summary>
            <param name="viewId">The view identifier.</param>
            <param name="markups">The markups to update.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The collection of <see cref="T:Trimble.Connect.Client.Models.Markup"/>s.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.ViewsController.UpdateMarkupsAsync(System.String,System.Collections.Generic.IEnumerable{Trimble.Connect.Client.Models.Markup},System.Threading.CancellationToken)">
            <summary>
            Updates the <see cref="T:Trimble.Connect.Client.Models.Markup"/>s for the given view.
            </summary>
            <param name="viewId">The view identifier.</param>
            <param name="markups">The markups to update.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The collection of <see cref="T:Trimble.Connect.Client.Models.Markup"/>s.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.ViewsController.DeteleMarkupAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes the <see cref="T:Trimble.Connect.Client.Models.Markup"/> in the given view.
            </summary>
            <param name="viewId">The view identifier.</param>
            <param name="markupId">The markup identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The task.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.ViewsController.GetPresentationAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the <see cref="T:Trimble.Connect.Client.Models.ViewPresentation"/> for the given view.
            </summary>
            <param name="viewId">The view identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The presentation.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.ViewsController.UpdatePresentationAsync(System.String,Trimble.Connect.Client.Models.ViewPresentation,System.Threading.CancellationToken)">
            <summary>
            Sets the <see cref="T:Trimble.Connect.Client.Models.ViewPresentation"/> for the given view.
            </summary>
            <param name="viewId">The view identifier.</param>
            <param name="presentation">The presentation to set.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The presentation.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.ViewsController.CreateOrUpdateAsync(System.Net.Http.HttpMethod,System.String,Trimble.Connect.Client.Models.View,System.IO.Stream,System.String,System.Threading.CancellationToken)">
            <summary>
            Updates a view with thumbnail.
            </summary>
            <param name="method">The method.</param>
            <param name="path">The path.</param>
            <param name="entity">
            The template with entity properties. 
            Some of the properties in the template are ignored and assigned by server (timestamps, creator identifier).
            </param>
            <param name="stream">
            The stream to read the thumbnail content from. 
            The stream is closed automatically when request is completed. 
            Can be null to create view without thumbnail.
            </param>
            <param name="contentType">The thumbnail content type.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The information about created entity.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.ViewsController.AddOrUpdateAsync(System.Net.Http.HttpMethod,System.String,System.Collections.Generic.IEnumerable{Trimble.Connect.Client.Models.SectionPlane},System.Threading.CancellationToken)">
            <summary>
            Adds or updates the <see cref="T:Trimble.Connect.Client.Models.SectionPlane"/>s for the given view.
            </summary>
            <param name="method">The method.</param>
            <param name="viewId">The view identifier.</param>
            <param name="planes">The section planes to update.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The collection of <see cref="T:Trimble.Connect.Client.Models.SectionPlane"/>s.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.ViewsController.AddOrUpdateAsync(System.Net.Http.HttpMethod,System.String,System.Collections.Generic.IEnumerable{Trimble.Connect.Client.Models.Markup},System.Threading.CancellationToken)">
            <summary>
            Updates the <see cref="T:Trimble.Connect.Client.Models.Markup"/>s for the given view.
            </summary>
            <param name="method">The method.</param>
            <param name="viewId">The view identifier.</param>
            <param name="markups">The markups to update.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The collection of <see cref="T:Trimble.Connect.Client.Models.Markup"/>s.</returns>
        </member>
        <member name="T:Trimble.Connect.Client.ViewsControllerExtensions">
            <summary>
            The extensions for interface to manipulate views.
            </summary>
        </member>
        <member name="M:Trimble.Connect.Client.ViewsControllerExtensions.GetAllAsync(Trimble.Connect.Client.IViewsController,Trimble.Connect.Client.Models.FolderItem,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Returns a collection of all views linked to given attachment.
            </summary>
            <param name="client">The views manipulator.</param>
            <param name="file">The file. 
            If <see cref="P:Trimble.Connect.Client.Models.FolderItem.VersionIdentifier"/> is null views linked to all versions of the file are returned.
            </param>
            <param name="pageSize">The page size. default is <c>null</c> that means pagination is controlled by server.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The collection of entities.</returns>
        </member>
        <member name="M:Trimble.Connect.Client.ViewsControllerExtensions.GetAllAsync(Trimble.Connect.Client.IViewsController,Trimble.Connect.Client.Models.FolderItem,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Returns a collection of all views linked to given attachment.
            </summary>
            <param name="client">The views manipulator.</param>
            <param name="file">The file. 
            If <see cref="P:Trimble.Connect.Client.Models.FolderItem.VersionIdentifier"/> is null views linked to all versions of the file are returned.
            </param>
            <param name="parameters">
            A dictionary of user-defined parameters and values to include in the request URI query string.
            </param>
            <param name="pageSize">The page size. default is <c>null</c> that means pagination is controlled by server.</param>
            <param name="cancellationToken">The optional cancellation token.</param>
            <returns>The collection of entities.</returns>
        </member>
    </members>
</doc>
